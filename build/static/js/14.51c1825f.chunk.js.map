{"version":3,"sources":["newDesign/client/client.css","newDesign/client/remesa.js"],"names":["module","exports","container","connect","state","userType","auth","userToken","showUserInfo","al","dispatch","onGenerateTransferCode","token","amount","currency","actions","type","a","data","in_Token","in_Amount","in_Currency","onRechargeBallances","code","in_Code","withErrorHandler","props","_useState","useState","_useState2","Object","C_Users_D_Documents_alcance_gitHubAlcance_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","rechargeCode","setRechargeCode","_useState3","_useState4","message","setMessage","userId","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","className","classes","style","display","flexDirection","justifyContent","alignItems","marginLeft","marginRight","marginTop","react_device_detect__WEBPACK_IMPORTED_MODULE_13__","alignContent","marginBottom","borderLeft","concat","color","alcanceOrange","flex","fontSize","width","textAlign","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_11__","label","labelStyle","containerStyle","borderBottom","paddingTop","minHeight","middleContainerStyle","border","inputStyle","outline","elementType","elementConfig","placeholder","defaultValue","value","changed","e","target","onFocus","length","alignSelf","src","error","alt","height","resizeMode","paddingLeft","red","fontFamily","_components_UI_FlashingButton_FlashingButton__WEBPACK_IMPORTED_MODULE_9__","clicked","then","res","status","backgroundColor","borderRadius","fontWeight","axios"],"mappings":"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","file":"static/js/14.51c1825f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"client__container__3PLxi\"};","import React, { useEffect, useState } from 'react';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders';\nimport * as a from '../../store/actions/actionTypes';\nimport * as actions from '../../store/actions/index';\nimport * as _ from 'lodash';\nimport { updateObject, checkValidity, color } from '../../shared/utility';\nimport FlashingButton from '../../components/UI/FlashingButton/FlashingButton';\n/* import Spinner from '../../components/UI/Spinner/Spinner'; */\nimport classes from './client.css';\nimport Input from '../../components/UI/Input/Input';\n\nimport error from '../../assets/images/error.png'\n\nimport { BrowserView, MobileView, /* isBrowser, isMobile */ } from \"react-device-detect\";\nconst Client_Remesa = props => {\n\n\n    const [rechargeCode, setRechargeCode] = useState('');\n    const [message, setMessage] = useState('');\n\n    const { userType, userId } = props;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    //  useEffect(() => { props.onClientDetails(props.userId.toString()).then(res => { if (res.status === '501') { setBalance(0); } if (res.status === '200') { setBalance(res.data.result[0].Balance); }; }); props.onClientTList(props.userId).then(res => { if (res.status === '501') { setTransList([]); } if (res.status === '200') { const list = _.orderBy(res.data.result, 'Date', 'desc'); setTransList([...list]); } }); const interval = setInterval(() => { setCheckTime(Date.now()) }, 5000); return () => { clearInterval(interval) } }, []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    //  useEffect(() => { if ((userType === 'client')) { pendingPayment && setOpenDialog(true); } }, [pendingPayment, userType]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    //  useEffect(() => {\n    //      if ((userType === 'client') && (!stopChecking)) {\n    //          props.onClientCheckPendingPayments(userId).then(res => { if (res.status === '200') { setStopChecking(true); setPendingPayment({ id: res.data.result[0].ID, amount: res.data.result[0].Amount }); } });\n    //      }\n    //  }, [props, checkTime, userType, userId, stopChecking]);\n    const chargeAcount = () => {\n        props.onRechargeBallances(props.userToken, rechargeCode).then(res => {\n\n            if (res.status == 200) { \n                setMessage('Monto ingresado');\n              //  props.history.push('/client')\n            } else setMessage('Código invalido');\n        });\n    }\n    return (<div className={classes.container} style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'stretch', marginLeft: '10px', marginRight: '10px', marginTop: '88px' }}>\n        <MobileView style={{ marginLeft: '20px' }}>\n            <div /* className={classes.container} */ style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'stretch', }}>\n                < div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignContent: 'center', }}>\n                    <div style={{ marginBottom: '4%', borderLeft: `5px solid ${color.alcanceOrange}`, display: 'flex', flex: 1, flexDirection: 'row', justifyContent: 'flex-start', alignContent: 'center', }}>\n                        <label style={{ fontSize: '1.4rem', color: color.alcanceOrange, marginLeft: '10px' }}>{'Código remesa'}</label>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'stretch', width: '100%', textAlign: 'left', marginTop: '40px' }}>\n                        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'stretch', width: '100%', textAlign: 'left' }}>\n                            <label style={{ fontSize: '12px', textAlign: 'left' }} > {'Introduzca el codigo de la remesa que recibiste:'}</label>\n\n                            <Input\n\n                                label={'Código:'}\n                                labelStyle={{ color: color.alcanceOrange, /* fontStyle: 'italic', */ textAlign: 'left', fontSize: '12px' }}\n                                containerStyle={{\n                                    borderBottom: '2px solid #ccc', marginTop: '15px',\n                                    display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'flex-start', alignContent: 'center',\n                                    width: '100%', paddingTop: '2px', minHeight: '50px', fontSize: '12px', marginRight: '5px', marginLeft: '5px',\n                                }}\n                                middleContainerStyle={{ border: 'none', }}\n                                inputStyle={{ minHeight: '50px', border: 'none', fontSize: '14px', outline: 'none' }}\n                                // leftImage={require(\"../../assets/images/user.png\")}\n                                elementType='input'\n                                elementConfig={{ type: 'text', placeholder: '', }}\n                                defaultValue={''}\n                                value={rechargeCode||''}\n                                // invalid={!emailValid}\n                                // shouldValidate={{ required: true, isEmail: true }}\n                                // touched={emailTouched}\n                                changed={(e) => { setRechargeCode(e.target.value) }}\n                                onFocus={(e) => { setMessage(''); }}\n                            />\n                        </div>\n                        {message && message.length > 2 && <div style={{ marginTop: '15px', marginBottom: '15px', display: 'flex', flex: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', alignSelf: 'center', }}>\n                            <img src={error} alt=\"error\" style={{ width: '25px', height: '25px', resizeMode: 'contain', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginLeft: '0px' }} />\n                            <label style={{ paddingLeft: '5px', color: color.red, fontSize: '12px' }}>{message}</label>\n                        </div>\n                        }\n                        <div style={{ marginTop: '12px', marginBottom: '12px', fontSize: ' bold', textAlign: ' center', display: 'flex', justifyContent: 'center', fontFamily: 'AvenirBlack', width: '40%', height: '30%', alignSelf: 'center' }}                                        >\n                            <FlashingButton\n                                clicked={(e) => { chargeAcount() }}\n                                label={'ENVIAR'}\n                                style={{ color: 'white', alignSelf: 'center', backgroundColor: '#f8bb48', borderRadius: '2px', minHeight: '40px', fontWeight: 'bold', textAlign: ' center', }} />\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n\n        </MobileView>\n\n        <BrowserView>\n            <p>UNDER CONSTRUCTION</p>\n        </BrowserView>\n\n\n    </div >);\n}\nconst mapStateToProps = state => {\n    return {\n        userType: state.auth.userType,\n        userToken: state.auth.userToken,\n        showUserInfo: state.al.showUserInfo,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGenerateTransferCode: (token, amount, currency) => dispatch(actions.generateTransferCode({ type: a.VEN_GENERATE_TRANSFER_CODE, data: { in_Token: token, in_Amount: amount, in_Currency: currency } })),\n        onRechargeBallances: (token, code) => dispatch(actions.rechargeBallances({ type: a.VEN_RECHARGE_BALLANCE, data: { in_Token: token, in_Code: code, } })),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Client_Remesa, axios));\n"],"sourceRoot":""}