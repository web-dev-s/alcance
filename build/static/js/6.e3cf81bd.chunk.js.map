{"version":3,"sources":["../node_modules/sdp/sdp.js","../node_modules/react-qr-reader/lib/index.js","../node_modules/react-qr-reader/lib/getDeviceId.js","../node_modules/react-qr-reader/lib/errors.js","../node_modules/react-qr-reader/lib/havePropsChanged.js","../node_modules/react-qr-reader/lib/createBlob.js","../node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","../node_modules/webrtc-adapter/src/js/utils.js","../node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","../node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../node_modules/webrtc-adapter/src/js/edge/getusermedia.js","../node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","../node_modules/webrtc-adapter/src/js/edge/edge_shim.js","../node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","../node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../node_modules/webrtc-adapter/src/js/common_shim.js","../node_modules/webrtc-adapter/src/js/adapter_core.js","../node_modules/webrtc-adapter/src/js/adapter_factory.js"],"names":["SDPUtils","generateIdentifier","Math","random","toString","substr","localCName","splitLines","blob","trim","split","map","line","splitSections","part","index","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","indexOf","parseCandidate","parts","candidate","foundation","substring","component","parseInt","protocol","toLowerCase","priority","ip","address","port","type","i","length","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","push","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","id","direction","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","Object","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","getCryptoParameters","getIceParameters","concat","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","parseSctpDescription","maxMessageSize","parseMLine","maxSizeLine","isNaN","sctpPort","fmt","writeSctpDescription","media","sctp","output","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","version","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","slice","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","charAt","module","exports","_class","_temp","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","React","__webpack_require__","Component","PropTypes","_require","getDeviceId","havePropsChanged","getFacingModePattern","createBlob","workerBlob","propsKeys","_Component","Reader","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","els","state","mirrorVideo","initiate","bind","initiateLegacyMode","check","handleVideo","handleLoadStart","handleInputChange","clearComponent","handleReaderLoad","openImageDialog","handleWorkerMessage","setRefFactory","subClass","superClass","create","constructor","setPrototypeOf","_inherits","worker","Worker","URL","createObjectURL","onmessage","legacyMode","nextProps","changedProps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","prop","delay","timeout","setTimeout","clearTimeout","componentDidUpdate","err","return","nextState","terminate","stopCamera","reader","removeEventListener","img","onError","facingMode","isFirefox","test","navigator","userAgent","supported","mediaDevices","getSupportedConstraints","constraints","ideal","frameRate","min","vConstraintsPromise","Promise","resolve","then","deviceId","video","getUserMedia","catch","preview","srcObject","mozSrcObject","window","src","webkitURL","playsInline","streamTrack","getTracks","stop","addEventListener","setState","streamLabel","label","_props","onLoad","_state","play","_props2","resolution","_els","canvas","width","floor","naturalWidth","videoWidth","height","naturalHeight","videoHeight","hozOffset","vertOffset","ratio","_ratio","previewIsPlaying","readyState","HAVE_ENOUGH_DATA","ctx","getContext","drawImage","imageData","getImageData","postMessage","e","_props3","onScan","data","FileReader","selectedImg","files","readAsDataURL","result","input","click","_this2","element","_props4","style","className","onImageLoad","showViewFinder","hiddenStyle","display","previewStyle","top","left","position","overflow","videoPreviewStyle","objectFit","transform","imgPreviewStyle","createElement","paddingTop","zIndex","boxSizing","border","boxShadow","accept","ref","onChange","propTypes","func","isRequired","oneOfType","number","bool","oneOf","any","string","object","defaultProps","NoVideoInputDevicesError","defaultDeviceIdChooser","filteredDevices","videoDevices","chooseDeviceId","reject","enumerateDevices","devices","device","pattern","_ref","message","Error","prevProps","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","dtlsRole","trackId","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","find","remoteCandidate","addRemoteCandidate","makeError","code","NotSupportedError","InvalidStateError","InvalidAccessError","OperationError","edgeVersion","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","fireAddTrack","pc","receiver","streams","trackEvent","Event","_dispatchEvent","RTCPeerConnection","config","_eventTarget","document","createDocumentFragment","method","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","hasTurn","server","urls","url","console","warn","isString","filterIceServers","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","get","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","s","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","clonedStream","clone","idx","clonedTrack","enabled","removeTrack","sender","t","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","bufferedCandidateEvents","bufferCandidates","end","_gather","onlocalcandidate","evt","sdpMid","cand","serializedCandidate","toJSON","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","encodings","p","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","start","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","c","MediaStream","default","RTCRtpReceiver","getCapabilities","isNewTrack","nativeTrack","removeTrackFromStreamAndFireEvent","sid","item","close","newState","states","new","closed","checking","connected","completed","disconnected","failed","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","addIceCandidate","candidateString","getStats","selector","MediaStreamTrack","senderOrReceiver","promises","all","allStats","results","Map","stats","stat","set","ortcObjectName","nativeGetstats","apply","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","methods","nativeMethod","args","error","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","wrapPeerConnectionEvent","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","cb","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","disableLog","disableWarnings","log","deprecated","oldMethod","newMethod","detectBrowser","browser","mozGetUserMedia","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","supportsUnifiedPlan","RTCRtpTransceiver","isObject","val","compactObject","reduce","accumulator","isObj","isEmptyObject","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","walkStats","base","resultSet","has","endsWith","getusermedia_logging","shimGetUserMedia","browserDetails","constraintsToChrome_","cc","r","exact","max","oldname_","oc","mix","advanced","shimConstraints_","audio","remap","a","b","face","matches","getSupportedFacingModeLies","dev","d","some","includes","shimError_","PermissionDeniedError","PermissionDismissedError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraint","constraintName","onSuccess","origGetUserMedia","cs","DOMException","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","heightSpecified","frameRateSpecified","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","shimMediaStream","webkitMediaStream","shimOnTrack","_ontrack","f","origSetRemoteDescription","_ontrackpoly","te","shimGetSendersWithDtmf","shimSenderWithDtmf","dtmf","_dtmf","createDTMFSender","_pc","_senders","origAddTrack","origRemoveTrack","origAddStream","origRemoveStream","_this3","origGetSenders","_this4","senders","shimGetStats","origGetStats","_this5","_arguments","Array","onSucc","onErr","fixChromeStats_","response","standardReport","report","standardStats","timestamp","names","makeMapStats","successCallbackWrapper_","shimSenderReceiverGetStats","_this6","origGetReceivers","_this7","receivers","srcElement","shimAddTrackRemoveTrackWithNative","_this8","_shimmedLocalStreams","streamId","_this9","existingSenders","newSenders","newSender","_this10","shimAddTrackRemoveTrack","origGetLocalStreams","_this11","nativeStreams","_reverseStreams","_this12","_streams","newStream","_this13","alreadyExists","oldStream","methodObj","_this14","isLegacyCall","replaceInternalStreamId","origSetLocalDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","_this15","streamid","internalId","externalStream","internalStream","replace","RegExp","shimPeerConnection","RTCIceCandidate","nativeAddIceCandidate","fixNegotiationNeeded","getusermedia_shimGetUserMedia","getdisplaymedia_shimGetDisplayMedia","edge_shim_shimPeerConnection","origMSTEnabled","ev","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","rtcpeerconnection_default","validTurn","startsWith","shimReplaceTrack","replaceTrack","setTrack","firefox_getusermedia_shimGetUserMedia","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","firefox_getdisplaymedia_shimGetDisplayMedia","preferredMediaSource","mediaSource","firefox_shim_shimOnTrack","RTCTrackEvent","firefox_shim_shimPeerConnection","mozRTCPeerConnection","modernStatsTypes","nativeGetStats","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","initParameters","shouldPerformCheck","sendEncodings","encodingParam","rid","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","getParameters","setParameters","shimCreateOffer","origCreateOffer","_arguments2","finally","shimCreateAnswer","origCreateAnswer","_arguments3","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","successCallback","failureCallback","options","promise","withCallback","safari_shim_shimGetUserMedia","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","audioTransceiver","getTransceivers","setDirection","videoTransceiver","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sdp_default","augmentedCandidate","shimMaxMessageSize","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","_this$getConfiguratio","sdpSemantics","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","shimSendThrowTypeError","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","dc","origDataChannelSend","size","byteLength","shimConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","removeAllowExtmapMixed","nativeSRD","adapter_core_adapter","shimChrome","shimFirefox","shimEdge","shimSafari","logging","adapter","commonShim","common_shim_namespaceObject","chrome_shim_namespaceObject","browserShim","firefox_shim_namespaceObject","edge_shim_namespaceObject","safari_shim_namespaceObject","adapterFactory","__webpack_exports__"],"mappings":"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","file":"static/js/6.e3cf81bd.chunk.js","sourcesContent":["/* eslint-env node */\n'use strict'; // SDP helpers.\n\nvar SDPUtils = {}; // Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\n\nSDPUtils.generateIdentifier = function () {\n  return Math.random().toString(36).substr(2, 10);\n}; // The RTCP CNAME used by all peerconnections from the same JS.\n\n\nSDPUtils.localCName = SDPUtils.generateIdentifier(); // Splits SDP into lines, dealing with both CRLF and LF.\n\nSDPUtils.splitLines = function (blob) {\n  return blob.trim().split('\\n').map(function (line) {\n    return line.trim();\n  });\n}; // Splits SDP into sessionpart and mediasections. Ensures CRLF.\n\n\nSDPUtils.splitSections = function (blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function (part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n}; // returns the session description.\n\n\nSDPUtils.getDescription = function (blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n}; // returns the individual media sections.\n\n\nSDPUtils.getMediaSections = function (blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n}; // Returns lines that start with a certain prefix.\n\n\nSDPUtils.matchPrefix = function (blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function (line) {\n    return line.indexOf(prefix) === 0;\n  });\n}; // Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n\n\nSDPUtils.parseCandidate = function (line) {\n  var parts; // Parse both variants.\n\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4],\n    // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n\n        candidate.usernameFragment = parts[i + 1];\n        break;\n\n      default:\n        // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n\n  return candidate;\n}; // Translates a candidate object into SDP candidate attribute.\n\n\nSDPUtils.writeCandidate = function (candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n\n  if (type !== 'host' && candidate.relatedAddress && candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n\n  return 'candidate:' + sdp.join(' ');\n}; // Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\n\n\nSDPUtils.parseIceOptions = function (line) {\n  return line.substr(14).split(' ');\n}; // Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\n\n\nSDPUtils.parseRtpMap = function (line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n\n  };\n  parts = parts[0].split('/');\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1; // legacy alias, got renamed back to channels in ORTC.\n\n  parsed.numChannels = parsed.channels;\n  return parsed;\n}; // Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\n\n\nSDPUtils.writeRtpMap = function (codec) {\n  var pt = codec.payloadType;\n\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate + (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n}; // Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\n\n\nSDPUtils.parseExtmap = function (line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n}; // Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\n\n\nSDPUtils.writeExtmap = function (headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) + (headerExtension.direction && headerExtension.direction !== 'sendrecv' ? '/' + headerExtension.direction : '') + ' ' + headerExtension.uri + '\\r\\n';\n}; // Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\n\n\nSDPUtils.parseFmtp = function (line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n\n  return parsed;\n}; // Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\n\n\nSDPUtils.writeFmtp = function (codec) {\n  var line = '';\n  var pt = codec.payloadType;\n\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function (param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n\n  return line;\n}; // Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\n\n\nSDPUtils.parseRtcpFb = function (line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n}; // Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\n\n\nSDPUtils.writeRtcpFb = function (codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function (fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type + (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') + '\\r\\n';\n    });\n  }\n\n  return lines;\n}; // Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\n\n\nSDPUtils.parseSsrcMedia = function (line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function (line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function (ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n}; // Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\n\n\nSDPUtils.getMid = function (mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function (line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(),\n    // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n}; // Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\n\n\nSDPUtils.getDtlsParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=fingerprint:'); // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n}; // Serializes DTLS parameters to SDP.\n\n\nSDPUtils.writeDtlsParameters = function (params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function (fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n}; // Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\n\n\nSDPUtils.parseCryptoLine = function (line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts[3]\n  };\n};\n\nSDPUtils.writeCryptoLine = function (parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' + parameters.cryptoSuite + ' ' + parameters.keyParams + (parameters.sessionParams ? ' ' + parameters.sessionParams : '') + '\\r\\n';\n}; // Extracts all SDES paramters.\n\n\nSDPUtils.getCryptoParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n}; // Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\n\n\nSDPUtils.getIceParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection); // Search in session part, too.\n\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function (line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function (line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n}; // Serializes ICE parameters to SDP.\n\n\nSDPUtils.writeIceParameters = function (params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' + 'a=ice-pwd:' + params.password + '\\r\\n';\n}; // Parses the SDP media section and returns RTCRtpParameters.\n\n\nSDPUtils.parseRtpParameters = function (mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n\n  for (var i = 3; i < mline.length; i++) {\n    // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(mediaSection, 'a=fmtp:' + pt + ' '); // Only the first a=fmtp:<pt> is considered.\n\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:' + pt + ' ').map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec); // parse FEC mechanisms from rtpmap lines.\n\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n\n        default:\n          // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function (line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  }); // FIXME: parse rtcp.\n\n  return description;\n}; // Generates parts of the SDP media section describing the capabilities /\n// parameters.\n\n\nSDPUtils.writeRtpDescription = function (kind, caps) {\n  var sdp = ''; // Build the mline.\n\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function (codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n'; // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n\n  caps.codecs.forEach(function (codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function (codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function (extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  } // FIXME: write fecMechanisms.\n\n\n  return sdp;\n}; // Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\n\n\nSDPUtils.parseRtpEncodingParameters = function (mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1; // filter a=ssrc:... cname:, ignore PlanB-msid\n\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID').map(function (line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function (part) {\n      return parseInt(part, 10);\n    });\n  });\n\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function (codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {\n          ssrc: secondarySsrc\n        };\n      }\n\n      encodingParameters.push(encParam);\n\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  } // we support both b=AS and b=TIAS but interpret AS as TIAS.\n\n\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95 - 50 * 40 * 8;\n    } else {\n      bandwidth = undefined;\n    }\n\n    encodingParameters.forEach(function (params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n\n  return encodingParameters;\n}; // parses http://draft.ortc.org/#rtcrtcpparameters*\n\n\nSDPUtils.parseRtcpParameters = function (mediaSection) {\n  var rtcpParameters = {}; // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (obj) {\n    return obj.attribute === 'cname';\n  })[0];\n\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  } // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n\n\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0; // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n  return rtcpParameters;\n}; // parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\n\n\nSDPUtils.parseMsid = function (mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {\n      stream: parts[0],\n      track: parts[1]\n    };\n  }\n\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {\n      stream: parts[0],\n      track: parts[1]\n    };\n  }\n}; // SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\n\n\nSDPUtils.parseSctpDescription = function (mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0].substr(10).split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n}; // SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\n\n\nSDPUtils.writeSctpDescription = function (media, sctp) {\n  var output = [];\n\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = ['m=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n', 'c=IN IP4 0.0.0.0\\r\\n', 'a=sctp-port:' + sctp.port + '\\r\\n'];\n  } else {\n    output = ['m=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n', 'c=IN IP4 0.0.0.0\\r\\n', 'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'];\n  }\n\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n\n  return output.join('');\n}; // Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\n\n\nSDPUtils.generateSessionId = function () {\n  return Math.random().toString().substr(2, 21);\n}; // Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\n\n\nSDPUtils.writeSessionBoilerplate = function (sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n\n  var user = sessUser || 'thisisadapterortc'; // FIXME: sess-id should be an NTP timestamp.\n\n  return 'v=0\\r\\n' + 'o=' + user + ' ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' + 's=-\\r\\n' + 't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function (transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps); // Map ICE parameters (ufrag, pwd) to SDP.\n\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()); // Map DTLS parameters to SDP.\n\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' + transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid; // for Chrome.\n\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid;\n\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  } // FIXME: this should be written by writeRtpDescription.\n\n\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n\n  return sdp;\n}; // Gets the direction from the mediaSection or the sessionpart.\n\n\nSDPUtils.getDirection = function (mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n\n      default: // FIXME: What should happen here?\n\n    }\n  }\n\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function (mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function (mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function (mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function (mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n}; // a very naive interpretation of a valid SDP.\n\n\nSDPUtils.isValidSDP = function (blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n\n  var lines = SDPUtils.splitLines(blob);\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    } // TODO: check the modifier a bit more.\n\n  }\n\n  return true;\n}; // Expose public methods.\n\n\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}","'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar PropTypes = require('prop-types');\n\nvar _require = require('./getDeviceId'),\n    getDeviceId = _require.getDeviceId,\n    getFacingModePattern = _require.getFacingModePattern;\n\nvar havePropsChanged = require('./havePropsChanged');\n\nvar createBlob = require('./createBlob'); // Require adapter to support older browser implementations\n\n\nrequire('webrtc-adapter'); // Inline worker.js as a string value of workerBlob.\n// eslint-disable-next-line\n\n\nvar workerBlob = createBlob([\"!function(o,e){\\\"object\\\"==typeof exports&&\\\"object\\\"==typeof module?module.exports=e():\\\"function\\\"==typeof define&&define.amd?define([],e):\\\"object\\\"==typeof exports?exports.jsQR=e():o.jsQR=e()}(\\\"undefined\\\"!=typeof self?self:this,function(){return function(o){function e(t){if(r[t])return r[t].exports;var c=r[t]={i:t,l:!1,exports:{}};return o[t].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var r={};return e.m=o,e.c=r,e.d=function(o,r,t){e.o(o,r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!0,get:t})},e.n=function(o){var r=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(r,\\\"a\\\",r),r},e.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},e.p=\\\"\\\",e(e.s=3)}([function(o,e,r){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var t=function(){function o(o,e){this.width=e,this.height=o.length/e,this.data=o}return o.createEmpty=function(e,r){return new o(new Uint8ClampedArray(e*r),e)},o.prototype.get=function(o,e){return!(o<0||o>=this.width||e<0||e>=this.height)&&!!this.data[e*this.width+o]},o.prototype.set=function(o,e,r){this.data[e*this.width+o]=r?1:0},o.prototype.setRegion=function(o,e,r,t,c){for(var s=e;s<e+t;s++)for(var a=o;a<o+r;a++)this.set(a,s,!!c)},o}();e.BitMatrix=t},function(o,e,r){\\\"use strict\\\";function t(o,e){return o^e}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var c=r(2);e.addOrSubtractGF=t;var s=function(){function o(o,e,r){this.primitive=o,this.size=e,this.generatorBase=r,this.expTable=new Array(this.size),this.logTable=new Array(this.size);for(var t=1,s=0;s<this.size;s++)this.expTable[s]=t,(t*=2)>=this.size&&(t=(t^this.primitive)&this.size-1);for(var s=0;s<this.size-1;s++)this.logTable[this.expTable[s]]=s;this.zero=new c.default(this,Uint8ClampedArray.from([0])),this.one=new c.default(this,Uint8ClampedArray.from([1]))}return o.prototype.multiply=function(o,e){return 0===o||0===e?0:this.expTable[(this.logTable[o]+this.logTable[e])%(this.size-1)]},o.prototype.inverse=function(o){if(0===o)throw new Error(\\\"Can't invert 0\\\");return this.expTable[this.size-this.logTable[o]-1]},o.prototype.buildMonomial=function(o,e){if(o<0)throw new Error(\\\"Invalid monomial degree less than 0\\\");if(0===e)return this.zero;var r=new Uint8ClampedArray(o+1);return r[0]=e,new c.default(this,r)},o.prototype.log=function(o){if(0===o)throw new Error(\\\"Can't take log(0)\\\");return this.logTable[o]},o.prototype.exp=function(o){return this.expTable[o]},o}();e.default=s},function(o,e,r){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var t=r(1),c=function(){function o(o,e){if(0===e.length)throw new Error(\\\"No coefficients.\\\");this.field=o;var r=e.length;if(r>1&&0===e[0]){for(var t=1;t<r&&0===e[t];)t++;if(t===r)this.coefficients=o.zero.coefficients;else{this.coefficients=new Uint8ClampedArray(r-t);for(var c=0;c<this.coefficients.length;c++)this.coefficients[c]=e[t+c]}}else this.coefficients=e}return o.prototype.degree=function(){return this.coefficients.length-1},o.prototype.isZero=function(){return 0===this.coefficients[0]},o.prototype.getCoefficient=function(o){return this.coefficients[this.coefficients.length-1-o]},o.prototype.addOrSubtract=function(e){if(this.isZero())return e;if(e.isZero())return this;var r=this.coefficients,c=e.coefficients;r.length>c.length&&(n=[c,r],r=n[0],c=n[1]);for(var s=new Uint8ClampedArray(c.length),a=c.length-r.length,d=0;d<a;d++)s[d]=c[d];for(var d=a;d<c.length;d++)s[d]=t.addOrSubtractGF(r[d-a],c[d]);return new o(this.field,s);var n},o.prototype.multiply=function(e){if(0===e)return this.field.zero;if(1===e)return this;for(var r=this.coefficients.length,t=new Uint8ClampedArray(r),c=0;c<r;c++)t[c]=this.field.multiply(this.coefficients[c],e);return new o(this.field,t)},o.prototype.multiplyPoly=function(e){if(this.isZero()||e.isZero())return this.field.zero;for(var r=this.coefficients,c=r.length,s=e.coefficients,a=s.length,d=new Uint8ClampedArray(c+a-1),n=0;n<c;n++)for(var l=r[n],i=0;i<a;i++)d[n+i]=t.addOrSubtractGF(d[n+i],this.field.multiply(l,s[i]));return new o(this.field,d)},o.prototype.multiplyByMonomial=function(e,r){if(e<0)throw new Error(\\\"Invalid degree less than 0\\\");if(0===r)return this.field.zero;for(var t=this.coefficients.length,c=new Uint8ClampedArray(t+e),s=0;s<t;s++)c[s]=this.field.multiply(this.coefficients[s],r);return new o(this.field,c)},o.prototype.evaluateAt=function(o){var e=0;if(0===o)return this.getCoefficient(0);var r=this.coefficients.length;if(1===o)return this.coefficients.forEach(function(o){e=t.addOrSubtractGF(e,o)}),e;e=this.coefficients[0];for(var c=1;c<r;c++)e=t.addOrSubtractGF(this.field.multiply(o,e),this.coefficients[c]);return e},o}();e.default=c},function(o,e,r){\\\"use strict\\\";function t(o){var e=n.locate(o);if(!e)return null;var r=d.extract(o,e),t=a.decode(r.matrix);return t?{binaryData:t.bytes,data:t.text,chunks:t.chunks,location:{topRightCorner:r.mappingFunction(e.dimension,0),topLeftCorner:r.mappingFunction(0,0),bottomRightCorner:r.mappingFunction(e.dimension,e.dimension),bottomLeftCorner:r.mappingFunction(0,e.dimension),topRightFinderPattern:e.topRight,topLeftFinderPattern:e.topLeft,bottomLeftFinderPattern:e.bottomLeft,bottomRightAlignmentPattern:e.alignmentPattern}}:null}function c(o,e,r,c){void 0===c&&(c={});var a=l;Object.keys(a||{}).forEach(function(o){a[o]=c[o]||a[o]});var d=\\\"attemptBoth\\\"===a.inversionAttempts||\\\"invertFirst\\\"===a.inversionAttempts,n=\\\"onlyInvert\\\"===a.inversionAttempts||\\\"invertFirst\\\"===a.inversionAttempts,i=s.binarize(o,e,r,d),B=i.binarized,k=i.inverted,u=t(n?k:B);return u||\\\"attemptBoth\\\"!==a.inversionAttempts&&\\\"invertFirst\\\"!==a.inversionAttempts||(u=t(n?B:k)),u}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var s=r(4),a=r(5),d=r(11),n=r(12),l={inversionAttempts:\\\"attemptBoth\\\"};c.default=c,e.default=c},function(o,e,r){\\\"use strict\\\";function t(o,e,r){return o<e?e:o>r?r:o}function c(o,e,r,c){if(o.length!==e*r*4)throw new Error(\\\"Malformed data passed to binarizer.\\\");for(var l=new n(e,r),i=0;i<e;i++)for(var B=0;B<r;B++){var k=o[4*(B*e+i)+0],u=o[4*(B*e+i)+1],C=o[4*(B*e+i)+2];l.set(i,B,.2126*k+.7152*u+.0722*C)}for(var m=Math.ceil(e/a),f=Math.ceil(r/a),w=new n(m,f),P=0;P<f;P++)for(var v=0;v<m;v++){for(var h=0,p=1/0,y=0,B=0;B<a;B++)for(var i=0;i<a;i++){var b=l.get(v*a+i,P*a+B);h+=b,p=Math.min(p,b),y=Math.max(y,b)}var g=h/Math.pow(a,2);if(y-p<=d&&(g=p/2,P>0&&v>0)){var x=(w.get(v,P-1)+2*w.get(v-1,P)+w.get(v-1,P-1))/4;p<x&&(g=x)}w.set(v,P,g)}var M=s.BitMatrix.createEmpty(e,r),L=null;c&&(L=s.BitMatrix.createEmpty(e,r));for(var P=0;P<f;P++)for(var v=0;v<m;v++){for(var N=t(v,2,m-3),I=t(P,2,f-3),h=0,O=-2;O<=2;O++)for(var z=-2;z<=2;z++)h+=w.get(N+O,I+z);for(var S=h/25,O=0;O<a;O++)for(var z=0;z<a;z++){var i=v*a+O,B=P*a+z,X=l.get(i,B);M.set(i,B,X<=S),c&&L.set(i,B,!(X<=S))}}return c?{binarized:M,inverted:L}:{binarized:M}}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var s=r(0),a=8,d=24,n=function(){function o(o,e){this.width=o,this.data=new Uint8ClampedArray(o*e)}return o.prototype.get=function(o,e){return this.data[e*this.width+o]},o.prototype.set=function(o,e,r){this.data[e*this.width+o]=r},o}();e.binarize=c},function(o,e,r){\\\"use strict\\\";function t(o,e){for(var r=o^e,t=0;r;)t++,r&=r-1;return t}function c(o,e){return e<<1|o}function s(o){var e=17+4*o.versionNumber,r=k.BitMatrix.createEmpty(e,e);r.setRegion(0,0,9,9,!0),r.setRegion(e-8,0,8,9,!0),r.setRegion(0,e-8,9,8,!0);for(var t=0,c=o.alignmentPatternCenters;t<c.length;t++)for(var s=c[t],a=0,d=o.alignmentPatternCenters;a<d.length;a++){var n=d[a];6===s&&6===n||6===s&&n===e-7||s===e-7&&6===n||r.setRegion(s-2,n-2,5,5,!0)}return r.setRegion(6,9,1,e-17,!0),r.setRegion(9,6,e-17,1,!0),o.versionNumber>6&&(r.setRegion(e-11,0,3,6,!0),r.setRegion(0,e-11,6,3,!0)),r}function a(o,e,r){for(var t=w[r.dataMask],a=o.height,d=s(e),n=[],l=0,i=0,B=!0,k=a-1;k>0;k-=2){6===k&&k--;for(var u=0;u<a;u++)for(var C=B?a-1-u:u,m=0;m<2;m++){var f=k-m;if(!d.get(f,C)){i++;var P=o.get(f,C);t({y:C,x:f})&&(P=!P),l=c(P,l),8===i&&(n.push(l),i=0,l=0)}}B=!B}return n}function d(o){var e=o.height,r=Math.floor((e-17)/4);if(r<=6)return m.VERSIONS[r-1];for(var s=0,a=5;a>=0;a--)for(var d=e-9;d>=e-11;d--)s=c(o.get(d,a),s);for(var n=0,d=5;d>=0;d--)for(var a=e-9;a>=e-11;a--)n=c(o.get(d,a),n);for(var l,i=1/0,B=0,k=m.VERSIONS;B<k.length;B++){var u=k[B];if(u.infoBits===s||u.infoBits===n)return u;var C=t(s,u.infoBits);C<i&&(l=u,i=C),C=t(n,u.infoBits),C<i&&(l=u,i=C)}return i<=3?l:void 0}function n(o){for(var e=0,r=0;r<=8;r++)6!==r&&(e=c(o.get(r,8),e));for(var s=7;s>=0;s--)6!==s&&(e=c(o.get(8,s),e));for(var a=o.height,d=0,s=a-1;s>=a-7;s--)d=c(o.get(8,s),d);for(var r=a-8;r<a;r++)d=c(o.get(r,8),d);for(var n=1/0,l=null,i=0,B=f;i<B.length;i++){var k=B[i],u=k.bits,C=k.formatInfo;if(u===e||u===d)return C;var m=t(e,u);m<n&&(l=C,n=m),e!==d&&(m=t(d,u))<n&&(l=C,n=m)}return n<=3?l:null}function l(o,e,r){var t=e.errorCorrectionLevels[r],c=[],s=0;if(t.ecBlocks.forEach(function(o){for(var e=0;e<o.numBlocks;e++)c.push({numDataCodewords:o.dataCodewordsPerBlock,codewords:[]}),s+=o.dataCodewordsPerBlock+t.ecCodewordsPerBlock}),o.length<s)return null;o=o.slice(0,s);for(var a=t.ecBlocks[0].dataCodewordsPerBlock,d=0;d<a;d++)for(var n=0,l=c;n<l.length;n++){var i=l[n];i.codewords.push(o.shift())}if(t.ecBlocks.length>1)for(var B=t.ecBlocks[0].numBlocks,k=t.ecBlocks[1].numBlocks,d=0;d<k;d++)c[B+d].codewords.push(o.shift());for(;o.length>0;)for(var u=0,C=c;u<C.length;u++){var i=C[u];i.codewords.push(o.shift())}return c}function i(o){var e=d(o);if(!e)return null;var r=n(o);if(!r)return null;var t=a(o,e,r),c=l(t,e,r.errorCorrectionLevel);if(!c)return null;for(var s=c.reduce(function(o,e){return o+e.numDataCodewords},0),i=new Uint8ClampedArray(s),B=0,k=0,m=c;k<m.length;k++){var f=m[k],w=C.decode(f.codewords,f.codewords.length-f.numDataCodewords);if(!w)return null;for(var P=0;P<f.numDataCodewords;P++)i[B++]=w[P]}try{return u.decode(i,e.versionNumber)}catch(o){return null}}function B(o){if(null==o)return null;var e=i(o);if(e)return e;for(var r=0;r<o.width;r++)for(var t=r+1;t<o.height;t++)o.get(r,t)!==o.get(t,r)&&(o.set(r,t,!o.get(r,t)),o.set(t,r,!o.get(t,r)));return i(o)}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var k=r(0),u=r(6),C=r(9),m=r(10),f=[{bits:21522,formatInfo:{errorCorrectionLevel:1,dataMask:0}},{bits:20773,formatInfo:{errorCorrectionLevel:1,dataMask:1}},{bits:24188,formatInfo:{errorCorrectionLevel:1,dataMask:2}},{bits:23371,formatInfo:{errorCorrectionLevel:1,dataMask:3}},{bits:17913,formatInfo:{errorCorrectionLevel:1,dataMask:4}},{bits:16590,formatInfo:{errorCorrectionLevel:1,dataMask:5}},{bits:20375,formatInfo:{errorCorrectionLevel:1,dataMask:6}},{bits:19104,formatInfo:{errorCorrectionLevel:1,dataMask:7}},{bits:30660,formatInfo:{errorCorrectionLevel:0,dataMask:0}},{bits:29427,formatInfo:{errorCorrectionLevel:0,dataMask:1}},{bits:32170,formatInfo:{errorCorrectionLevel:0,dataMask:2}},{bits:30877,formatInfo:{errorCorrectionLevel:0,dataMask:3}},{bits:26159,formatInfo:{errorCorrectionLevel:0,dataMask:4}},{bits:25368,formatInfo:{errorCorrectionLevel:0,dataMask:5}},{bits:27713,formatInfo:{errorCorrectionLevel:0,dataMask:6}},{bits:26998,formatInfo:{errorCorrectionLevel:0,dataMask:7}},{bits:5769,formatInfo:{errorCorrectionLevel:3,dataMask:0}},{bits:5054,formatInfo:{errorCorrectionLevel:3,dataMask:1}},{bits:7399,formatInfo:{errorCorrectionLevel:3,dataMask:2}},{bits:6608,formatInfo:{errorCorrectionLevel:3,dataMask:3}},{bits:1890,formatInfo:{errorCorrectionLevel:3,dataMask:4}},{bits:597,formatInfo:{errorCorrectionLevel:3,dataMask:5}},{bits:3340,formatInfo:{errorCorrectionLevel:3,dataMask:6}},{bits:2107,formatInfo:{errorCorrectionLevel:3,dataMask:7}},{bits:13663,formatInfo:{errorCorrectionLevel:2,dataMask:0}},{bits:12392,formatInfo:{errorCorrectionLevel:2,dataMask:1}},{bits:16177,formatInfo:{errorCorrectionLevel:2,dataMask:2}},{bits:14854,formatInfo:{errorCorrectionLevel:2,dataMask:3}},{bits:9396,formatInfo:{errorCorrectionLevel:2,dataMask:4}},{bits:8579,formatInfo:{errorCorrectionLevel:2,dataMask:5}},{bits:11994,formatInfo:{errorCorrectionLevel:2,dataMask:6}},{bits:11245,formatInfo:{errorCorrectionLevel:2,dataMask:7}}],w=[function(o){return(o.y+o.x)%2==0},function(o){return o.y%2==0},function(o){return o.x%3==0},function(o){return(o.y+o.x)%3==0},function(o){return(Math.floor(o.y/2)+Math.floor(o.x/3))%2==0},function(o){return o.x*o.y%2+o.x*o.y%3==0},function(o){return(o.y*o.x%2+o.y*o.x%3)%2==0},function(o){return((o.y+o.x)%2+o.y*o.x%3)%2==0}];e.decode=B},function(o,e,r){\\\"use strict\\\";function t(o,e){for(var r=[],t=\\\"\\\",c=[10,12,14][e],s=o.readBits(c);s>=3;){var a=o.readBits(10);if(a>=1e3)throw new Error(\\\"Invalid numeric value above 999\\\");var d=Math.floor(a/100),n=Math.floor(a/10)%10,l=a%10;r.push(48+d,48+n,48+l),t+=d.toString()+n.toString()+l.toString(),s-=3}if(2===s){var a=o.readBits(7);if(a>=100)throw new Error(\\\"Invalid numeric value above 99\\\");var d=Math.floor(a/10),n=a%10;r.push(48+d,48+n),t+=d.toString()+n.toString()}else if(1===s){var a=o.readBits(4);if(a>=10)throw new Error(\\\"Invalid numeric value above 9\\\");r.push(48+a),t+=a.toString()}return{bytes:r,text:t}}function c(o,e){for(var r=[],t=\\\"\\\",c=[9,11,13][e],s=o.readBits(c);s>=2;){var a=o.readBits(11),d=Math.floor(a/45),n=a%45;r.push(k[d].charCodeAt(0),k[n].charCodeAt(0)),t+=k[d]+k[n],s-=2}if(1===s){var d=o.readBits(6);r.push(k[d].charCodeAt(0)),t+=k[d]}return{bytes:r,text:t}}function s(o,e){for(var r=[],t=\\\"\\\",c=[8,16,16][e],s=o.readBits(c),a=0;a<s;a++){var d=o.readBits(8);r.push(d)}try{t+=decodeURIComponent(r.map(function(o){return\\\"%\\\"+(\\\"0\\\"+o.toString(16)).substr(-2)}).join(\\\"\\\"))}catch(o){}return{bytes:r,text:t}}function a(o,e){for(var r=[],t=\\\"\\\",c=[8,10,12][e],s=o.readBits(c),a=0;a<s;a++){var d=o.readBits(13),n=Math.floor(d/192)<<8|d%192;n+=n<7936?33088:49472,r.push(n>>8,255&n),t+=String.fromCharCode(i.shiftJISTable[n])}return{bytes:r,text:t}}function d(o,e){for(var r=new l.BitStream(o),d=e<=9?0:e<=26?1:2,i={text:\\\"\\\",bytes:[],chunks:[]};r.available()>=4;){var k=r.readBits(4);if(k===B.Terminator)return i;if(k===B.ECI)0===r.readBits(1)?i.chunks.push({type:n.ECI,assignmentNumber:r.readBits(7)}):0===r.readBits(1)?i.chunks.push({type:n.ECI,assignmentNumber:r.readBits(14)}):0===r.readBits(1)?i.chunks.push({type:n.ECI,assignmentNumber:r.readBits(21)}):i.chunks.push({type:n.ECI,assignmentNumber:-1});else if(k===B.Numeric){var u=t(r,d);i.text+=u.text,(w=i.bytes).push.apply(w,u.bytes),i.chunks.push({type:n.Numeric,text:u.text})}else if(k===B.Alphanumeric){var C=c(r,d);i.text+=C.text,(P=i.bytes).push.apply(P,C.bytes),i.chunks.push({type:n.Alphanumeric,text:C.text})}else if(k===B.Byte){var m=s(r,d);i.text+=m.text,(v=i.bytes).push.apply(v,m.bytes),i.chunks.push({type:n.Byte,bytes:m.bytes,text:m.text})}else if(k===B.Kanji){var f=a(r,d);i.text+=f.text,(h=i.bytes).push.apply(h,f.bytes),i.chunks.push({type:n.Kanji,bytes:f.bytes,text:f.text})}}var w,P,v,h}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var n,l=r(7),i=r(8);!function(o){o.Numeric=\\\"numeric\\\",o.Alphanumeric=\\\"alphanumeric\\\",o.Byte=\\\"byte\\\",o.Kanji=\\\"kanji\\\",o.ECI=\\\"eci\\\"}(n=e.Mode||(e.Mode={}));var B;!function(o){o[o.Terminator=0]=\\\"Terminator\\\",o[o.Numeric=1]=\\\"Numeric\\\",o[o.Alphanumeric=2]=\\\"Alphanumeric\\\",o[o.Byte=4]=\\\"Byte\\\",o[o.Kanji=8]=\\\"Kanji\\\",o[o.ECI=7]=\\\"ECI\\\"}(B||(B={}));var k=[\\\"0\\\",\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\",\\\"9\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"D\\\",\\\"E\\\",\\\"F\\\",\\\"G\\\",\\\"H\\\",\\\"I\\\",\\\"J\\\",\\\"K\\\",\\\"L\\\",\\\"M\\\",\\\"N\\\",\\\"O\\\",\\\"P\\\",\\\"Q\\\",\\\"R\\\",\\\"S\\\",\\\"T\\\",\\\"U\\\",\\\"V\\\",\\\"W\\\",\\\"X\\\",\\\"Y\\\",\\\"Z\\\",\\\" \\\",\\\"$\\\",\\\"%\\\",\\\"*\\\",\\\"+\\\",\\\"-\\\",\\\".\\\",\\\"/\\\",\\\":\\\"];e.decode=d},function(o,e,r){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var t=function(){function o(o){this.byteOffset=0,this.bitOffset=0,this.bytes=o}return o.prototype.readBits=function(o){if(o<1||o>32||o>this.available())throw new Error(\\\"Cannot read \\\"+o.toString()+\\\" bits\\\");var e=0;if(this.bitOffset>0){var r=8-this.bitOffset,t=o<r?o:r,c=r-t,s=255>>8-t<<c;e=(this.bytes[this.byteOffset]&s)>>c,o-=t,this.bitOffset+=t,8===this.bitOffset&&(this.bitOffset=0,this.byteOffset++)}if(o>0){for(;o>=8;)e=e<<8|255&this.bytes[this.byteOffset],this.byteOffset++,o-=8;if(o>0){var c=8-o,s=255>>c<<c;e=e<<o|(this.bytes[this.byteOffset]&s)>>c,this.bitOffset+=o}}return e},o.prototype.available=function(){return 8*(this.bytes.length-this.byteOffset)-this.bitOffset},o}();e.BitStream=t},function(o,e,r){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.shiftJISTable={32:32,33:33,34:34,35:35,36:36,37:37,38:38,39:39,40:40,41:41,42:42,43:43,44:44,45:45,46:46,47:47,48:48,49:49,50:50,51:51,52:52,53:53,54:54,55:55,56:56,57:57,58:58,59:59,60:60,61:61,62:62,63:63,64:64,65:65,66:66,67:67,68:68,69:69,70:70,71:71,72:72,73:73,74:74,75:75,76:76,77:77,78:78,79:79,80:80,81:81,82:82,83:83,84:84,85:85,86:86,87:87,88:88,89:89,90:90,91:91,92:165,93:93,94:94,95:95,96:96,97:97,98:98,99:99,100:100,101:101,102:102,103:103,104:104,105:105,106:106,107:107,108:108,109:109,110:110,111:111,112:112,113:113,114:114,115:115,116:116,117:117,118:118,119:119,120:120,121:121,122:122,123:123,124:124,125:125,126:8254,33088:12288,33089:12289,33090:12290,33091:65292,33092:65294,33093:12539,33094:65306,33095:65307,33096:65311,33097:65281,33098:12443,33099:12444,33100:180,33101:65344,33102:168,33103:65342,33104:65507,33105:65343,33106:12541,33107:12542,33108:12445,33109:12446,33110:12291,33111:20189,33112:12293,33113:12294,33114:12295,33115:12540,33116:8213,33117:8208,33118:65295,33119:92,33120:12316,33121:8214,33122:65372,33123:8230,33124:8229,33125:8216,33126:8217,33127:8220,33128:8221,33129:65288,33130:65289,33131:12308,33132:12309,33133:65339,33134:65341,33135:65371,33136:65373,33137:12296,33138:12297,33139:12298,33140:12299,33141:12300,33142:12301,33143:12302,33144:12303,33145:12304,33146:12305,33147:65291,33148:8722,33149:177,33150:215,33152:247,33153:65309,33154:8800,33155:65308,33156:65310,33157:8806,33158:8807,33159:8734,33160:8756,33161:9794,33162:9792,33163:176,33164:8242,33165:8243,33166:8451,33167:65509,33168:65284,33169:162,33170:163,33171:65285,33172:65283,33173:65286,33174:65290,33175:65312,33176:167,33177:9734,33178:9733,33179:9675,33180:9679,33181:9678,33182:9671,33183:9670,33184:9633,33185:9632,33186:9651,33187:9650,33188:9661,33189:9660,33190:8251,33191:12306,33192:8594,33193:8592,33194:8593,33195:8595,33196:12307,33208:8712,33209:8715,33210:8838,33211:8839,33212:8834,33213:8835,33214:8746,33215:8745,33224:8743,33225:8744,33226:172,33227:8658,33228:8660,33229:8704,33230:8707,33242:8736,33243:8869,33244:8978,33245:8706,33246:8711,33247:8801,33248:8786,33249:8810,33250:8811,33251:8730,33252:8765,33253:8733,33254:8757,33255:8747,33256:8748,33264:8491,33265:8240,33266:9839,33267:9837,33268:9834,33269:8224,33270:8225,33271:182,33276:9711,33359:65296,33360:65297,33361:65298,33362:65299,33363:65300,33364:65301,33365:65302,33366:65303,33367:65304,33368:65305,33376:65313,33377:65314,33378:65315,33379:65316,33380:65317,33381:65318,33382:65319,33383:65320,33384:65321,33385:65322,33386:65323,33387:65324,33388:65325,33389:65326,33390:65327,33391:65328,33392:65329,33393:65330,33394:65331,33395:65332,33396:65333,33397:65334,33398:65335,33399:65336,33400:65337,33401:65338,33409:65345,33410:65346,33411:65347,33412:65348,33413:65349,33414:65350,33415:65351,33416:65352,33417:65353,33418:65354,33419:65355,33420:65356,33421:65357,33422:65358,33423:65359,33424:65360,33425:65361,33426:65362,33427:65363,33428:65364,33429:65365,33430:65366,33431:65367,33432:65368,33433:65369,33434:65370,33439:12353,33440:12354,33441:12355,33442:12356,33443:12357,33444:12358,33445:12359,33446:12360,33447:12361,33448:12362,33449:12363,33450:12364,33451:12365,33452:12366,33453:12367,33454:12368,33455:12369,33456:12370,33457:12371,33458:12372,33459:12373,33460:12374,33461:12375,33462:12376,33463:12377,33464:12378,33465:12379,33466:12380,33467:12381,33468:12382,33469:12383,33470:12384,33471:12385,33472:12386,33473:12387,33474:12388,33475:12389,33476:12390,33477:12391,33478:12392,33479:12393,33480:12394,33481:12395,33482:12396,33483:12397,33484:12398,33485:12399,33486:12400,33487:12401,33488:12402,33489:12403,33490:12404,33491:12405,33492:12406,33493:12407,33494:12408,33495:12409,33496:12410,33497:12411,33498:12412,33499:12413,33500:12414,33501:12415,33502:12416,33503:12417,33504:12418,33505:12419,33506:12420,33507:12421,33508:12422,33509:12423,33510:12424,33511:12425,33512:12426,33513:12427,33514:12428,33515:12429,33516:12430,33517:12431,33518:12432,33519:12433,33520:12434,33521:12435,33600:12449,33601:12450,33602:12451,33603:12452,33604:12453,33605:12454,33606:12455,33607:12456,33608:12457,33609:12458,33610:12459,33611:12460,33612:12461,33613:12462,33614:12463,33615:12464,33616:12465,33617:12466,33618:12467,33619:12468,33620:12469,33621:12470,33622:12471,33623:12472,33624:12473,33625:12474,33626:12475,33627:12476,33628:12477,33629:12478,33630:12479,33631:12480,33632:12481,33633:12482,33634:12483,33635:12484,33636:12485,33637:12486,33638:12487,33639:12488,33640:12489,33641:12490,33642:12491,33643:12492,33644:12493,33645:12494,33646:12495,33647:12496,33648:12497,33649:12498,33650:12499,33651:12500,33652:12501,33653:12502,33654:12503,33655:12504,33656:12505,33657:12506,33658:12507,33659:12508,33660:12509,33661:12510,33662:12511,33664:12512,33665:12513,33666:12514,33667:12515,33668:12516,33669:12517,33670:12518,33671:12519,33672:12520,33673:12521,33674:12522,33675:12523,33676:12524,33677:12525,33678:12526,33679:12527,33680:12528,33681:12529,33682:12530,33683:12531,33684:12532,33685:12533,33686:12534,33695:913,33696:914,33697:915,33698:916,33699:917,33700:918,33701:919,33702:920,33703:921,33704:922,33705:923,33706:924,33707:925,33708:926,33709:927,33710:928,33711:929,33712:931,33713:932,33714:933,33715:934,33716:935,33717:936,33718:937,33727:945,33728:946,33729:947,33730:948,33731:949,33732:950,33733:951,33734:952,33735:953,33736:954,33737:955,33738:956,33739:957,33740:958,33741:959,33742:960,33743:961,33744:963,33745:964,33746:965,33747:966,33748:967,33749:968,33750:969,33856:1040,33857:1041,33858:1042,33859:1043,33860:1044,33861:1045,33862:1025,33863:1046,33864:1047,33865:1048,33866:1049,33867:1050,33868:1051,33869:1052,33870:1053,33871:1054,33872:1055,33873:1056,33874:1057,33875:1058,33876:1059,33877:1060,33878:1061,33879:1062,33880:1063,33881:1064,33882:1065,33883:1066,33884:1067,33885:1068,33886:1069,33887:1070,33888:1071,33904:1072,33905:1073,33906:1074,33907:1075,33908:1076,33909:1077,33910:1105,33911:1078,33912:1079,33913:1080,33914:1081,33915:1082,33916:1083,33917:1084,33918:1085,33920:1086,33921:1087,33922:1088,33923:1089,33924:1090,33925:1091,33926:1092,33927:1093,33928:1094,33929:1095,33930:1096,33931:1097,33932:1098,33933:1099,33934:1100,33935:1101,33936:1102,33937:1103,33951:9472,33952:9474,33953:9484,33954:9488,33955:9496,33956:9492,33957:9500,33958:9516,33959:9508,33960:9524,33961:9532,33962:9473,33963:9475,33964:9487,33965:9491,33966:9499,33967:9495,33968:9507,33969:9523,33970:9515,33971:9531,33972:9547,33973:9504,33974:9519,33975:9512,33976:9527,33977:9535,33978:9501,33979:9520,33980:9509,33981:9528,33982:9538,34975:20124,34976:21782,34977:23043,34978:38463,34979:21696,34980:24859,34981:25384,34982:23030,34983:36898,34984:33909,34985:33564,34986:31312,34987:24746,34988:25569,34989:28197,34990:26093,34991:33894,34992:33446,34993:39925,34994:26771,34995:22311,34996:26017,34997:25201,34998:23451,34999:22992,35e3:34427,35001:39156,35002:32098,35003:32190,35004:39822,35005:25110,35006:31903,35007:34999,35008:23433,35009:24245,35010:25353,35011:26263,35012:26696,35013:38343,35014:38797,35015:26447,35016:20197,35017:20234,35018:20301,35019:20381,35020:20553,35021:22258,35022:22839,35023:22996,35024:23041,35025:23561,35026:24799,35027:24847,35028:24944,35029:26131,35030:26885,35031:28858,35032:30031,35033:30064,35034:31227,35035:32173,35036:32239,35037:32963,35038:33806,35039:34915,35040:35586,35041:36949,35042:36986,35043:21307,35044:20117,35045:20133,35046:22495,35047:32946,35048:37057,35049:30959,35050:19968,35051:22769,35052:28322,35053:36920,35054:31282,35055:33576,35056:33419,35057:39983,35058:20801,35059:21360,35060:21693,35061:21729,35062:22240,35063:23035,35064:24341,35065:39154,35066:28139,35067:32996,35068:34093,35136:38498,35137:38512,35138:38560,35139:38907,35140:21515,35141:21491,35142:23431,35143:28879,35144:32701,35145:36802,35146:38632,35147:21359,35148:40284,35149:31418,35150:19985,35151:30867,35152:33276,35153:28198,35154:22040,35155:21764,35156:27421,35157:34074,35158:39995,35159:23013,35160:21417,35161:28006,35162:29916,35163:38287,35164:22082,35165:20113,35166:36939,35167:38642,35168:33615,35169:39180,35170:21473,35171:21942,35172:23344,35173:24433,35174:26144,35175:26355,35176:26628,35177:27704,35178:27891,35179:27945,35180:29787,35181:30408,35182:31310,35183:38964,35184:33521,35185:34907,35186:35424,35187:37613,35188:28082,35189:30123,35190:30410,35191:39365,35192:24742,35193:35585,35194:36234,35195:38322,35196:27022,35197:21421,35198:20870,35200:22290,35201:22576,35202:22852,35203:23476,35204:24310,35205:24616,35206:25513,35207:25588,35208:27839,35209:28436,35210:28814,35211:28948,35212:29017,35213:29141,35214:29503,35215:32257,35216:33398,35217:33489,35218:34199,35219:36960,35220:37467,35221:40219,35222:22633,35223:26044,35224:27738,35225:29989,35226:20985,35227:22830,35228:22885,35229:24448,35230:24540,35231:25276,35232:26106,35233:27178,35234:27431,35235:27572,35236:29579,35237:32705,35238:35158,35239:40236,35240:40206,35241:40644,35242:23713,35243:27798,35244:33659,35245:20740,35246:23627,35247:25014,35248:33222,35249:26742,35250:29281,35251:20057,35252:20474,35253:21368,35254:24681,35255:28201,35256:31311,35257:38899,35258:19979,35259:21270,35260:20206,35261:20309,35262:20285,35263:20385,35264:20339,35265:21152,35266:21487,35267:22025,35268:22799,35269:23233,35270:23478,35271:23521,35272:31185,35273:26247,35274:26524,35275:26550,35276:27468,35277:27827,35278:28779,35279:29634,35280:31117,35281:31166,35282:31292,35283:31623,35284:33457,35285:33499,35286:33540,35287:33655,35288:33775,35289:33747,35290:34662,35291:35506,35292:22057,35293:36008,35294:36838,35295:36942,35296:38686,35297:34442,35298:20420,35299:23784,35300:25105,35301:29273,35302:30011,35303:33253,35304:33469,35305:34558,35306:36032,35307:38597,35308:39187,35309:39381,35310:20171,35311:20250,35312:35299,35313:22238,35314:22602,35315:22730,35316:24315,35317:24555,35318:24618,35319:24724,35320:24674,35321:25040,35322:25106,35323:25296,35324:25913,35392:39745,35393:26214,35394:26800,35395:28023,35396:28784,35397:30028,35398:30342,35399:32117,35400:33445,35401:34809,35402:38283,35403:38542,35404:35997,35405:20977,35406:21182,35407:22806,35408:21683,35409:23475,35410:23830,35411:24936,35412:27010,35413:28079,35414:30861,35415:33995,35416:34903,35417:35442,35418:37799,35419:39608,35420:28012,35421:39336,35422:34521,35423:22435,35424:26623,35425:34510,35426:37390,35427:21123,35428:22151,35429:21508,35430:24275,35431:25313,35432:25785,35433:26684,35434:26680,35435:27579,35436:29554,35437:30906,35438:31339,35439:35226,35440:35282,35441:36203,35442:36611,35443:37101,35444:38307,35445:38548,35446:38761,35447:23398,35448:23731,35449:27005,35450:38989,35451:38990,35452:25499,35453:31520,35454:27179,35456:27263,35457:26806,35458:39949,35459:28511,35460:21106,35461:21917,35462:24688,35463:25324,35464:27963,35465:28167,35466:28369,35467:33883,35468:35088,35469:36676,35470:19988,35471:39993,35472:21494,35473:26907,35474:27194,35475:38788,35476:26666,35477:20828,35478:31427,35479:33970,35480:37340,35481:37772,35482:22107,35483:40232,35484:26658,35485:33541,35486:33841,35487:31909,35488:21e3,35489:33477,35490:29926,35491:20094,35492:20355,35493:20896,35494:23506,35495:21002,35496:21208,35497:21223,35498:24059,35499:21914,35500:22570,35501:23014,35502:23436,35503:23448,35504:23515,35505:24178,35506:24185,35507:24739,35508:24863,35509:24931,35510:25022,35511:25563,35512:25954,35513:26577,35514:26707,35515:26874,35516:27454,35517:27475,35518:27735,35519:28450,35520:28567,35521:28485,35522:29872,35523:29976,35524:30435,35525:30475,35526:31487,35527:31649,35528:31777,35529:32233,35530:32566,35531:32752,35532:32925,35533:33382,35534:33694,35535:35251,35536:35532,35537:36011,35538:36996,35539:37969,35540:38291,35541:38289,35542:38306,35543:38501,35544:38867,35545:39208,35546:33304,35547:20024,35548:21547,35549:23736,35550:24012,35551:29609,35552:30284,35553:30524,35554:23721,35555:32747,35556:36107,35557:38593,35558:38929,35559:38996,35560:39e3,35561:20225,35562:20238,35563:21361,35564:21916,35565:22120,35566:22522,35567:22855,35568:23305,35569:23492,35570:23696,35571:24076,35572:24190,35573:24524,35574:25582,35575:26426,35576:26071,35577:26082,35578:26399,35579:26827,35580:26820,35648:27231,35649:24112,35650:27589,35651:27671,35652:27773,35653:30079,35654:31048,35655:23395,35656:31232,35657:32e3,35658:24509,35659:35215,35660:35352,35661:36020,35662:36215,35663:36556,35664:36637,35665:39138,35666:39438,35667:39740,35668:20096,35669:20605,35670:20736,35671:22931,35672:23452,35673:25135,35674:25216,35675:25836,35676:27450,35677:29344,35678:30097,35679:31047,35680:32681,35681:34811,35682:35516,35683:35696,35684:25516,35685:33738,35686:38816,35687:21513,35688:21507,35689:21931,35690:26708,35691:27224,35692:35440,35693:30759,35694:26485,35695:40653,35696:21364,35697:23458,35698:33050,35699:34384,35700:36870,35701:19992,35702:20037,35703:20167,35704:20241,35705:21450,35706:21560,35707:23470,35708:24339,35709:24613,35710:25937,35712:26429,35713:27714,35714:27762,35715:27875,35716:28792,35717:29699,35718:31350,35719:31406,35720:31496,35721:32026,35722:31998,35723:32102,35724:26087,35725:29275,35726:21435,35727:23621,35728:24040,35729:25298,35730:25312,35731:25369,35732:28192,35733:34394,35734:35377,35735:36317,35736:37624,35737:28417,35738:31142,35739:39770,35740:20136,35741:20139,35742:20140,35743:20379,35744:20384,35745:20689,35746:20807,35747:31478,35748:20849,35749:20982,35750:21332,35751:21281,35752:21375,35753:21483,35754:21932,35755:22659,35756:23777,35757:24375,35758:24394,35759:24623,35760:24656,35761:24685,35762:25375,35763:25945,35764:27211,35765:27841,35766:29378,35767:29421,35768:30703,35769:33016,35770:33029,35771:33288,35772:34126,35773:37111,35774:37857,35775:38911,35776:39255,35777:39514,35778:20208,35779:20957,35780:23597,35781:26241,35782:26989,35783:23616,35784:26354,35785:26997,35786:29577,35787:26704,35788:31873,35789:20677,35790:21220,35791:22343,35792:24062,35793:37670,35794:26020,35795:27427,35796:27453,35797:29748,35798:31105,35799:31165,35800:31563,35801:32202,35802:33465,35803:33740,35804:34943,35805:35167,35806:35641,35807:36817,35808:37329,35809:21535,35810:37504,35811:20061,35812:20534,35813:21477,35814:21306,35815:29399,35816:29590,35817:30697,35818:33510,35819:36527,35820:39366,35821:39368,35822:39378,35823:20855,35824:24858,35825:34398,35826:21936,35827:31354,35828:20598,35829:23507,35830:36935,35831:38533,35832:20018,35833:27355,35834:37351,35835:23633,35836:23624,35904:25496,35905:31391,35906:27795,35907:38772,35908:36705,35909:31402,35910:29066,35911:38536,35912:31874,35913:26647,35914:32368,35915:26705,35916:37740,35917:21234,35918:21531,35919:34219,35920:35347,35921:32676,35922:36557,35923:37089,35924:21350,35925:34952,35926:31041,35927:20418,35928:20670,35929:21009,35930:20804,35931:21843,35932:22317,35933:29674,35934:22411,35935:22865,35936:24418,35937:24452,35938:24693,35939:24950,35940:24935,35941:25001,35942:25522,35943:25658,35944:25964,35945:26223,35946:26690,35947:28179,35948:30054,35949:31293,35950:31995,35951:32076,35952:32153,35953:32331,35954:32619,35955:33550,35956:33610,35957:34509,35958:35336,35959:35427,35960:35686,35961:36605,35962:38938,35963:40335,35964:33464,35965:36814,35966:39912,35968:21127,35969:25119,35970:25731,35971:28608,35972:38553,35973:26689,35974:20625,35975:27424,35976:27770,35977:28500,35978:31348,35979:32080,35980:34880,35981:35363,35982:26376,35983:20214,35984:20537,35985:20518,35986:20581,35987:20860,35988:21048,35989:21091,35990:21927,35991:22287,35992:22533,35993:23244,35994:24314,35995:25010,35996:25080,35997:25331,35998:25458,35999:26908,36e3:27177,36001:29309,36002:29356,36003:29486,36004:30740,36005:30831,36006:32121,36007:30476,36008:32937,36009:35211,36010:35609,36011:36066,\\n36012:36562,36013:36963,36014:37749,36015:38522,36016:38997,36017:39443,36018:40568,36019:20803,36020:21407,36021:21427,36022:24187,36023:24358,36024:28187,36025:28304,36026:29572,36027:29694,36028:32067,36029:33335,36030:35328,36031:35578,36032:38480,36033:20046,36034:20491,36035:21476,36036:21628,36037:22266,36038:22993,36039:23396,36040:24049,36041:24235,36042:24359,36043:25144,36044:25925,36045:26543,36046:28246,36047:29392,36048:31946,36049:34996,36050:32929,36051:32993,36052:33776,36053:34382,36054:35463,36055:36328,36056:37431,36057:38599,36058:39015,36059:40723,36060:20116,36061:20114,36062:20237,36063:21320,36064:21577,36065:21566,36066:23087,36067:24460,36068:24481,36069:24735,36070:26791,36071:27278,36072:29786,36073:30849,36074:35486,36075:35492,36076:35703,36077:37264,36078:20062,36079:39881,36080:20132,36081:20348,36082:20399,36083:20505,36084:20502,36085:20809,36086:20844,36087:21151,36088:21177,36089:21246,36090:21402,36091:21475,36092:21521,36160:21518,36161:21897,36162:22353,36163:22434,36164:22909,36165:23380,36166:23389,36167:23439,36168:24037,36169:24039,36170:24055,36171:24184,36172:24195,36173:24218,36174:24247,36175:24344,36176:24658,36177:24908,36178:25239,36179:25304,36180:25511,36181:25915,36182:26114,36183:26179,36184:26356,36185:26477,36186:26657,36187:26775,36188:27083,36189:27743,36190:27946,36191:28009,36192:28207,36193:28317,36194:30002,36195:30343,36196:30828,36197:31295,36198:31968,36199:32005,36200:32024,36201:32094,36202:32177,36203:32789,36204:32771,36205:32943,36206:32945,36207:33108,36208:33167,36209:33322,36210:33618,36211:34892,36212:34913,36213:35611,36214:36002,36215:36092,36216:37066,36217:37237,36218:37489,36219:30783,36220:37628,36221:38308,36222:38477,36224:38917,36225:39321,36226:39640,36227:40251,36228:21083,36229:21163,36230:21495,36231:21512,36232:22741,36233:25335,36234:28640,36235:35946,36236:36703,36237:40633,36238:20811,36239:21051,36240:21578,36241:22269,36242:31296,36243:37239,36244:40288,36245:40658,36246:29508,36247:28425,36248:33136,36249:29969,36250:24573,36251:24794,36252:39592,36253:29403,36254:36796,36255:27492,36256:38915,36257:20170,36258:22256,36259:22372,36260:22718,36261:23130,36262:24680,36263:25031,36264:26127,36265:26118,36266:26681,36267:26801,36268:28151,36269:30165,36270:32058,36271:33390,36272:39746,36273:20123,36274:20304,36275:21449,36276:21766,36277:23919,36278:24038,36279:24046,36280:26619,36281:27801,36282:29811,36283:30722,36284:35408,36285:37782,36286:35039,36287:22352,36288:24231,36289:25387,36290:20661,36291:20652,36292:20877,36293:26368,36294:21705,36295:22622,36296:22971,36297:23472,36298:24425,36299:25165,36300:25505,36301:26685,36302:27507,36303:28168,36304:28797,36305:37319,36306:29312,36307:30741,36308:30758,36309:31085,36310:25998,36311:32048,36312:33756,36313:35009,36314:36617,36315:38555,36316:21092,36317:22312,36318:26448,36319:32618,36320:36001,36321:20916,36322:22338,36323:38442,36324:22586,36325:27018,36326:32948,36327:21682,36328:23822,36329:22524,36330:30869,36331:40442,36332:20316,36333:21066,36334:21643,36335:25662,36336:26152,36337:26388,36338:26613,36339:31364,36340:31574,36341:32034,36342:37679,36343:26716,36344:39853,36345:31545,36346:21273,36347:20874,36348:21047,36416:23519,36417:25334,36418:25774,36419:25830,36420:26413,36421:27578,36422:34217,36423:38609,36424:30352,36425:39894,36426:25420,36427:37638,36428:39851,36429:30399,36430:26194,36431:19977,36432:20632,36433:21442,36434:23665,36435:24808,36436:25746,36437:25955,36438:26719,36439:29158,36440:29642,36441:29987,36442:31639,36443:32386,36444:34453,36445:35715,36446:36059,36447:37240,36448:39184,36449:26028,36450:26283,36451:27531,36452:20181,36453:20180,36454:20282,36455:20351,36456:21050,36457:21496,36458:21490,36459:21987,36460:22235,36461:22763,36462:22987,36463:22985,36464:23039,36465:23376,36466:23629,36467:24066,36468:24107,36469:24535,36470:24605,36471:25351,36472:25903,36473:23388,36474:26031,36475:26045,36476:26088,36477:26525,36478:27490,36480:27515,36481:27663,36482:29509,36483:31049,36484:31169,36485:31992,36486:32025,36487:32043,36488:32930,36489:33026,36490:33267,36491:35222,36492:35422,36493:35433,36494:35430,36495:35468,36496:35566,36497:36039,36498:36060,36499:38604,36500:39164,36501:27503,36502:20107,36503:20284,36504:20365,36505:20816,36506:23383,36507:23546,36508:24904,36509:25345,36510:26178,36511:27425,36512:28363,36513:27835,36514:29246,36515:29885,36516:30164,36517:30913,36518:31034,36519:32780,36520:32819,36521:33258,36522:33940,36523:36766,36524:27728,36525:40575,36526:24335,36527:35672,36528:40235,36529:31482,36530:36600,36531:23437,36532:38635,36533:19971,36534:21489,36535:22519,36536:22833,36537:23241,36538:23460,36539:24713,36540:28287,36541:28422,36542:30142,36543:36074,36544:23455,36545:34048,36546:31712,36547:20594,36548:26612,36549:33437,36550:23649,36551:34122,36552:32286,36553:33294,36554:20889,36555:23556,36556:25448,36557:36198,36558:26012,36559:29038,36560:31038,36561:32023,36562:32773,36563:35613,36564:36554,36565:36974,36566:34503,36567:37034,36568:20511,36569:21242,36570:23610,36571:26451,36572:28796,36573:29237,36574:37196,36575:37320,36576:37675,36577:33509,36578:23490,36579:24369,36580:24825,36581:20027,36582:21462,36583:23432,36584:25163,36585:26417,36586:27530,36587:29417,36588:29664,36589:31278,36590:33131,36591:36259,36592:37202,36593:39318,36594:20754,36595:21463,36596:21610,36597:23551,36598:25480,36599:27193,36600:32172,36601:38656,36602:22234,36603:21454,36604:21608,36672:23447,36673:23601,36674:24030,36675:20462,36676:24833,36677:25342,36678:27954,36679:31168,36680:31179,36681:32066,36682:32333,36683:32722,36684:33261,36685:33311,36686:33936,36687:34886,36688:35186,36689:35728,36690:36468,36691:36655,36692:36913,36693:37195,36694:37228,36695:38598,36696:37276,36697:20160,36698:20303,36699:20805,36700:21313,36701:24467,36702:25102,36703:26580,36704:27713,36705:28171,36706:29539,36707:32294,36708:37325,36709:37507,36710:21460,36711:22809,36712:23487,36713:28113,36714:31069,36715:32302,36716:31899,36717:22654,36718:29087,36719:20986,36720:34899,36721:36848,36722:20426,36723:23803,36724:26149,36725:30636,36726:31459,36727:33308,36728:39423,36729:20934,36730:24490,36731:26092,36732:26991,36733:27529,36734:28147,36736:28310,36737:28516,36738:30462,36739:32020,36740:24033,36741:36981,36742:37255,36743:38918,36744:20966,36745:21021,36746:25152,36747:26257,36748:26329,36749:28186,36750:24246,36751:32210,36752:32626,36753:26360,36754:34223,36755:34295,36756:35576,36757:21161,36758:21465,36759:22899,36760:24207,36761:24464,36762:24661,36763:37604,36764:38500,36765:20663,36766:20767,36767:21213,36768:21280,36769:21319,36770:21484,36771:21736,36772:21830,36773:21809,36774:22039,36775:22888,36776:22974,36777:23100,36778:23477,36779:23558,36780:23567,36781:23569,36782:23578,36783:24196,36784:24202,36785:24288,36786:24432,36787:25215,36788:25220,36789:25307,36790:25484,36791:25463,36792:26119,36793:26124,36794:26157,36795:26230,36796:26494,36797:26786,36798:27167,36799:27189,36800:27836,36801:28040,36802:28169,36803:28248,36804:28988,36805:28966,36806:29031,36807:30151,36808:30465,36809:30813,36810:30977,36811:31077,36812:31216,36813:31456,36814:31505,36815:31911,36816:32057,36817:32918,36818:33750,36819:33931,36820:34121,36821:34909,36822:35059,36823:35359,36824:35388,36825:35412,36826:35443,36827:35937,36828:36062,36829:37284,36830:37478,36831:37758,36832:37912,36833:38556,36834:38808,36835:19978,36836:19976,36837:19998,36838:20055,36839:20887,36840:21104,36841:22478,36842:22580,36843:22732,36844:23330,36845:24120,36846:24773,36847:25854,36848:26465,36849:26454,36850:27972,36851:29366,36852:30067,36853:31331,36854:33976,36855:35698,36856:37304,36857:37664,36858:22065,36859:22516,36860:39166,36928:25325,36929:26893,36930:27542,36931:29165,36932:32340,36933:32887,36934:33394,36935:35302,36936:39135,36937:34645,36938:36785,36939:23611,36940:20280,36941:20449,36942:20405,36943:21767,36944:23072,36945:23517,36946:23529,36947:24515,36948:24910,36949:25391,36950:26032,36951:26187,36952:26862,36953:27035,36954:28024,36955:28145,36956:30003,36957:30137,36958:30495,36959:31070,36960:31206,36961:32051,36962:33251,36963:33455,36964:34218,36965:35242,36966:35386,36967:36523,36968:36763,36969:36914,36970:37341,36971:38663,36972:20154,36973:20161,36974:20995,36975:22645,36976:22764,36977:23563,36978:29978,36979:23613,36980:33102,36981:35338,36982:36805,36983:38499,36984:38765,36985:31525,36986:35535,36987:38920,36988:37218,36989:22259,36990:21416,36992:36887,36993:21561,36994:22402,36995:24101,36996:25512,36997:27700,36998:28810,36999:30561,37e3:31883,37001:32736,37002:34928,37003:36930,37004:37204,37005:37648,37006:37656,37007:38543,37008:29790,37009:39620,37010:23815,37011:23913,37012:25968,37013:26530,37014:36264,37015:38619,37016:25454,37017:26441,37018:26905,37019:33733,37020:38935,37021:38592,37022:35070,37023:28548,37024:25722,37025:23544,37026:19990,37027:28716,37028:30045,37029:26159,37030:20932,37031:21046,37032:21218,37033:22995,37034:24449,37035:24615,37036:25104,37037:25919,37038:25972,37039:26143,37040:26228,37041:26866,37042:26646,37043:27491,37044:28165,37045:29298,37046:29983,37047:30427,37048:31934,37049:32854,37050:22768,37051:35069,37052:35199,37053:35488,37054:35475,37055:35531,37056:36893,37057:37266,37058:38738,37059:38745,37060:25993,37061:31246,37062:33030,37063:38587,37064:24109,37065:24796,37066:25114,37067:26021,37068:26132,37069:26512,37070:30707,37071:31309,37072:31821,37073:32318,37074:33034,37075:36012,37076:36196,37077:36321,37078:36447,37079:30889,37080:20999,37081:25305,37082:25509,37083:25666,37084:25240,37085:35373,37086:31363,37087:31680,37088:35500,37089:38634,37090:32118,37091:33292,37092:34633,37093:20185,37094:20808,37095:21315,37096:21344,37097:23459,37098:23554,37099:23574,37100:24029,37101:25126,37102:25159,37103:25776,37104:26643,37105:26676,37106:27849,37107:27973,37108:27927,37109:26579,37110:28508,37111:29006,37112:29053,37113:26059,37114:31359,37115:31661,37116:32218,37184:32330,37185:32680,37186:33146,37187:33307,37188:33337,37189:34214,37190:35438,37191:36046,37192:36341,37193:36984,37194:36983,37195:37549,37196:37521,37197:38275,37198:39854,37199:21069,37200:21892,37201:28472,37202:28982,37203:20840,37204:31109,37205:32341,37206:33203,37207:31950,37208:22092,37209:22609,37210:23720,37211:25514,37212:26366,37213:26365,37214:26970,37215:29401,37216:30095,37217:30094,37218:30990,37219:31062,37220:31199,37221:31895,37222:32032,37223:32068,37224:34311,37225:35380,37226:38459,37227:36961,37228:40736,37229:20711,37230:21109,37231:21452,37232:21474,37233:20489,37234:21930,37235:22766,37236:22863,37237:29245,37238:23435,37239:23652,37240:21277,37241:24803,37242:24819,37243:25436,37244:25475,37245:25407,37246:25531,37248:25805,37249:26089,37250:26361,37251:24035,37252:27085,37253:27133,37254:28437,37255:29157,37256:20105,37257:30185,37258:30456,37259:31379,37260:31967,37261:32207,37262:32156,37263:32865,37264:33609,37265:33624,37266:33900,37267:33980,37268:34299,37269:35013,37270:36208,37271:36865,37272:36973,37273:37783,37274:38684,37275:39442,37276:20687,37277:22679,37278:24974,37279:33235,37280:34101,37281:36104,37282:36896,37283:20419,37284:20596,37285:21063,37286:21363,37287:24687,37288:25417,37289:26463,37290:28204,37291:36275,37292:36895,37293:20439,37294:23646,37295:36042,37296:26063,37297:32154,37298:21330,37299:34966,37300:20854,37301:25539,37302:23384,37303:23403,37304:23562,37305:25613,37306:26449,37307:36956,37308:20182,37309:22810,37310:22826,37311:27760,37312:35409,37313:21822,37314:22549,37315:22949,37316:24816,37317:25171,37318:26561,37319:33333,37320:26965,37321:38464,37322:39364,37323:39464,37324:20307,37325:22534,37326:23550,37327:32784,37328:23729,37329:24111,37330:24453,37331:24608,37332:24907,37333:25140,37334:26367,37335:27888,37336:28382,37337:32974,37338:33151,37339:33492,37340:34955,37341:36024,37342:36864,37343:36910,37344:38538,37345:40667,37346:39899,37347:20195,37348:21488,37349:22823,37350:31532,37351:37261,37352:38988,37353:40441,37354:28381,37355:28711,37356:21331,37357:21828,37358:23429,37359:25176,37360:25246,37361:25299,37362:27810,37363:28655,37364:29730,37365:35351,37366:37944,37367:28609,37368:35582,37369:33592,37370:20967,37371:34552,37372:21482,37440:21481,37441:20294,37442:36948,37443:36784,37444:22890,37445:33073,37446:24061,37447:31466,37448:36799,37449:26842,37450:35895,37451:29432,37452:40008,37453:27197,37454:35504,37455:20025,37456:21336,37457:22022,37458:22374,37459:25285,37460:25506,37461:26086,37462:27470,37463:28129,37464:28251,37465:28845,37466:30701,37467:31471,37468:31658,37469:32187,37470:32829,37471:32966,37472:34507,37473:35477,37474:37723,37475:22243,37476:22727,37477:24382,37478:26029,37479:26262,37480:27264,37481:27573,37482:30007,37483:35527,37484:20516,37485:30693,37486:22320,37487:24347,37488:24677,37489:26234,37490:27744,37491:30196,37492:31258,37493:32622,37494:33268,37495:34584,37496:36933,37497:39347,37498:31689,37499:30044,37500:31481,37501:31569,37502:33988,37504:36880,37505:31209,37506:31378,37507:33590,37508:23265,37509:30528,37510:20013,37511:20210,37512:23449,37513:24544,37514:25277,37515:26172,37516:26609,37517:27880,37518:34411,37519:34935,37520:35387,37521:37198,37522:37619,37523:39376,37524:27159,37525:28710,37526:29482,37527:33511,37528:33879,37529:36015,37530:19969,37531:20806,37532:20939,37533:21899,37534:23541,37535:24086,37536:24115,37537:24193,37538:24340,37539:24373,37540:24427,37541:24500,37542:25074,37543:25361,37544:26274,37545:26397,37546:28526,37547:29266,37548:30010,37549:30522,37550:32884,37551:33081,37552:33144,37553:34678,37554:35519,37555:35548,37556:36229,37557:36339,37558:37530,37559:38263,37560:38914,37561:40165,37562:21189,37563:25431,37564:30452,37565:26389,37566:27784,37567:29645,37568:36035,37569:37806,37570:38515,37571:27941,37572:22684,37573:26894,37574:27084,37575:36861,37576:37786,37577:30171,37578:36890,37579:22618,37580:26626,37581:25524,37582:27131,37583:20291,37584:28460,37585:26584,37586:36795,37587:34086,37588:32180,37589:37716,37590:26943,37591:28528,37592:22378,37593:22775,37594:23340,37595:32044,37596:29226,37597:21514,37598:37347,37599:40372,37600:20141,37601:20302,37602:20572,37603:20597,37604:21059,37605:35998,37606:21576,37607:22564,37608:23450,37609:24093,37610:24213,37611:24237,37612:24311,37613:24351,37614:24716,37615:25269,37616:25402,37617:25552,37618:26799,37619:27712,37620:30855,37621:31118,37622:31243,37623:32224,37624:33351,37625:35330,37626:35558,37627:36420,37628:36883,37696:37048,37697:37165,37698:37336,37699:40718,37700:27877,37701:25688,37702:25826,37703:25973,37704:28404,37705:30340,37706:31515,37707:36969,37708:37841,37709:28346,37710:21746,37711:24505,37712:25764,37713:36685,37714:36845,37715:37444,37716:20856,37717:22635,37718:22825,37719:23637,37720:24215,37721:28155,37722:32399,37723:29980,37724:36028,37725:36578,37726:39003,37727:28857,37728:20253,37729:27583,37730:28593,37731:3e4,37732:38651,37733:20814,37734:21520,37735:22581,37736:22615,37737:22956,37738:23648,37739:24466,37740:26007,37741:26460,37742:28193,37743:30331,37744:33759,37745:36077,37746:36884,37747:37117,37748:37709,37749:30757,37750:30778,37751:21162,37752:24230,37753:22303,37754:22900,37755:24594,37756:20498,37757:20826,37758:20908,37760:20941,37761:20992,37762:21776,37763:22612,37764:22616,37765:22871,37766:23445,37767:23798,37768:23947,37769:24764,37770:25237,37771:25645,37772:26481,37773:26691,37774:26812,37775:26847,37776:30423,37777:28120,37778:28271,37779:28059,37780:28783,37781:29128,37782:24403,37783:30168,37784:31095,37785:31561,37786:31572,37787:31570,37788:31958,37789:32113,37790:21040,37791:33891,37792:34153,37793:34276,37794:35342,37795:35588,37796:35910,37797:36367,37798:36867,37799:36879,37800:37913,37801:38518,37802:38957,37803:39472,37804:38360,37805:20685,37806:21205,37807:21516,37808:22530,37809:23566,37810:24999,37811:25758,37812:27934,37813:30643,37814:31461,37815:33012,37816:33796,37817:36947,37818:37509,37819:23776,37820:40199,37821:21311,37822:24471,37823:24499,37824:28060,37825:29305,37826:30563,37827:31167,37828:31716,37829:27602,37830:29420,37831:35501,37832:26627,37833:27233,37834:20984,37835:31361,37836:26932,37837:23626,37838:40182,37839:33515,37840:23493,37841:37193,37842:28702,37843:22136,37844:23663,37845:24775,37846:25958,37847:27788,37848:35930,37849:36929,37850:38931,37851:21585,37852:26311,37853:37389,37854:22856,37855:37027,37856:20869,37857:20045,37858:20970,37859:34201,37860:35598,37861:28760,37862:25466,37863:37707,37864:26978,37865:39348,37866:32260,37867:30071,37868:21335,37869:26976,37870:36575,37871:38627,37872:27741,37873:20108,37874:23612,37875:24336,37876:36841,37877:21250,37878:36049,37879:32905,37880:34425,37881:24319,37882:26085,37883:20083,37884:20837,37952:22914,37953:23615,37954:38894,37955:20219,37956:22922,37957:24525,37958:35469,37959:28641,37960:31152,37961:31074,37962:23527,37963:33905,37964:29483,37965:29105,37966:24180,37967:24565,37968:25467,37969:25754,37970:29123,37971:31896,37972:20035,37973:24316,37974:20043,37975:22492,37976:22178,37977:24745,37978:28611,37979:32013,37980:33021,37981:33075,37982:33215,37983:36786,37984:35223,37985:34468,37986:24052,37987:25226,37988:25773,37989:35207,37990:26487,37991:27874,37992:27966,37993:29750,37994:30772,37995:23110,37996:32629,37997:33453,37998:39340,37999:20467,38e3:24259,38001:25309,38002:25490,38003:25943,38004:26479,38005:30403,38006:29260,38007:32972,38008:32954,38009:36649,38010:37197,38011:20493,38012:22521,38013:23186,38014:26757,38016:26995,38017:29028,38018:29437,38019:36023,38020:22770,38021:36064,38022:38506,38023:36889,38024:34687,38025:31204,38026:30695,38027:33833,38028:20271,38029:21093,38030:21338,38031:25293,38032:26575,38033:27850,38034:30333,38035:31636,38036:31893,38037:33334,38038:34180,38039:36843,38040:26333,38041:28448,38042:29190,38043:32283,38044:33707,38045:39361,38046:40614,38047:20989,38048:31665,38049:30834,38050:31672,38051:32903,38052:31560,38053:27368,38054:24161,38055:32908,38056:30033,38057:30048,38058:20843,38059:37474,38060:28300,38061:30330,38062:37271,38063:39658,38064:20240,38065:32624,38066:25244,38067:31567,38068:38309,38069:40169,38070:22138,38071:22617,38072:34532,38073:38588,38074:20276,38075:21028,38076:21322,38077:21453,38078:21467,38079:24070,38080:25644,38081:26001,38082:26495,38083:27710,38084:27726,38085:29256,38086:29359,38087:29677,38088:30036,38089:32321,38090:33324,38091:34281,38092:36009,38093:31684,38094:37318,38095:29033,38096:38930,38097:39151,38098:25405,38099:26217,38100:30058,38101:30436,38102:30928,38103:34115,38104:34542,38105:21290,38106:21329,38107:21542,38108:22915,38109:24199,38110:24444,38111:24754,38112:25161,38113:25209,38114:25259,38115:26e3,38116:27604,38117:27852,38118:30130,38119:30382,38120:30865,38121:31192,38122:32203,38123:32631,38124:32933,38125:34987,38126:35513,38127:36027,38128:36991,38129:38750,38130:39131,38131:27147,38132:31800,38133:20633,38134:23614,38135:24494,38136:26503,38137:27608,38138:29749,38139:30473,38140:32654,38208:40763,38209:26570,38210:31255,38211:21305,38212:30091,38213:39661,38214:24422,38215:33181,38216:33777,38217:32920,38218:24380,38219:24517,38220:30050,38221:31558,38222:36924,38223:26727,38224:23019,38225:23195,38226:32016,38227:30334,38228:35628,38229:20469,38230:24426,38231:27161,38232:27703,38233:28418,38234:29922,38235:31080,38236:34920,38237:35413,38238:35961,38239:24287,38240:25551,38241:30149,38242:31186,38243:33495,38244:37672,38245:37618,38246:33948,38247:34541,38248:39981,38249:21697,38250:24428,38251:25996,38252:27996,38253:28693,38254:36007,38255:36051,38256:38971,38257:25935,38258:29942,38259:19981,38260:20184,38261:22496,38262:22827,38263:23142,38264:23500,38265:20904,38266:24067,38267:24220,38268:24598,38269:25206,38270:25975,38272:26023,38273:26222,38274:28014,38275:29238,38276:31526,38277:33104,38278:33178,38279:33433,38280:35676,38281:36e3,38282:36070,38283:36212,38284:38428,38285:38468,38286:20398,38287:25771,38288:27494,38289:33310,38290:33889,38291:34154,38292:37096,38293:23553,38294:26963,38295:39080,38296:33914,38297:34135,38298:20239,38299:21103,38300:24489,38301:24133,38302:26381,38303:31119,38304:33145,38305:35079,38306:35206,38307:28149,38308:24343,38309:25173,38310:27832,38311:20175,38312:29289,38313:39826,38314:20998,38315:21563,38316:22132,38317:22707,38318:24996,38319:25198,38320:28954,38321:22894,38322:31881,38323:31966,38324:32027,38325:38640,38326:25991,38327:32862,38328:19993,38329:20341,38330:20853,38331:22592,38332:24163,38333:24179,38334:24330,38335:26564,38336:20006,38337:34109,38338:38281,38339:38491,38340:31859,38341:38913,38342:20731,38343:22721,38344:30294,38345:30887,38346:21029,38347:30629,38348:34065,38349:31622,38350:20559,38351:22793,38352:29255,38353:31687,38354:32232,38355:36794,38356:36820,38357:36941,38358:20415,38359:21193,38360:23081,38361:24321,38362:38829,38363:20445,38364:33303,38365:37610,38366:22275,38367:25429,38368:27497,38369:29995,38370:35036,38371:36628,38372:31298,38373:21215,38374:22675,38375:24917,38376:25098,38377:26286,38378:27597,38379:31807,38380:33769,38381:20515,38382:20472,38383:21253,38384:21574,38385:22577,38386:22857,38387:23453,38388:23792,38389:23791,38390:23849,38391:24214,38392:25265,38393:25447,38394:25918,38395:26041,38396:26379,38464:27861,38465:27873,38466:28921,38467:30770,38468:32299,38469:32990,38470:33459,38471:33804,38472:34028,38473:34562,38474:35090,38475:35370,38476:35914,38477:37030,38478:37586,38479:39165,38480:40179,38481:40300,38482:20047,38483:20129,38484:20621,38485:21078,38486:22346,38487:22952,38488:24125,38489:24536,38490:24537,38491:25151,38492:26292,38493:26395,38494:26576,38495:26834,38496:20882,38497:32033,38498:32938,38499:33192,38500:35584,38501:35980,38502:36031,38503:37502,38504:38450,38505:21536,38506:38956,38507:21271,38508:20693,38509:21340,38510:22696,38511:25778,38512:26420,38513:29287,38514:30566,38515:31302,38516:37350,38517:21187,38518:27809,38519:27526,38520:22528,38521:24140,38522:22868,38523:26412,38524:32763,38525:20961,38526:30406,38528:25705,38529:30952,38530:39764,38531:40635,38532:22475,38533:22969,38534:26151,38535:26522,38536:27598,38537:21737,38538:27097,38539:24149,38540:33180,38541:26517,38542:39850,38543:26622,38544:40018,38545:26717,38546:20134,38547:20451,38548:21448,38549:25273,38550:26411,38551:27819,38552:36804,38553:20397,38554:32365,38555:40639,38556:19975,38557:24930,38558:28288,38559:28459,38560:34067,38561:21619,38562:26410,38563:39749,38564:24051,38565:31637,38566:23724,38567:23494,38568:34588,38569:28234,38570:34001,38571:31252,38572:33032,38573:22937,38574:31885,38575:27665,38576:30496,38577:21209,38578:22818,38579:28961,38580:29279,38581:30683,38582:38695,38583:40289,38584:26891,38585:23167,38586:23064,38587:20901,38588:21517,38589:21629,38590:26126,38591:30431,38592:36855,38593:37528,38594:40180,38595:23018,38596:29277,38597:28357,38598:20813,38599:26825,38600:32191,38601:32236,38602:38754,38603:40634,38604:25720,38605:27169,38606:33538,38607:22916,38608:23391,38609:27611,38610:29467,38611:30450,38612:32178,38613:32791,38614:33945,38615:20786,38616:26408,38617:40665,38618:30446,38619:26466,38620:21247,38621:39173,38622:23588,38623:25147,38624:31870,38625:36016,38626:21839,38627:24758,38628:32011,38629:38272,38630:21249,38631:20063,38632:20918,38633:22812,38634:29242,38635:32822,38636:37326,38637:24357,38638:30690,38639:21380,38640:24441,38641:32004,38642:34220,38643:35379,38644:36493,38645:38742,38646:26611,38647:34222,38648:37971,38649:24841,38650:24840,38651:27833,38652:30290,38720:35565,38721:36664,38722:21807,38723:20305,38724:20778,38725:21191,38726:21451,38727:23461,38728:24189,38729:24736,38730:24962,38731:25558,38732:26377,38733:26586,38734:28263,38735:28044,38736:29494,38737:29495,38738:30001,38739:31056,38740:35029,38741:35480,38742:36938,38743:37009,38744:37109,38745:38596,38746:34701,38747:22805,38748:20104,38749:20313,38750:19982,38751:35465,38752:36671,38753:38928,38754:20653,38755:24188,38756:22934,38757:23481,38758:24248,38759:25562,38760:25594,38761:25793,38762:26332,38763:26954,38764:27096,38765:27915,38766:28342,38767:29076,38768:29992,38769:31407,38770:32650,38771:32768,38772:33865,38773:33993,38774:35201,38775:35617,38776:36362,38777:36965,38778:38525,38779:39178,38780:24958,38781:25233,38782:27442,38784:27779,38785:28020,38786:32716,38787:32764,38788:28096,38789:32645,38790:34746,38791:35064,38792:26469,38793:33713,38794:38972,38795:38647,38796:27931,38797:32097,38798:33853,38799:37226,38800:20081,38801:21365,38802:23888,38803:27396,38804:28651,38805:34253,38806:34349,38807:35239,38808:21033,38809:21519,38810:23653,38811:26446,38812:26792,38813:29702,38814:29827,38815:30178,38816:35023,38817:35041,38818:37324,38819:38626,38820:38520,38821:24459,38822:29575,38823:31435,38824:33870,38825:25504,38826:30053,38827:21129,38828:27969,38829:28316,38830:29705,38831:30041,38832:30827,38833:31890,38834:38534,38835:31452,38836:40845,38837:20406,38838:24942,38839:26053,38840:34396,38841:20102,38842:20142,38843:20698,38844:20001,38845:20940,38846:23534,38847:26009,38848:26753,38849:28092,38850:29471,38851:30274,38852:30637,38853:31260,38854:31975,38855:33391,38856:35538,38857:36988,38858:37327,38859:38517,38860:38936,38861:21147,38862:32209,38863:20523,38864:21400,38865:26519,38866:28107,38867:29136,38868:29747,38869:33256,38870:36650,38871:38563,38872:40023,38873:40607,38874:29792,38875:22593,38876:28057,38877:32047,38878:39006,38879:20196,38880:20278,38881:20363,38882:20919,38883:21169,38884:23994,38885:24604,38886:29618,38887:31036,38888:33491,38889:37428,38890:38583,38891:38646,38892:38666,38893:40599,38894:40802,38895:26278,38896:27508,38897:21015,38898:21155,38899:28872,38900:35010,38901:24265,38902:24651,38903:24976,38904:28451,38905:29001,38906:31806,38907:32244,38908:32879,38976:34030,38977:36899,38978:37676,38979:21570,38980:39791,38981:27347,38982:28809,38983:36034,38984:36335,38985:38706,38986:21172,38987:23105,38988:24266,38989:24324,38990:26391,38991:27004,38992:27028,38993:28010,38994:28431,38995:29282,38996:29436,38997:31725,38998:32769,38999:32894,39e3:34635,39001:37070,39002:20845,39003:40595,39004:31108,39005:32907,39006:37682,39007:35542,39008:20525,39009:21644,39010:35441,39011:27498,39012:36036,39013:33031,39014:24785,39015:26528,39016:40434,39017:20121,39018:20120,39019:39952,39020:35435,39021:34241,39022:34152,39023:26880,39024:28286,39025:30871,39026:33109,39071:24332,39072:19984,39073:19989,39074:20010,39075:20017,39076:20022,39077:20028,39078:20031,39079:20034,39080:20054,39081:20056,39082:20098,39083:20101,39084:35947,39085:20106,39086:33298,39087:24333,39088:20110,39089:20126,39090:20127,39091:20128,39092:20130,39093:20144,39094:20147,39095:20150,39096:20174,39097:20173,39098:20164,39099:20166,39100:20162,39101:20183,39102:20190,39103:20205,39104:20191,39105:20215,39106:20233,39107:20314,39108:20272,39109:20315,39110:20317,39111:20311,39112:20295,39113:20342,39114:20360,39115:20367,39116:20376,39117:20347,39118:20329,39119:20336,39120:20369,39121:20335,39122:20358,39123:20374,39124:20760,39125:20436,39126:20447,39127:20430,39128:20440,39129:20443,39130:20433,39131:20442,39132:20432,39133:20452,39134:20453,39135:20506,39136:20520,39137:20500,39138:20522,39139:20517,39140:20485,39141:20252,39142:20470,39143:20513,39144:20521,39145:20524,39146:20478,39147:20463,39148:20497,39149:20486,39150:20547,39151:20551,39152:26371,39153:20565,39154:20560,39155:20552,39156:20570,39157:20566,39158:20588,39159:20600,39160:20608,39161:20634,39162:20613,39163:20660,39164:20658,39232:20681,39233:20682,39234:20659,39235:20674,39236:20694,39237:20702,39238:20709,39239:20717,39240:20707,39241:20718,39242:20729,39243:20725,39244:20745,39245:20737,39246:20738,39247:20758,39248:20757,39249:20756,39250:20762,39251:20769,39252:20794,39253:20791,39254:20796,39255:20795,39256:20799,39257:20800,39258:20818,39259:20812,39260:20820,39261:20834,39262:31480,39263:20841,39264:20842,39265:20846,39266:20864,39267:20866,39268:22232,39269:20876,39270:20873,39271:20879,39272:20881,39273:20883,39274:20885,39275:20886,39276:20900,39277:20902,39278:20898,39279:20905,39280:20906,39281:20907,39282:20915,39283:20913,39284:20914,39285:20912,39286:20917,39287:20925,39288:20933,39289:20937,39290:20955,39291:20960,39292:34389,39293:20969,39294:20973,39296:20976,39297:20981,39298:20990,39299:20996,39300:21003,39301:21012,39302:21006,39303:21031,39304:21034,39305:21038,39306:21043,39307:21049,39308:21071,39309:21060,39310:21067,39311:21068,39312:21086,39313:21076,39314:21098,39315:21108,39316:21097,39317:21107,39318:21119,39319:21117,39320:21133,39321:21140,39322:21138,39323:21105,39324:21128,39325:21137,39326:36776,39327:36775,39328:21164,39329:21165,39330:21180,39331:21173,39332:21185,39333:21197,39334:21207,39335:21214,39336:21219,39337:21222,39338:39149,39339:21216,39340:21235,39341:21237,39342:21240,39343:21241,39344:21254,39345:21256,39346:30008,39347:21261,39348:21264,39349:21263,39350:21269,39351:21274,39352:21283,39353:21295,39354:21297,39355:21299,39356:21304,39357:21312,39358:21318,39359:21317,39360:19991,39361:21321,39362:21325,39363:20950,39364:21342,39365:21353,39366:21358,39367:22808,39368:21371,39369:21367,39370:21378,39371:21398,39372:21408,39373:21414,39374:21413,39375:21422,39376:21424,39377:21430,39378:21443,39379:31762,39380:38617,39381:21471,39382:26364,39383:29166,39384:21486,39385:21480,39386:21485,39387:21498,39388:21505,39389:21565,39390:21568,39391:21548,39392:21549,39393:21564,39394:21550,39395:21558,39396:21545,39397:21533,39398:21582,39399:21647,39400:21621,39401:21646,39402:21599,39403:21617,39404:21623,39405:21616,39406:21650,39407:21627,39408:21632,39409:21622,39410:21636,39411:21648,39412:21638,39413:21703,39414:21666,39415:21688,39416:21669,39417:21676,39418:21700,39419:21704,39420:21672,39488:21675,39489:21698,39490:21668,39491:21694,39492:21692,39493:21720,39494:21733,39495:21734,39496:21775,39497:21780,39498:21757,39499:21742,39500:21741,39501:21754,39502:21730,39503:21817,39504:21824,39505:21859,39506:21836,39507:21806,39508:21852,39509:21829,39510:21846,39511:21847,39512:21816,39513:21811,39514:21853,39515:21913,39516:21888,39517:21679,39518:21898,39519:21919,39520:21883,39521:21886,39522:21912,39523:21918,39524:21934,39525:21884,39526:21891,39527:21929,39528:21895,39529:21928,39530:21978,39531:21957,39532:21983,39533:21956,39534:21980,39535:21988,39536:21972,39537:22036,39538:22007,39539:22038,39540:22014,39541:22013,39542:22043,39543:22009,39544:22094,39545:22096,39546:29151,39547:22068,39548:22070,39549:22066,39550:22072,39552:22123,39553:22116,39554:22063,39555:22124,39556:22122,39557:22150,39558:22144,39559:22154,39560:22176,39561:22164,39562:22159,39563:22181,39564:22190,39565:22198,39566:22196,39567:22210,39568:22204,39569:22209,39570:22211,39571:22208,39572:22216,39573:22222,39574:22225,39575:22227,39576:22231,39577:22254,39578:22265,39579:22272,39580:22271,39581:22276,39582:22281,39583:22280,39584:22283,39585:22285,39586:22291,39587:22296,39588:22294,39589:21959,39590:22300,39591:22310,39592:22327,39593:22328,39594:22350,39595:22331,39596:22336,39597:22351,39598:22377,39599:22464,39600:22408,39601:22369,39602:22399,39603:22409,39604:22419,39605:22432,39606:22451,39607:22436,39608:22442,39609:22448,39610:22467,39611:22470,39612:22484,39613:22482,39614:22483,39615:22538,39616:22486,39617:22499,39618:22539,39619:22553,39620:22557,39621:22642,39622:22561,39623:22626,39624:22603,39625:22640,39626:27584,39627:22610,39628:22589,39629:22649,39630:22661,39631:22713,39632:22687,39633:22699,39634:22714,39635:22750,39636:22715,39637:22712,39638:22702,39639:22725,39640:22739,39641:22737,39642:22743,39643:22745,39644:22744,39645:22757,39646:22748,39647:22756,39648:22751,39649:22767,39650:22778,39651:22777,39652:22779,39653:22780,39654:22781,39655:22786,39656:22794,39657:22800,39658:22811,39659:26790,39660:22821,39661:22828,39662:22829,39663:22834,39664:22840,39665:22846,39666:31442,39667:22869,39668:22864,39669:22862,39670:22874,39671:22872,39672:22882,39673:22880,\\n39674:22887,39675:22892,39676:22889,39744:22904,39745:22913,39746:22941,39747:20318,39748:20395,39749:22947,39750:22962,39751:22982,39752:23016,39753:23004,39754:22925,39755:23001,39756:23002,39757:23077,39758:23071,39759:23057,39760:23068,39761:23049,39762:23066,39763:23104,39764:23148,39765:23113,39766:23093,39767:23094,39768:23138,39769:23146,39770:23194,39771:23228,39772:23230,39773:23243,39774:23234,39775:23229,39776:23267,39777:23255,39778:23270,39779:23273,39780:23254,39781:23290,39782:23291,39783:23308,39784:23307,39785:23318,39786:23346,39787:23248,39788:23338,39789:23350,39790:23358,39791:23363,39792:23365,39793:23360,39794:23377,39795:23381,39796:23386,39797:23387,39798:23397,39799:23401,39800:23408,39801:23411,39802:23413,39803:23416,39804:25992,39805:23418,39806:23424,39808:23427,39809:23462,39810:23480,39811:23491,39812:23495,39813:23497,39814:23508,39815:23504,39816:23524,39817:23526,39818:23522,39819:23518,39820:23525,39821:23531,39822:23536,39823:23542,39824:23539,39825:23557,39826:23559,39827:23560,39828:23565,39829:23571,39830:23584,39831:23586,39832:23592,39833:23608,39834:23609,39835:23617,39836:23622,39837:23630,39838:23635,39839:23632,39840:23631,39841:23409,39842:23660,39843:23662,39844:20066,39845:23670,39846:23673,39847:23692,39848:23697,39849:23700,39850:22939,39851:23723,39852:23739,39853:23734,39854:23740,39855:23735,39856:23749,39857:23742,39858:23751,39859:23769,39860:23785,39861:23805,39862:23802,39863:23789,39864:23948,39865:23786,39866:23819,39867:23829,39868:23831,39869:23900,39870:23839,39871:23835,39872:23825,39873:23828,39874:23842,39875:23834,39876:23833,39877:23832,39878:23884,39879:23890,39880:23886,39881:23883,39882:23916,39883:23923,39884:23926,39885:23943,39886:23940,39887:23938,39888:23970,39889:23965,39890:23980,39891:23982,39892:23997,39893:23952,39894:23991,39895:23996,39896:24009,39897:24013,39898:24019,39899:24018,39900:24022,39901:24027,39902:24043,39903:24050,39904:24053,39905:24075,39906:24090,39907:24089,39908:24081,39909:24091,39910:24118,39911:24119,39912:24132,39913:24131,39914:24128,39915:24142,39916:24151,39917:24148,39918:24159,39919:24162,39920:24164,39921:24135,39922:24181,39923:24182,39924:24186,39925:40636,39926:24191,39927:24224,39928:24257,39929:24258,39930:24264,39931:24272,39932:24271,4e4:24278,40001:24291,40002:24285,40003:24282,40004:24283,40005:24290,40006:24289,40007:24296,40008:24297,40009:24300,40010:24305,40011:24307,40012:24304,40013:24308,40014:24312,40015:24318,40016:24323,40017:24329,40018:24413,40019:24412,40020:24331,40021:24337,40022:24342,40023:24361,40024:24365,40025:24376,40026:24385,40027:24392,40028:24396,40029:24398,40030:24367,40031:24401,40032:24406,40033:24407,40034:24409,40035:24417,40036:24429,40037:24435,40038:24439,40039:24451,40040:24450,40041:24447,40042:24458,40043:24456,40044:24465,40045:24455,40046:24478,40047:24473,40048:24472,40049:24480,40050:24488,40051:24493,40052:24508,40053:24534,40054:24571,40055:24548,40056:24568,40057:24561,40058:24541,40059:24755,40060:24575,40061:24609,40062:24672,40064:24601,40065:24592,40066:24617,40067:24590,40068:24625,40069:24603,40070:24597,40071:24619,40072:24614,40073:24591,40074:24634,40075:24666,40076:24641,40077:24682,40078:24695,40079:24671,40080:24650,40081:24646,40082:24653,40083:24675,40084:24643,40085:24676,40086:24642,40087:24684,40088:24683,40089:24665,40090:24705,40091:24717,40092:24807,40093:24707,40094:24730,40095:24708,40096:24731,40097:24726,40098:24727,40099:24722,40100:24743,40101:24715,40102:24801,40103:24760,40104:24800,40105:24787,40106:24756,40107:24560,40108:24765,40109:24774,40110:24757,40111:24792,40112:24909,40113:24853,40114:24838,40115:24822,40116:24823,40117:24832,40118:24820,40119:24826,40120:24835,40121:24865,40122:24827,40123:24817,40124:24845,40125:24846,40126:24903,40127:24894,40128:24872,40129:24871,40130:24906,40131:24895,40132:24892,40133:24876,40134:24884,40135:24893,40136:24898,40137:24900,40138:24947,40139:24951,40140:24920,40141:24921,40142:24922,40143:24939,40144:24948,40145:24943,40146:24933,40147:24945,40148:24927,40149:24925,40150:24915,40151:24949,40152:24985,40153:24982,40154:24967,40155:25004,40156:24980,40157:24986,40158:24970,40159:24977,40160:25003,40161:25006,40162:25036,40163:25034,40164:25033,40165:25079,40166:25032,40167:25027,40168:25030,40169:25018,40170:25035,40171:32633,40172:25037,40173:25062,40174:25059,40175:25078,40176:25082,40177:25076,40178:25087,40179:25085,40180:25084,40181:25086,40182:25088,40183:25096,40184:25097,40185:25101,40186:25100,40187:25108,40188:25115,40256:25118,40257:25121,40258:25130,40259:25134,40260:25136,40261:25138,40262:25139,40263:25153,40264:25166,40265:25182,40266:25187,40267:25179,40268:25184,40269:25192,40270:25212,40271:25218,40272:25225,40273:25214,40274:25234,40275:25235,40276:25238,40277:25300,40278:25219,40279:25236,40280:25303,40281:25297,40282:25275,40283:25295,40284:25343,40285:25286,40286:25812,40287:25288,40288:25308,40289:25292,40290:25290,40291:25282,40292:25287,40293:25243,40294:25289,40295:25356,40296:25326,40297:25329,40298:25383,40299:25346,40300:25352,40301:25327,40302:25333,40303:25424,40304:25406,40305:25421,40306:25628,40307:25423,40308:25494,40309:25486,40310:25472,40311:25515,40312:25462,40313:25507,40314:25487,40315:25481,40316:25503,40317:25525,40318:25451,40320:25449,40321:25534,40322:25577,40323:25536,40324:25542,40325:25571,40326:25545,40327:25554,40328:25590,40329:25540,40330:25622,40331:25652,40332:25606,40333:25619,40334:25638,40335:25654,40336:25885,40337:25623,40338:25640,40339:25615,40340:25703,40341:25711,40342:25718,40343:25678,40344:25898,40345:25749,40346:25747,40347:25765,40348:25769,40349:25736,40350:25788,40351:25818,40352:25810,40353:25797,40354:25799,40355:25787,40356:25816,40357:25794,40358:25841,40359:25831,40360:33289,40361:25824,40362:25825,40363:25260,40364:25827,40365:25839,40366:25900,40367:25846,40368:25844,40369:25842,40370:25850,40371:25856,40372:25853,40373:25880,40374:25884,40375:25861,40376:25892,40377:25891,40378:25899,40379:25908,40380:25909,40381:25911,40382:25910,40383:25912,40384:30027,40385:25928,40386:25942,40387:25941,40388:25933,40389:25944,40390:25950,40391:25949,40392:25970,40393:25976,40394:25986,40395:25987,40396:35722,40397:26011,40398:26015,40399:26027,40400:26039,40401:26051,40402:26054,40403:26049,40404:26052,40405:26060,40406:26066,40407:26075,40408:26073,40409:26080,40410:26081,40411:26097,40412:26482,40413:26122,40414:26115,40415:26107,40416:26483,40417:26165,40418:26166,40419:26164,40420:26140,40421:26191,40422:26180,40423:26185,40424:26177,40425:26206,40426:26205,40427:26212,40428:26215,40429:26216,40430:26207,40431:26210,40432:26224,40433:26243,40434:26248,40435:26254,40436:26249,40437:26244,40438:26264,40439:26269,40440:26305,40441:26297,40442:26313,40443:26302,40444:26300,40512:26308,40513:26296,40514:26326,40515:26330,40516:26336,40517:26175,40518:26342,40519:26345,40520:26352,40521:26357,40522:26359,40523:26383,40524:26390,40525:26398,40526:26406,40527:26407,40528:38712,40529:26414,40530:26431,40531:26422,40532:26433,40533:26424,40534:26423,40535:26438,40536:26462,40537:26464,40538:26457,40539:26467,40540:26468,40541:26505,40542:26480,40543:26537,40544:26492,40545:26474,40546:26508,40547:26507,40548:26534,40549:26529,40550:26501,40551:26551,40552:26607,40553:26548,40554:26604,40555:26547,40556:26601,40557:26552,40558:26596,40559:26590,40560:26589,40561:26594,40562:26606,40563:26553,40564:26574,40565:26566,40566:26599,40567:27292,40568:26654,40569:26694,40570:26665,40571:26688,40572:26701,40573:26674,40574:26702,40576:26803,40577:26667,40578:26713,40579:26723,40580:26743,40581:26751,40582:26783,40583:26767,40584:26797,40585:26772,40586:26781,40587:26779,40588:26755,40589:27310,40590:26809,40591:26740,40592:26805,40593:26784,40594:26810,40595:26895,40596:26765,40597:26750,40598:26881,40599:26826,40600:26888,40601:26840,40602:26914,40603:26918,40604:26849,40605:26892,40606:26829,40607:26836,40608:26855,40609:26837,40610:26934,40611:26898,40612:26884,40613:26839,40614:26851,40615:26917,40616:26873,40617:26848,40618:26863,40619:26920,40620:26922,40621:26906,40622:26915,40623:26913,40624:26822,40625:27001,40626:26999,40627:26972,40628:27e3,40629:26987,40630:26964,40631:27006,40632:26990,40633:26937,40634:26996,40635:26941,40636:26969,40637:26928,40638:26977,40639:26974,40640:26973,40641:27009,40642:26986,40643:27058,40644:27054,40645:27088,40646:27071,40647:27073,40648:27091,40649:27070,40650:27086,40651:23528,40652:27082,40653:27101,40654:27067,40655:27075,40656:27047,40657:27182,40658:27025,40659:27040,40660:27036,40661:27029,40662:27060,40663:27102,40664:27112,40665:27138,40666:27163,40667:27135,40668:27402,40669:27129,40670:27122,40671:27111,40672:27141,40673:27057,40674:27166,40675:27117,40676:27156,40677:27115,40678:27146,40679:27154,40680:27329,40681:27171,40682:27155,40683:27204,40684:27148,40685:27250,40686:27190,40687:27256,40688:27207,40689:27234,40690:27225,40691:27238,40692:27208,40693:27192,40694:27170,40695:27280,40696:27277,40697:27296,40698:27268,40699:27298,40700:27299,40768:27287,40769:34327,40770:27323,40771:27331,40772:27330,40773:27320,40774:27315,40775:27308,40776:27358,40777:27345,40778:27359,40779:27306,40780:27354,40781:27370,40782:27387,40783:27397,40784:34326,40785:27386,40786:27410,40787:27414,40788:39729,40789:27423,40790:27448,40791:27447,40792:30428,40793:27449,40794:39150,40795:27463,40796:27459,40797:27465,40798:27472,40799:27481,40800:27476,40801:27483,40802:27487,40803:27489,40804:27512,40805:27513,40806:27519,40807:27520,40808:27524,40809:27523,40810:27533,40811:27544,40812:27541,40813:27550,40814:27556,40815:27562,40816:27563,40817:27567,40818:27570,40819:27569,40820:27571,40821:27575,40822:27580,40823:27590,40824:27595,40825:27603,40826:27615,40827:27628,40828:27627,40829:27635,40830:27631,40832:40638,40833:27656,40834:27667,40835:27668,40836:27675,40837:27684,40838:27683,40839:27742,40840:27733,40841:27746,40842:27754,40843:27778,40844:27789,40845:27802,40846:27777,40847:27803,40848:27774,40849:27752,40850:27763,40851:27794,40852:27792,40853:27844,40854:27889,40855:27859,40856:27837,40857:27863,40858:27845,40859:27869,40860:27822,40861:27825,40862:27838,40863:27834,40864:27867,40865:27887,40866:27865,40867:27882,40868:27935,40869:34893,40870:27958,40871:27947,40872:27965,40873:27960,40874:27929,40875:27957,40876:27955,40877:27922,40878:27916,40879:28003,40880:28051,40881:28004,40882:27994,40883:28025,40884:27993,40885:28046,40886:28053,40887:28644,40888:28037,40889:28153,40890:28181,40891:28170,40892:28085,40893:28103,40894:28134,40895:28088,40896:28102,40897:28140,40898:28126,40899:28108,40900:28136,40901:28114,40902:28101,40903:28154,40904:28121,40905:28132,40906:28117,40907:28138,40908:28142,40909:28205,40910:28270,40911:28206,40912:28185,40913:28274,40914:28255,40915:28222,40916:28195,40917:28267,40918:28203,40919:28278,40920:28237,40921:28191,40922:28227,40923:28218,40924:28238,40925:28196,40926:28415,40927:28189,40928:28216,40929:28290,40930:28330,40931:28312,40932:28361,40933:28343,40934:28371,40935:28349,40936:28335,40937:28356,40938:28338,40939:28372,40940:28373,40941:28303,40942:28325,40943:28354,40944:28319,40945:28481,40946:28433,40947:28748,40948:28396,40949:28408,40950:28414,40951:28479,40952:28402,40953:28465,40954:28399,40955:28466,40956:28364,161:65377,162:65378,163:65379,164:65380,165:65381,166:65382,167:65383,168:65384,169:65385,170:65386,171:65387,172:65388,173:65389,174:65390,175:65391,176:65392,177:65393,178:65394,179:65395,180:65396,181:65397,182:65398,183:65399,184:65400,185:65401,186:65402,187:65403,188:65404,189:65405,190:65406,191:65407,192:65408,193:65409,194:65410,195:65411,196:65412,197:65413,198:65414,199:65415,200:65416,201:65417,202:65418,203:65419,204:65420,205:65421,206:65422,207:65423,208:65424,209:65425,210:65426,211:65427,212:65428,213:65429,214:65430,215:65431,216:65432,217:65433,218:65434,219:65435,220:65436,221:65437,222:65438,223:65439,57408:28478,57409:28435,57410:28407,57411:28550,57412:28538,57413:28536,57414:28545,57415:28544,57416:28527,57417:28507,57418:28659,57419:28525,57420:28546,57421:28540,57422:28504,57423:28558,57424:28561,57425:28610,57426:28518,57427:28595,57428:28579,57429:28577,57430:28580,57431:28601,57432:28614,57433:28586,57434:28639,57435:28629,57436:28652,57437:28628,57438:28632,57439:28657,57440:28654,57441:28635,57442:28681,57443:28683,57444:28666,57445:28689,57446:28673,57447:28687,57448:28670,57449:28699,57450:28698,57451:28532,57452:28701,57453:28696,57454:28703,57455:28720,57456:28734,57457:28722,57458:28753,57459:28771,57460:28825,57461:28818,57462:28847,57463:28913,57464:28844,57465:28856,57466:28851,57467:28846,57468:28895,57469:28875,57470:28893,57472:28889,57473:28937,57474:28925,57475:28956,57476:28953,57477:29029,57478:29013,57479:29064,57480:29030,57481:29026,57482:29004,57483:29014,57484:29036,57485:29071,57486:29179,57487:29060,57488:29077,57489:29096,57490:29100,57491:29143,57492:29113,57493:29118,57494:29138,57495:29129,57496:29140,57497:29134,57498:29152,57499:29164,57500:29159,57501:29173,57502:29180,57503:29177,57504:29183,57505:29197,57506:29200,57507:29211,57508:29224,57509:29229,57510:29228,57511:29232,57512:29234,57513:29243,57514:29244,57515:29247,57516:29248,57517:29254,57518:29259,57519:29272,57520:29300,57521:29310,57522:29314,57523:29313,57524:29319,57525:29330,57526:29334,57527:29346,57528:29351,57529:29369,57530:29362,57531:29379,57532:29382,57533:29380,57534:29390,57535:29394,57536:29410,57537:29408,57538:29409,57539:29433,57540:29431,57541:20495,57542:29463,57543:29450,57544:29468,57545:29462,57546:29469,57547:29492,57548:29487,57549:29481,57550:29477,57551:29502,57552:29518,57553:29519,57554:40664,57555:29527,57556:29546,57557:29544,57558:29552,57559:29560,57560:29557,57561:29563,57562:29562,57563:29640,57564:29619,57565:29646,57566:29627,57567:29632,57568:29669,57569:29678,57570:29662,57571:29858,57572:29701,57573:29807,57574:29733,57575:29688,57576:29746,57577:29754,57578:29781,57579:29759,57580:29791,57581:29785,57582:29761,57583:29788,57584:29801,57585:29808,57586:29795,57587:29802,57588:29814,57589:29822,57590:29835,57591:29854,57592:29863,57593:29898,57594:29903,57595:29908,57596:29681,57664:29920,57665:29923,57666:29927,57667:29929,57668:29934,57669:29938,57670:29936,57671:29937,57672:29944,57673:29943,57674:29956,57675:29955,57676:29957,57677:29964,57678:29966,57679:29965,57680:29973,57681:29971,57682:29982,57683:29990,57684:29996,57685:30012,57686:30020,57687:30029,57688:30026,57689:30025,57690:30043,57691:30022,57692:30042,57693:30057,57694:30052,57695:30055,57696:30059,57697:30061,57698:30072,57699:30070,57700:30086,57701:30087,57702:30068,57703:30090,57704:30089,57705:30082,57706:30100,57707:30106,57708:30109,57709:30117,57710:30115,57711:30146,57712:30131,57713:30147,57714:30133,57715:30141,57716:30136,57717:30140,57718:30129,57719:30157,57720:30154,57721:30162,57722:30169,57723:30179,57724:30174,57725:30206,57726:30207,57728:30204,57729:30209,57730:30192,57731:30202,57732:30194,57733:30195,57734:30219,57735:30221,57736:30217,57737:30239,57738:30247,57739:30240,57740:30241,57741:30242,57742:30244,57743:30260,57744:30256,57745:30267,57746:30279,57747:30280,57748:30278,57749:30300,57750:30296,57751:30305,57752:30306,57753:30312,57754:30313,57755:30314,57756:30311,57757:30316,57758:30320,57759:30322,57760:30326,57761:30328,57762:30332,57763:30336,57764:30339,57765:30344,57766:30347,57767:30350,57768:30358,57769:30355,57770:30361,57771:30362,57772:30384,57773:30388,57774:30392,57775:30393,57776:30394,57777:30402,57778:30413,57779:30422,57780:30418,57781:30430,57782:30433,57783:30437,57784:30439,57785:30442,57786:34351,57787:30459,57788:30472,57789:30471,57790:30468,57791:30505,57792:30500,57793:30494,57794:30501,57795:30502,57796:30491,57797:30519,57798:30520,57799:30535,57800:30554,57801:30568,57802:30571,57803:30555,57804:30565,57805:30591,57806:30590,57807:30585,57808:30606,57809:30603,57810:30609,57811:30624,57812:30622,57813:30640,57814:30646,57815:30649,57816:30655,57817:30652,57818:30653,57819:30651,57820:30663,57821:30669,57822:30679,57823:30682,57824:30684,57825:30691,57826:30702,57827:30716,57828:30732,57829:30738,57830:31014,57831:30752,57832:31018,57833:30789,57834:30862,57835:30836,57836:30854,57837:30844,57838:30874,57839:30860,57840:30883,57841:30901,57842:30890,57843:30895,57844:30929,57845:30918,57846:30923,57847:30932,57848:30910,57849:30908,57850:30917,57851:30922,57852:30956,57920:30951,57921:30938,57922:30973,57923:30964,57924:30983,57925:30994,57926:30993,57927:31001,57928:31020,57929:31019,57930:31040,57931:31072,57932:31063,57933:31071,57934:31066,57935:31061,57936:31059,57937:31098,57938:31103,57939:31114,57940:31133,57941:31143,57942:40779,57943:31146,57944:31150,57945:31155,57946:31161,57947:31162,57948:31177,57949:31189,57950:31207,57951:31212,57952:31201,57953:31203,57954:31240,57955:31245,57956:31256,57957:31257,57958:31264,57959:31263,57960:31104,57961:31281,57962:31291,57963:31294,57964:31287,57965:31299,57966:31319,57967:31305,57968:31329,57969:31330,57970:31337,57971:40861,57972:31344,57973:31353,57974:31357,57975:31368,57976:31383,57977:31381,57978:31384,57979:31382,57980:31401,57981:31432,57982:31408,57984:31414,57985:31429,57986:31428,57987:31423,57988:36995,57989:31431,57990:31434,57991:31437,57992:31439,57993:31445,57994:31443,57995:31449,57996:31450,57997:31453,57998:31457,57999:31458,58e3:31462,58001:31469,58002:31472,58003:31490,58004:31503,58005:31498,58006:31494,58007:31539,58008:31512,58009:31513,58010:31518,58011:31541,58012:31528,58013:31542,58014:31568,58015:31610,58016:31492,58017:31565,58018:31499,58019:31564,58020:31557,58021:31605,58022:31589,58023:31604,58024:31591,58025:31600,58026:31601,58027:31596,58028:31598,58029:31645,58030:31640,58031:31647,58032:31629,58033:31644,58034:31642,58035:31627,58036:31634,58037:31631,58038:31581,58039:31641,58040:31691,58041:31681,58042:31692,58043:31695,58044:31668,58045:31686,58046:31709,58047:31721,58048:31761,58049:31764,58050:31718,58051:31717,58052:31840,58053:31744,58054:31751,58055:31763,58056:31731,58057:31735,58058:31767,58059:31757,58060:31734,58061:31779,58062:31783,58063:31786,58064:31775,58065:31799,58066:31787,58067:31805,58068:31820,58069:31811,58070:31828,58071:31823,58072:31808,58073:31824,58074:31832,58075:31839,58076:31844,58077:31830,58078:31845,58079:31852,58080:31861,58081:31875,58082:31888,58083:31908,58084:31917,58085:31906,58086:31915,58087:31905,58088:31912,58089:31923,58090:31922,58091:31921,58092:31918,58093:31929,58094:31933,58095:31936,58096:31941,58097:31938,58098:31960,58099:31954,58100:31964,58101:31970,58102:39739,58103:31983,58104:31986,58105:31988,58106:31990,58107:31994,58108:32006,58176:32002,58177:32028,58178:32021,58179:32010,58180:32069,58181:32075,58182:32046,58183:32050,58184:32063,58185:32053,58186:32070,58187:32115,58188:32086,58189:32078,58190:32114,58191:32104,58192:32110,58193:32079,58194:32099,58195:32147,58196:32137,58197:32091,58198:32143,58199:32125,58200:32155,58201:32186,58202:32174,58203:32163,58204:32181,58205:32199,58206:32189,58207:32171,58208:32317,58209:32162,58210:32175,58211:32220,58212:32184,58213:32159,58214:32176,58215:32216,58216:32221,58217:32228,58218:32222,58219:32251,58220:32242,58221:32225,58222:32261,58223:32266,58224:32291,58225:32289,58226:32274,58227:32305,58228:32287,58229:32265,58230:32267,58231:32290,58232:32326,58233:32358,58234:32315,58235:32309,58236:32313,58237:32323,58238:32311,58240:32306,58241:32314,58242:32359,58243:32349,58244:32342,58245:32350,58246:32345,58247:32346,58248:32377,58249:32362,58250:32361,58251:32380,58252:32379,58253:32387,58254:32213,58255:32381,58256:36782,58257:32383,58258:32392,58259:32393,58260:32396,58261:32402,58262:32400,58263:32403,58264:32404,58265:32406,58266:32398,58267:32411,58268:32412,58269:32568,58270:32570,58271:32581,58272:32588,58273:32589,58274:32590,58275:32592,58276:32593,58277:32597,58278:32596,58279:32600,58280:32607,58281:32608,58282:32616,58283:32617,58284:32615,58285:32632,58286:32642,58287:32646,58288:32643,58289:32648,58290:32647,58291:32652,58292:32660,58293:32670,58294:32669,58295:32666,58296:32675,58297:32687,58298:32690,58299:32697,58300:32686,58301:32694,58302:32696,58303:35697,58304:32709,58305:32710,58306:32714,58307:32725,58308:32724,58309:32737,58310:32742,58311:32745,58312:32755,58313:32761,58314:39132,58315:32774,58316:32772,58317:32779,58318:32786,58319:32792,58320:32793,58321:32796,58322:32801,58323:32808,58324:32831,58325:32827,58326:32842,58327:32838,58328:32850,58329:32856,58330:32858,58331:32863,58332:32866,58333:32872,58334:32883,58335:32882,58336:32880,58337:32886,58338:32889,58339:32893,58340:32895,58341:32900,58342:32902,58343:32901,58344:32923,58345:32915,58346:32922,58347:32941,58348:20880,58349:32940,58350:32987,58351:32997,58352:32985,58353:32989,58354:32964,58355:32986,58356:32982,58357:33033,58358:33007,58359:33009,58360:33051,58361:33065,58362:33059,58363:33071,58364:33099,58432:38539,58433:33094,58434:33086,58435:33107,58436:33105,58437:33020,58438:33137,58439:33134,58440:33125,58441:33126,58442:33140,58443:33155,58444:33160,58445:33162,58446:33152,58447:33154,58448:33184,58449:33173,58450:33188,58451:33187,58452:33119,58453:33171,58454:33193,58455:33200,58456:33205,58457:33214,58458:33208,58459:33213,58460:33216,58461:33218,58462:33210,58463:33225,58464:33229,58465:33233,58466:33241,58467:33240,58468:33224,58469:33242,58470:33247,58471:33248,58472:33255,58473:33274,58474:33275,58475:33278,58476:33281,58477:33282,58478:33285,58479:33287,58480:33290,58481:33293,58482:33296,58483:33302,58484:33321,58485:33323,58486:33336,58487:33331,58488:33344,58489:33369,58490:33368,58491:33373,58492:33370,58493:33375,58494:33380,58496:33378,58497:33384,58498:33386,58499:33387,58500:33326,58501:33393,58502:33399,58503:33400,58504:33406,58505:33421,58506:33426,58507:33451,58508:33439,58509:33467,58510:33452,58511:33505,58512:33507,58513:33503,58514:33490,58515:33524,58516:33523,58517:33530,58518:33683,58519:33539,58520:33531,58521:33529,58522:33502,58523:33542,58524:33500,58525:33545,58526:33497,58527:33589,58528:33588,58529:33558,58530:33586,58531:33585,58532:33600,58533:33593,58534:33616,58535:33605,58536:33583,58537:33579,58538:33559,58539:33560,58540:33669,58541:33690,58542:33706,58543:33695,58544:33698,58545:33686,58546:33571,58547:33678,58548:33671,58549:33674,58550:33660,58551:33717,58552:33651,58553:33653,58554:33696,58555:33673,58556:33704,58557:33780,58558:33811,58559:33771,58560:33742,58561:33789,58562:33795,58563:33752,58564:33803,58565:33729,58566:33783,58567:33799,58568:33760,58569:33778,58570:33805,58571:33826,58572:33824,58573:33725,58574:33848,58575:34054,58576:33787,58577:33901,58578:33834,58579:33852,58580:34138,58581:33924,58582:33911,58583:33899,58584:33965,58585:33902,58586:33922,58587:33897,58588:33862,58589:33836,58590:33903,58591:33913,58592:33845,58593:33994,58594:33890,58595:33977,58596:33983,58597:33951,58598:34009,58599:33997,58600:33979,58601:34010,58602:34e3,58603:33985,58604:33990,58605:34006,58606:33953,58607:34081,58608:34047,58609:34036,58610:34071,58611:34072,58612:34092,58613:34079,58614:34069,58615:34068,58616:34044,58617:34112,58618:34147,58619:34136,58620:34120,58688:34113,58689:34306,58690:34123,58691:34133,58692:34176,58693:34212,58694:34184,58695:34193,58696:34186,58697:34216,58698:34157,58699:34196,58700:34203,58701:34282,58702:34183,58703:34204,58704:34167,58705:34174,58706:34192,58707:34249,58708:34234,58709:34255,58710:34233,58711:34256,58712:34261,58713:34269,58714:34277,58715:34268,58716:34297,58717:34314,58718:34323,58719:34315,58720:34302,58721:34298,58722:34310,58723:34338,58724:34330,58725:34352,58726:34367,58727:34381,58728:20053,58729:34388,58730:34399,58731:34407,58732:34417,58733:34451,58734:34467,58735:34473,58736:34474,58737:34443,58738:34444,58739:34486,58740:34479,58741:34500,58742:34502,58743:34480,58744:34505,58745:34851,58746:34475,58747:34516,58748:34526,58749:34537,58750:34540,58752:34527,58753:34523,58754:34543,58755:34578,58756:34566,58757:34568,58758:34560,58759:34563,58760:34555,58761:34577,58762:34569,58763:34573,58764:34553,58765:34570,58766:34612,58767:34623,58768:34615,58769:34619,58770:34597,58771:34601,58772:34586,58773:34656,58774:34655,58775:34680,58776:34636,58777:34638,58778:34676,58779:34647,58780:34664,58781:34670,58782:34649,58783:34643,58784:34659,58785:34666,58786:34821,58787:34722,58788:34719,58789:34690,58790:34735,58791:34763,58792:34749,58793:34752,58794:34768,58795:38614,58796:34731,58797:34756,58798:34739,58799:34759,58800:34758,58801:34747,58802:34799,58803:34802,58804:34784,58805:34831,58806:34829,58807:34814,58808:34806,58809:34807,58810:34830,58811:34770,58812:34833,58813:34838,58814:34837,58815:34850,58816:34849,58817:34865,58818:34870,58819:34873,58820:34855,58821:34875,58822:34884,58823:34882,58824:34898,58825:34905,58826:34910,58827:34914,58828:34923,58829:34945,58830:34942,58831:34974,58832:34933,58833:34941,58834:34997,58835:34930,58836:34946,58837:34967,58838:34962,58839:34990,58840:34969,58841:34978,58842:34957,58843:34980,58844:34992,58845:35007,58846:34993,58847:35011,58848:35012,58849:35028,58850:35032,58851:35033,58852:35037,58853:35065,58854:35074,58855:35068,58856:35060,58857:35048,58858:35058,58859:35076,58860:35084,58861:35082,58862:35091,58863:35139,58864:35102,58865:35109,58866:35114,58867:35115,58868:35137,58869:35140,58870:35131,58871:35126,58872:35128,58873:35148,58874:35101,58875:35168,58876:35166,58944:35174,58945:35172,58946:35181,58947:35178,58948:35183,58949:35188,58950:35191,58951:35198,58952:35203,58953:35208,58954:35210,58955:35219,58956:35224,58957:35233,58958:35241,58959:35238,58960:35244,58961:35247,58962:35250,58963:35258,58964:35261,58965:35263,58966:35264,58967:35290,58968:35292,58969:35293,58970:35303,58971:35316,58972:35320,58973:35331,58974:35350,58975:35344,58976:35340,58977:35355,58978:35357,58979:35365,58980:35382,58981:35393,58982:35419,58983:35410,58984:35398,58985:35400,58986:35452,58987:35437,58988:35436,58989:35426,58990:35461,58991:35458,58992:35460,58993:35496,58994:35489,58995:35473,58996:35493,58997:35494,58998:35482,58999:35491,59e3:35524,59001:35533,59002:35522,59003:35546,59004:35563,59005:35571,59006:35559,59008:35556,59009:35569,59010:35604,59011:35552,59012:35554,59013:35575,59014:35550,59015:35547,59016:35596,59017:35591,59018:35610,59019:35553,59020:35606,59021:35600,59022:35607,59023:35616,59024:35635,59025:38827,59026:35622,59027:35627,59028:35646,59029:35624,59030:35649,59031:35660,59032:35663,59033:35662,59034:35657,59035:35670,59036:35675,59037:35674,59038:35691,59039:35679,59040:35692,59041:35695,59042:35700,59043:35709,59044:35712,59045:35724,59046:35726,59047:35730,59048:35731,59049:35734,59050:35737,59051:35738,59052:35898,59053:35905,59054:35903,59055:35912,59056:35916,59057:35918,59058:35920,59059:35925,59060:35938,59061:35948,59062:35960,59063:35962,59064:35970,59065:35977,59066:35973,59067:35978,59068:35981,59069:35982,59070:35988,59071:35964,59072:35992,59073:25117,59074:36013,59075:36010,59076:36029,59077:36018,59078:36019,59079:36014,59080:36022,59081:36040,59082:36033,59083:36068,59084:36067,59085:36058,59086:36093,59087:36090,59088:36091,59089:36100,59090:36101,59091:36106,59092:36103,59093:36111,59094:36109,59095:36112,59096:40782,59097:36115,59098:36045,59099:36116,59100:36118,59101:36199,59102:36205,59103:36209,59104:36211,59105:36225,59106:36249,59107:36290,59108:36286,59109:36282,59110:36303,59111:36314,59112:36310,59113:36300,59114:36315,59115:36299,59116:36330,59117:36331,59118:36319,59119:36323,59120:36348,59121:36360,59122:36361,59123:36351,59124:36381,59125:36382,59126:36368,59127:36383,59128:36418,59129:36405,59130:36400,59131:36404,59132:36426,59200:36423,59201:36425,59202:36428,59203:36432,59204:36424,59205:36441,59206:36452,59207:36448,59208:36394,59209:36451,59210:36437,59211:36470,59212:36466,59213:36476,59214:36481,59215:36487,59216:36485,59217:36484,59218:36491,59219:36490,59220:36499,59221:36497,59222:36500,59223:36505,59224:36522,59225:36513,59226:36524,59227:36528,59228:36550,59229:36529,59230:36542,59231:36549,59232:36552,59233:36555,59234:36571,59235:36579,59236:36604,59237:36603,59238:36587,59239:36606,59240:36618,59241:36613,59242:36629,59243:36626,59244:36633,59245:36627,59246:36636,59247:36639,59248:36635,59249:36620,59250:36646,59251:36659,59252:36667,59253:36665,59254:36677,59255:36674,59256:36670,59257:36684,59258:36681,59259:36678,59260:36686,59261:36695,59262:36700,59264:36706,59265:36707,59266:36708,59267:36764,59268:36767,59269:36771,59270:36781,59271:36783,59272:36791,59273:36826,59274:36837,59275:36834,59276:36842,59277:36847,59278:36999,59279:36852,59280:36869,59281:36857,59282:36858,59283:36881,59284:36885,59285:36897,59286:36877,59287:36894,59288:36886,59289:36875,59290:36903,59291:36918,59292:36917,59293:36921,59294:36856,59295:36943,59296:36944,59297:36945,59298:36946,59299:36878,59300:36937,59301:36926,59302:36950,59303:36952,59304:36958,59305:36968,59306:36975,59307:36982,59308:38568,59309:36978,59310:36994,59311:36989,59312:36993,59313:36992,59314:37002,59315:37001,59316:37007,59317:37032,59318:37039,59319:37041,59320:37045,59321:37090,59322:37092,59323:25160,59324:37083,59325:37122,59326:37138,59327:37145,59328:37170,59329:37168,59330:37194,59331:37206,59332:37208,59333:37219,59334:37221,59335:37225,59336:37235,59337:37234,59338:37259,59339:37257,59340:37250,59341:37282,59342:37291,59343:37295,59344:37290,59345:37301,59346:37300,59347:37306,59348:37312,59349:37313,59350:37321,59351:37323,59352:37328,59353:37334,59354:37343,59355:37345,59356:37339,59357:37372,59358:37365,59359:37366,59360:37406,59361:37375,59362:37396,59363:37420,59364:37397,59365:37393,59366:37470,59367:37463,59368:37445,59369:37449,59370:37476,59371:37448,59372:37525,59373:37439,59374:37451,59375:37456,59376:37532,59377:37526,59378:37523,59379:37531,59380:37466,59381:37583,59382:37561,59383:37559,59384:37609,59385:37647,59386:37626,59387:37700,59388:37678,59456:37657,59457:37666,59458:37658,59459:37667,59460:37690,59461:37685,59462:37691,59463:37724,59464:37728,59465:37756,59466:37742,59467:37718,59468:37808,59469:37804,59470:37805,59471:37780,59472:37817,59473:37846,59474:37847,59475:37864,59476:37861,59477:37848,59478:37827,59479:37853,59480:37840,59481:37832,59482:37860,59483:37914,59484:37908,59485:37907,59486:37891,59487:37895,59488:37904,59489:37942,59490:37931,59491:37941,59492:37921,59493:37946,59494:37953,59495:37970,59496:37956,59497:37979,59498:37984,59499:37986,59500:37982,59501:37994,59502:37417,59503:38e3,59504:38005,59505:38007,59506:38013,59507:37978,59508:38012,59509:38014,59510:38017,59511:38015,59512:38274,59513:38279,59514:38282,59515:38292,59516:38294,59517:38296,59518:38297,59520:38304,59521:38312,59522:38311,59523:38317,59524:38332,59525:38331,59526:38329,59527:38334,59528:38346,59529:28662,59530:38339,59531:38349,59532:38348,59533:38357,59534:38356,59535:38358,59536:38364,59537:38369,59538:38373,59539:38370,59540:38433,59541:38440,59542:38446,59543:38447,59544:38466,59545:38476,59546:38479,59547:38475,59548:38519,59549:38492,59550:38494,59551:38493,59552:38495,59553:38502,59554:38514,59555:38508,59556:38541,59557:38552,59558:38549,59559:38551,59560:38570,59561:38567,59562:38577,59563:38578,59564:38576,59565:38580,59566:38582,59567:38584,59568:38585,59569:38606,59570:38603,59571:38601,59572:38605,59573:35149,59574:38620,59575:38669,59576:38613,59577:38649,59578:38660,59579:38662,59580:38664,59581:38675,59582:38670,59583:38673,59584:38671,59585:38678,59586:38681,59587:38692,59588:38698,59589:38704,59590:38713,59591:38717,59592:38718,59593:38724,59594:38726,59595:38728,59596:38722,59597:38729,59598:38748,59599:38752,59600:38756,59601:38758,59602:38760,59603:21202,59604:38763,59605:38769,59606:38777,59607:38789,59608:38780,59609:38785,59610:38778,59611:38790,59612:38795,59613:38799,59614:38800,59615:38812,59616:38824,59617:38822,59618:38819,59619:38835,59620:38836,59621:38851,59622:38854,59623:38856,\\n59624:38859,59625:38876,59626:38893,59627:40783,59628:38898,59629:31455,59630:38902,59631:38901,59632:38927,59633:38924,59634:38968,59635:38948,59636:38945,59637:38967,59638:38973,59639:38982,59640:38991,59641:38987,59642:39019,59643:39023,59644:39024,59712:39025,59713:39028,59714:39027,59715:39082,59716:39087,59717:39089,59718:39094,59719:39108,59720:39107,59721:39110,59722:39145,59723:39147,59724:39171,59725:39177,59726:39186,59727:39188,59728:39192,59729:39201,59730:39197,59731:39198,59732:39204,59733:39200,59734:39212,59735:39214,59736:39229,59737:39230,59738:39234,59739:39241,59740:39237,59741:39248,59742:39243,59743:39249,59744:39250,59745:39244,59746:39253,59747:39319,59748:39320,59749:39333,59750:39341,59751:39342,59752:39356,59753:39391,59754:39387,59755:39389,59756:39384,59757:39377,59758:39405,59759:39406,59760:39409,59761:39410,59762:39419,59763:39416,59764:39425,59765:39439,59766:39429,59767:39394,59768:39449,59769:39467,59770:39479,59771:39493,59772:39490,59773:39488,59774:39491,59776:39486,59777:39509,59778:39501,59779:39515,59780:39511,59781:39519,59782:39522,59783:39525,59784:39524,59785:39529,59786:39531,59787:39530,59788:39597,59789:39600,59790:39612,59791:39616,59792:39631,59793:39633,59794:39635,59795:39636,59796:39646,59797:39647,59798:39650,59799:39651,59800:39654,59801:39663,59802:39659,59803:39662,59804:39668,59805:39665,59806:39671,59807:39675,59808:39686,59809:39704,59810:39706,59811:39711,59812:39714,59813:39715,59814:39717,59815:39719,59816:39720,59817:39721,59818:39722,59819:39726,59820:39727,59821:39730,59822:39748,59823:39747,59824:39759,59825:39757,59826:39758,59827:39761,59828:39768,59829:39796,59830:39827,59831:39811,59832:39825,59833:39830,59834:39831,59835:39839,59836:39840,59837:39848,59838:39860,59839:39872,59840:39882,59841:39865,59842:39878,59843:39887,59844:39889,59845:39890,59846:39907,59847:39906,59848:39908,59849:39892,59850:39905,59851:39994,59852:39922,59853:39921,59854:39920,59855:39957,59856:39956,59857:39945,59858:39955,59859:39948,59860:39942,59861:39944,59862:39954,59863:39946,59864:39940,59865:39982,59866:39963,59867:39973,59868:39972,59869:39969,59870:39984,59871:40007,59872:39986,59873:40006,59874:39998,59875:40026,59876:40032,59877:40039,59878:40054,59879:40056,59880:40167,59881:40172,59882:40176,59883:40201,59884:40200,59885:40171,59886:40195,59887:40198,59888:40234,59889:40230,59890:40367,59891:40227,59892:40223,59893:40260,59894:40213,59895:40210,59896:40257,59897:40255,59898:40254,59899:40262,59900:40264,59968:40285,59969:40286,59970:40292,59971:40273,59972:40272,59973:40281,59974:40306,59975:40329,59976:40327,59977:40363,59978:40303,59979:40314,59980:40346,59981:40356,59982:40361,59983:40370,59984:40388,59985:40385,59986:40379,59987:40376,59988:40378,59989:40390,59990:40399,59991:40386,59992:40409,59993:40403,59994:40440,59995:40422,59996:40429,59997:40431,59998:40445,59999:40474,6e4:40475,60001:40478,60002:40565,60003:40569,60004:40573,60005:40577,60006:40584,60007:40587,60008:40588,60009:40594,60010:40597,60011:40593,60012:40605,60013:40613,60014:40617,60015:40632,60016:40618,60017:40621,60018:38753,60019:40652,60020:40654,60021:40655,60022:40656,60023:40660,60024:40668,60025:40670,60026:40669,60027:40672,60028:40677,60029:40680,60030:40687,60032:40692,60033:40694,60034:40695,60035:40697,60036:40699,60037:40700,60038:40701,60039:40711,60040:40712,60041:30391,60042:40725,60043:40737,60044:40748,60045:40766,60046:40778,60047:40786,60048:40788,60049:40803,60050:40799,60051:40800,60052:40801,60053:40806,60054:40807,60055:40812,60056:40810,60057:40823,60058:40818,60059:40822,60060:40853,60061:40860,60062:40864,60063:22575,60064:27079,60065:36953,60066:29796,60067:20956,60068:29081}},function(o,e,r){\\\"use strict\\\";function t(o,e,r,t){e.degree()<r.degree()&&(w=[r,e],e=w[0],r=w[1]);for(var c=e,s=r,a=o.zero,d=o.one;s.degree()>=t/2;){var n=c,l=a;if(c=s,a=d,c.isZero())return null;s=n;for(var i=o.zero,B=c.getCoefficient(c.degree()),k=o.inverse(B);s.degree()>=c.degree()&&!s.isZero();){var u=s.degree()-c.degree(),C=o.multiply(s.getCoefficient(s.degree()),k);i=i.addOrSubtract(o.buildMonomial(u,C)),s=s.addOrSubtract(c.multiplyByMonomial(u,C))}if(d=i.multiplyPoly(a).addOrSubtract(l),s.degree()>=c.degree())return null}var m=d.getCoefficient(0);if(0===m)return null;var f=o.inverse(m);return[d.multiply(f),s.multiply(f)];var w}function c(o,e){var r=e.degree();if(1===r)return[e.getCoefficient(1)];for(var t=new Array(r),c=0,s=1;s<o.size&&c<r;s++)0===e.evaluateAt(s)&&(t[c]=o.inverse(s),c++);return c!==r?null:t}function s(o,e,r){for(var t=r.length,c=new Array(t),s=0;s<t;s++){for(var a=o.inverse(r[s]),n=1,l=0;l<t;l++)s!==l&&(n=o.multiply(n,d.addOrSubtractGF(1,o.multiply(r[l],a))));c[s]=o.multiply(e.evaluateAt(a),o.inverse(n)),0!==o.generatorBase&&(c[s]=o.multiply(c[s],a))}return c}function a(o,e){var r=new Uint8ClampedArray(o.length);r.set(o);for(var a=new d.default(285,256,0),l=new n.default(a,r),i=new Uint8ClampedArray(e),B=!1,k=0;k<e;k++){var u=l.evaluateAt(a.exp(k+a.generatorBase));i[i.length-1-k]=u,0!==u&&(B=!0)}if(!B)return r;var C=new n.default(a,i),m=t(a,a.buildMonomial(e,1),C,e);if(null===m)return null;var f=c(a,m[0]);if(null==f)return null;for(var w=s(a,m[1],f),P=0;P<f.length;P++){var v=r.length-1-a.log(f[P]);if(v<0)return null;r[v]=d.addOrSubtractGF(r[v],w[P])}return r}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var d=r(1),n=r(2);e.decode=a},function(o,e,r){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.VERSIONS=[{infoBits:null,versionNumber:1,alignmentPatternCenters:[],errorCorrectionLevels:[{ecCodewordsPerBlock:7,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:13,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:13}]},{ecCodewordsPerBlock:17,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:2,alignmentPatternCenters:[6,18],errorCorrectionLevels:[{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:34}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:28}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]}]},{infoBits:null,versionNumber:3,alignmentPatternCenters:[6,22],errorCorrectionLevels:[{ecCodewordsPerBlock:15,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:55}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:13}]}]},{infoBits:null,versionNumber:4,alignmentPatternCenters:[6,26],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:80}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:32}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:5,alignmentPatternCenters:[6,30],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:43}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:11},{numBlocks:2,dataCodewordsPerBlock:12}]}]},{infoBits:null,versionNumber:6,alignmentPatternCenters:[6,34],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:27}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:31892,versionNumber:7,alignmentPatternCenters:[6,22,38],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:78}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:31}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:13},{numBlocks:1,dataCodewordsPerBlock:14}]}]},{infoBits:34236,versionNumber:8,alignmentPatternCenters:[6,24,42],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:97}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:38},{numBlocks:2,dataCodewordsPerBlock:39}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:18},{numBlocks:2,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:14},{numBlocks:2,dataCodewordsPerBlock:15}]}]},{infoBits:39577,versionNumber:9,alignmentPatternCenters:[6,26,46],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:12},{numBlocks:4,dataCodewordsPerBlock:13}]}]},{infoBits:42195,versionNumber:10,alignmentPatternCenters:[6,28,50],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68},{numBlocks:2,dataCodewordsPerBlock:69}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:43},{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]}]},{infoBits:48118,versionNumber:11,alignmentPatternCenters:[6,30,54],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:81}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:50},{numBlocks:4,dataCodewordsPerBlock:51}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:22},{numBlocks:4,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:12},{numBlocks:8,dataCodewordsPerBlock:13}]}]},{infoBits:51042,versionNumber:12,alignmentPatternCenters:[6,32,58],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:92},{numBlocks:2,dataCodewordsPerBlock:93}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:20},{numBlocks:6,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:55367,versionNumber:13,alignmentPatternCenters:[6,34,62],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:37},{numBlocks:1,dataCodewordsPerBlock:38}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:20},{numBlocks:4,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:11},{numBlocks:4,dataCodewordsPerBlock:12}]}]},{infoBits:58893,versionNumber:14,alignmentPatternCenters:[6,26,46,66],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:40},{numBlocks:5,dataCodewordsPerBlock:41}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:16},{numBlocks:5,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:5,dataCodewordsPerBlock:13}]}]},{infoBits:63784,versionNumber:15,alignmentPatternCenters:[6,26,48,70],errorCorrectionLevels:[{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:87},{numBlocks:1,dataCodewordsPerBlock:88}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:41},{numBlocks:5,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:7,dataCodewordsPerBlock:13}]}]},{infoBits:68472,versionNumber:16,alignmentPatternCenters:[6,26,50,74],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:98},{numBlocks:1,dataCodewordsPerBlock:99}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:70749,versionNumber:17,alignmentPatternCenters:[6,30,54,78],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:1,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22},{numBlocks:15,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:17,dataCodewordsPerBlock:15}]}]},{infoBits:76311,versionNumber:18,alignmentPatternCenters:[6,30,56,82],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:120},{numBlocks:1,dataCodewordsPerBlock:121}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:43},{numBlocks:4,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:1,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:19,dataCodewordsPerBlock:15}]}]},{infoBits:79154,versionNumber:19,alignmentPatternCenters:[6,30,58,86],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:113},{numBlocks:4,dataCodewordsPerBlock:114}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:44},{numBlocks:11,dataCodewordsPerBlock:45}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:21},{numBlocks:4,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:13},{numBlocks:16,dataCodewordsPerBlock:14}]}]},{infoBits:84390,versionNumber:20,alignmentPatternCenters:[6,34,62,90],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:41},{numBlocks:13,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:5,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:15},{numBlocks:10,dataCodewordsPerBlock:16}]}]},{infoBits:87683,versionNumber:21,alignmentPatternCenters:[6,28,50,72,94],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:116},{numBlocks:4,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:16},{numBlocks:6,dataCodewordsPerBlock:17}]}]},{infoBits:92361,versionNumber:22,alignmentPatternCenters:[6,26,50,74,98],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:111},{numBlocks:7,dataCodewordsPerBlock:112}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:13}]}]},{infoBits:96236,versionNumber:23,alignmentPatternCenters:[6,30,54,74,102],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:121},{numBlocks:5,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:47},{numBlocks:14,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:16,dataCodewordsPerBlock:15},{numBlocks:14,dataCodewordsPerBlock:16}]}]},{infoBits:102084,versionNumber:24,alignmentPatternCenters:[6,28,54,80,106],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:45},{numBlocks:14,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:30,dataCodewordsPerBlock:16},{numBlocks:2,dataCodewordsPerBlock:17}]}]},{infoBits:102881,versionNumber:25,alignmentPatternCenters:[6,32,58,84,110],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:106},{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:47},{numBlocks:13,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:110507,versionNumber:26,alignmentPatternCenters:[6,30,58,86,114],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:114},{numBlocks:2,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:46},{numBlocks:4,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:28,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:33,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]}]},{infoBits:110734,versionNumber:27,alignmentPatternCenters:[6,34,62,90,118],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:23},{numBlocks:26,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:117786,versionNumber:28,alignmentPatternCenters:[6,26,50,74,98,122],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:117},{numBlocks:10,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:45},{numBlocks:23,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:24},{numBlocks:31,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:31,dataCodewordsPerBlock:16}]}]},{infoBits:119615,versionNumber:29,alignmentPatternCenters:[6,30,54,78,102,126],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:116},{numBlocks:7,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:21,dataCodewordsPerBlock:45},{numBlocks:7,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:23},{numBlocks:37,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:26,dataCodewordsPerBlock:16}]}]},{infoBits:126325,versionNumber:30,alignmentPatternCenters:[6,26,52,78,104,130],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:115},{numBlocks:10,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:47},{numBlocks:10,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:25,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:25,dataCodewordsPerBlock:16}]}]},{infoBits:127568,versionNumber:31,alignmentPatternCenters:[6,30,56,82,108,134],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:3,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:46},{numBlocks:29,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:24},{numBlocks:1,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:133589,versionNumber:32,alignmentPatternCenters:[6,34,60,86,112,138],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:24},{numBlocks:35,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:35,dataCodewordsPerBlock:16}]}]},{infoBits:136944,versionNumber:33,alignmentPatternCenters:[6,30,58,86,114,142],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:21,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:24},{numBlocks:19,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:141498,versionNumber:34,alignmentPatternCenters:[6,34,62,90,118,146],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:6,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:44,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:59,dataCodewordsPerBlock:16},{numBlocks:1,dataCodewordsPerBlock:17}]}]},{infoBits:145311,versionNumber:35,alignmentPatternCenters:[6,30,54,78,102,126,150],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:121},{numBlocks:7,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:47},{numBlocks:26,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:39,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:41,dataCodewordsPerBlock:16}]}]},{infoBits:150283,versionNumber:36,alignmentPatternCenters:[6,24,50,76,102,128,154],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:121},{numBlocks:14,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:47},{numBlocks:34,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:46,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:64,dataCodewordsPerBlock:16}]}]},{infoBits:152622,versionNumber:37,alignmentPatternCenters:[6,28,54,80,106,132,158],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:46},{numBlocks:14,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:49,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:24,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:158308,versionNumber:38,alignmentPatternCenters:[6,32,58,84,110,136,162],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:122},{numBlocks:18,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:46},{numBlocks:32,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:48,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:15},{numBlocks:32,dataCodewordsPerBlock:16}]}]},{infoBits:161089,versionNumber:39,alignmentPatternCenters:[6,26,54,82,110,138,166],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:40,dataCodewordsPerBlock:47},{numBlocks:7,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:43,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:15},{numBlocks:67,dataCodewordsPerBlock:16}]}]},{infoBits:167017,versionNumber:40,alignmentPatternCenters:[6,30,58,86,114,142,170],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:118},{numBlocks:6,dataCodewordsPerBlock:119}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:18,dataCodewordsPerBlock:47},{numBlocks:31,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:24},{numBlocks:34,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:15},{numBlocks:61,dataCodewordsPerBlock:16}]}]}]},function(o,e,r){\\\"use strict\\\";function t(o,e,r,t){var c=o.x-e.x+r.x-t.x,s=o.y-e.y+r.y-t.y;if(0===c&&0===s)return{a11:e.x-o.x,a12:e.y-o.y,a13:0,a21:r.x-e.x,a22:r.y-e.y,a23:0,a31:o.x,a32:o.y,a33:1};var a=e.x-r.x,d=t.x-r.x,n=e.y-r.y,l=t.y-r.y,i=a*l-d*n,B=(c*l-d*s)/i,k=(a*s-c*n)/i;return{a11:e.x-o.x+B*e.x,a12:e.y-o.y+B*e.y,a13:B,a21:t.x-o.x+k*t.x,a22:t.y-o.y+k*t.y,a23:k,a31:o.x,a32:o.y,a33:1}}function c(o,e,r,c){var s=t(o,e,r,c);return{a11:s.a22*s.a33-s.a23*s.a32,a12:s.a13*s.a32-s.a12*s.a33,a13:s.a12*s.a23-s.a13*s.a22,a21:s.a23*s.a31-s.a21*s.a33,a22:s.a11*s.a33-s.a13*s.a31,a23:s.a13*s.a21-s.a11*s.a23,a31:s.a21*s.a32-s.a22*s.a31,a32:s.a12*s.a31-s.a11*s.a32,a33:s.a11*s.a22-s.a12*s.a21}}function s(o,e){return{a11:o.a11*e.a11+o.a21*e.a12+o.a31*e.a13,a12:o.a12*e.a11+o.a22*e.a12+o.a32*e.a13,a13:o.a13*e.a11+o.a23*e.a12+o.a33*e.a13,a21:o.a11*e.a21+o.a21*e.a22+o.a31*e.a23,a22:o.a12*e.a21+o.a22*e.a22+o.a32*e.a23,a23:o.a13*e.a21+o.a23*e.a22+o.a33*e.a23,a31:o.a11*e.a31+o.a21*e.a32+o.a31*e.a33,a32:o.a12*e.a31+o.a22*e.a32+o.a32*e.a33,a33:o.a13*e.a31+o.a23*e.a32+o.a33*e.a33}}function a(o,e){for(var r=c({x:3.5,y:3.5},{x:e.dimension-3.5,y:3.5},{x:e.dimension-6.5,y:e.dimension-6.5},{x:3.5,y:e.dimension-3.5}),a=t(e.topLeft,e.topRight,e.alignmentPattern,e.bottomLeft),n=s(a,r),l=d.BitMatrix.createEmpty(e.dimension,e.dimension),i=function(o,e){var r=n.a13*o+n.a23*e+n.a33;return{x:(n.a11*o+n.a21*e+n.a31)/r,y:(n.a12*o+n.a22*e+n.a32)/r}},B=0;B<e.dimension;B++)for(var k=0;k<e.dimension;k++){var u=k+.5,C=B+.5,m=i(u,C);l.set(k,B,o.get(Math.floor(m.x),Math.floor(m.y)))}return{matrix:l,mappingFunction:i}}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var d=r(0);e.extract=a},function(o,e,r){\\\"use strict\\\";function t(o){return o.reduce(function(o,e){return o+e})}function c(o,e,r){var t,c,s,a=C(o,e),d=C(e,r),n=C(o,r);return d>=a&&d>=n?(l=[e,o,r],t=l[0],c=l[1],s=l[2]):n>=d&&n>=a?(i=[o,e,r],t=i[0],c=i[1],s=i[2]):(B=[o,r,e],t=B[0],c=B[1],s=B[2]),(s.x-c.x)*(t.y-c.y)-(s.y-c.y)*(t.x-c.x)<0&&(k=[s,t],t=k[0],s=k[1]),{bottomLeft:t,topLeft:c,topRight:s};var l,i,B,k}function s(o,e,r,c){var s=(t(d(o,r,c,5))/7+t(d(o,e,c,5))/7+t(d(r,o,c,5))/7+t(d(e,o,c,5))/7)/4;if(s<1)throw new Error(\\\"Invalid module size\\\");var a=Math.round(C(o,e)/s),n=Math.round(C(o,r)/s),l=Math.floor((a+n)/2)+7;switch(l%4){case 0:l++;break;case 2:l--}return{dimension:l,moduleSize:s}}function a(o,e,r,t){var c,s,a,d,n=[{x:Math.floor(o.x),y:Math.floor(o.y)}],l=Math.abs(e.y-o.y)>Math.abs(e.x-o.x);l?(c=Math.floor(o.y),s=Math.floor(o.x),a=Math.floor(e.y),d=Math.floor(e.x)):(c=Math.floor(o.x),s=Math.floor(o.y),a=Math.floor(e.x),d=Math.floor(e.y));for(var i=Math.abs(a-c),B=Math.abs(d-s),k=Math.floor(-i/2),u=c<a?1:-1,m=s<d?1:-1,f=!0,w=c,P=s;w!==a+u;w+=u){var v=l?P:w,h=l?w:P;if(r.get(v,h)!==f&&(f=!f,n.push({x:v,y:h}),n.length===t+1))break;if((k+=B)>0){if(P===d)break;P+=m,k-=i}}for(var p=[],y=0;y<t;y++)n[y]&&n[y+1]?p.push(C(n[y],n[y+1])):p.push(0);return p}function d(o,e,r,t){var c=e.y-o.y,s=e.x-o.x,d=a(o,e,r,Math.ceil(t/2)),n=a(o,{x:o.x-s,y:o.y-c},r,Math.ceil(t/2)),l=d.shift()+n.shift()-1;return(i=n.concat(l)).concat.apply(i,d);var i}function n(o,e){var r=t(o)/t(e),c=0;return e.forEach(function(e,t){c+=Math.pow(o[t]-e*r,2)}),{averageSize:r,error:c}}function l(o,e,r){try{var t=d(o,{x:-1,y:o.y},r,e.length),c=d(o,{x:o.x,y:-1},r,e.length),s={x:Math.max(0,o.x-o.y)-1,y:Math.max(0,o.y-o.x)-1},a=d(o,s,r,e.length),l={x:Math.min(r.width,o.x+o.y)+1,y:Math.min(r.height,o.y+o.x)+1},i=d(o,l,r,e.length),B=n(t,e),k=n(c,e),u=n(a,e),C=n(i,e),m=Math.sqrt(B.error*B.error+k.error*k.error+u.error*u.error+C.error*C.error),f=(B.averageSize+k.averageSize+u.averageSize+C.averageSize)/4;return m+(Math.pow(B.averageSize-f,2)+Math.pow(k.averageSize-f,2)+Math.pow(u.averageSize-f,2)+Math.pow(C.averageSize-f,2))/f}catch(o){return 1/0}}function i(o){for(var e=[],r=[],a=[],d=[],n=0;n<=o.height;n++)!function(c){for(var s=0,n=!1,l=[0,0,0,0,0],i=-1;i<=o.width;i++)!function(e){var a=o.get(e,c);if(a===n)s++;else{l=[l[1],l[2],l[3],l[4],s],s=1,n=a;var i=t(l)/7,B=Math.abs(l[0]-i)<i&&Math.abs(l[1]-i)<i&&Math.abs(l[2]-3*i)<3*i&&Math.abs(l[3]-i)<i&&Math.abs(l[4]-i)<i&&!a,C=t(l.slice(-3))/3,m=Math.abs(l[2]-C)<C&&Math.abs(l[3]-C)<C&&Math.abs(l[4]-C)<C&&a;if(B){var f=e-l[3]-l[4],w=f-l[2],P={startX:w,endX:f,y:c},v=r.filter(function(o){return w>=o.bottom.startX&&w<=o.bottom.endX||f>=o.bottom.startX&&w<=o.bottom.endX||w<=o.bottom.startX&&f>=o.bottom.endX&&l[2]/(o.bottom.endX-o.bottom.startX)<u&&l[2]/(o.bottom.endX-o.bottom.startX)>k});v.length>0?v[0].bottom=P:r.push({top:P,bottom:P})}if(m){var h=e-l[4],p=h-l[3],P={startX:p,y:c,endX:h},v=d.filter(function(o){return p>=o.bottom.startX&&p<=o.bottom.endX||h>=o.bottom.startX&&p<=o.bottom.endX||p<=o.bottom.startX&&h>=o.bottom.endX&&l[2]/(o.bottom.endX-o.bottom.startX)<u&&l[2]/(o.bottom.endX-o.bottom.startX)>k});v.length>0?v[0].bottom=P:d.push({top:P,bottom:P})}}}(i);e.push.apply(e,r.filter(function(o){return o.bottom.y!==c&&o.bottom.y-o.top.y>=2})),r=r.filter(function(o){return o.bottom.y===c}),a.push.apply(a,d.filter(function(o){return o.bottom.y!==c})),d=d.filter(function(o){return o.bottom.y===c})}(n);e.push.apply(e,r.filter(function(o){return o.bottom.y-o.top.y>=2})),a.push.apply(a,d);var i=e.filter(function(o){return o.bottom.y-o.top.y>=2}).map(function(e){var r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,c=(e.top.y+e.bottom.y+1)/2;if(o.get(Math.round(r),Math.round(c))){\\nvar s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1],a=t(s)/s.length;return{score:l({x:Math.round(r),y:Math.round(c)},[1,1,3,1,1],o),x:r,y:c,size:a}}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score}).map(function(o,e,r){if(e>B)return null;var t=r.filter(function(o,r){return e!==r}).map(function(e){return{x:e.x,y:e.y,score:e.score+Math.pow(e.size-o.size,2)/o.size,size:e.size}}).sort(function(o,e){return o.score-e.score});if(t.length<2)return null;var c=o.score+t[0].score+t[1].score;return{points:[o].concat(t.slice(0,2)),score:c}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score});if(0===i.length)return null;var m,f,w=c(i[0].points[0],i[0].points[1],i[0].points[2]),P=w.topRight,v=w.topLeft,h=w.bottomLeft;try{L=s(v,P,h,o),m=L.dimension,f=L.moduleSize}catch(o){return null}var p={x:P.x-v.x+h.x,y:P.y-v.y+h.y},y=(C(v,h)+C(v,P))/2/f,b=1-3/y,g={x:v.x+b*(p.x-v.x),y:v.y+b*(p.y-v.y)},x=a.map(function(e){var r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,c=(e.top.y+e.bottom.y+1)/2;if(o.get(Math.floor(r),Math.floor(c))){var s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1];t(s);return{x:r,y:c,score:l({x:Math.floor(r),y:Math.floor(c)},[1,1,1],o)+C({x:r,y:c},g)}}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score}),M=y>=15&&x.length?x[0]:g;return{alignmentPattern:{x:M.x,y:M.y},bottomLeft:{x:h.x,y:h.y},dimension:m,topLeft:{x:v.x,y:v.y},topRight:{x:P.x,y:P.y}};var L}Object.defineProperty(e,\\\"__esModule\\\",{value:!0});var B=4,k=.5,u=1.5,C=function(o,e){return Math.sqrt(Math.pow(e.x-o.x,2)+Math.pow(e.y-o.y,2))};e.locate=i}]).default}),self.addEventListener(\\\"message\\\",function(o){var e=jsQR(o.data.data,o.data.width,o.data.height);e?postMessage(e.data):postMessage(null)});\"], {\n  type: 'application/javascript'\n}); // Props that are allowed to change dynamicly\n\nvar propsKeys = ['delay', 'legacyMode', 'facingMode'];\nmodule.exports = (_temp = _class = function (_Component) {\n  _inherits(Reader, _Component);\n\n  function Reader(props) {\n    _classCallCheck(this, Reader);\n\n    var _this = _possibleConstructorReturn(this, (Reader.__proto__ || Object.getPrototypeOf(Reader)).call(this, props));\n\n    _this.els = {};\n    _this.state = {\n      mirrorVideo: false // Bind function to the class\n\n    };\n    _this.initiate = _this.initiate.bind(_this);\n    _this.initiateLegacyMode = _this.initiateLegacyMode.bind(_this);\n    _this.check = _this.check.bind(_this);\n    _this.handleVideo = _this.handleVideo.bind(_this);\n    _this.handleLoadStart = _this.handleLoadStart.bind(_this);\n    _this.handleInputChange = _this.handleInputChange.bind(_this);\n    _this.clearComponent = _this.clearComponent.bind(_this);\n    _this.handleReaderLoad = _this.handleReaderLoad.bind(_this);\n    _this.openImageDialog = _this.openImageDialog.bind(_this);\n    _this.handleWorkerMessage = _this.handleWorkerMessage.bind(_this);\n    _this.setRefFactory = _this.setRefFactory.bind(_this);\n    return _this;\n  }\n\n  _createClass(Reader, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // Initiate web worker execute handler according to mode.\n      this.worker = new Worker(URL.createObjectURL(workerBlob));\n      this.worker.onmessage = this.handleWorkerMessage;\n\n      if (!this.props.legacyMode) {\n        this.initiate();\n      } else {\n        this.initiateLegacyMode();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      // React according to change in props\n      var changedProps = havePropsChanged(this.props, nextProps, propsKeys);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = changedProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var prop = _step.value;\n\n          if (prop == 'facingMode') {\n            this.clearComponent();\n            this.initiate(nextProps);\n            break;\n          } else if (prop == 'delay') {\n            if (this.props.delay == false && !nextProps.legacyMode) {\n              this.timeout = setTimeout(this.check, nextProps.delay);\n            }\n\n            if (nextProps.delay == false) {\n              clearTimeout(this.timeout);\n            }\n          } else if (prop == 'legacyMode') {\n            if (this.props.legacyMode && !nextProps.legacyMode) {\n              this.clearComponent();\n              this.initiate(nextProps);\n            } else {\n              this.clearComponent();\n              this.componentDidUpdate = this.initiateLegacyMode;\n            }\n\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (nextState !== this.state) {\n        return true;\n      } // Only render when the `propsKeys` have changed.\n\n\n      var changedProps = havePropsChanged(this.props, nextProps, propsKeys);\n      return changedProps.length > 0;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // Stop web-worker and clear the component\n      if (this.worker) {\n        this.worker.terminate();\n        this.worker = undefined;\n      }\n\n      this.clearComponent();\n    }\n  }, {\n    key: 'clearComponent',\n    value: function clearComponent() {\n      // Remove all event listeners and variables\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = undefined;\n      }\n\n      if (this.stopCamera) {\n        this.stopCamera();\n      }\n\n      if (this.reader) {\n        this.reader.removeEventListener('load', this.handleReaderLoad);\n      }\n\n      if (this.els.img) {\n        this.els.img.removeEventListener('load', this.check);\n      }\n    }\n  }, {\n    key: 'initiate',\n    value: function initiate() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var onError = props.onError,\n          facingMode = props.facingMode; // Check browser facingMode constraint support\n      // Firefox ignores facingMode or deviceId constraints\n\n      var isFirefox = /firefox/i.test(navigator.userAgent);\n      var supported = {};\n\n      if (navigator.mediaDevices && typeof navigator.mediaDevices.getSupportedConstraints === 'function') {\n        supported = navigator.mediaDevices.getSupportedConstraints();\n      }\n\n      var constraints = {};\n\n      if (supported.facingMode) {\n        constraints.facingMode = {\n          ideal: facingMode\n        };\n      }\n\n      if (supported.frameRate) {\n        constraints.frameRate = {\n          ideal: 25,\n          min: 10\n        };\n      }\n\n      var vConstraintsPromise = supported.facingMode || isFirefox ? Promise.resolve(props.constraints || constraints) : getDeviceId(facingMode).then(function (deviceId) {\n        return Object.assign({}, {\n          deviceId: deviceId\n        }, props.constraints);\n      });\n      vConstraintsPromise.then(function (video) {\n        return navigator.mediaDevices.getUserMedia({\n          video: video\n        });\n      }).then(this.handleVideo).catch(onError);\n    }\n  }, {\n    key: 'handleVideo',\n    value: function handleVideo(stream) {\n      var preview = this.els.preview;\n      var facingMode = this.props.facingMode; // Preview element hasn't been rendered so wait for it.\n\n      if (!preview) {\n        return setTimeout(this.handleVideo, 200, stream);\n      } // Handle different browser implementations of MediaStreams as src\n\n\n      if ((preview || {}).srcObject !== undefined) {\n        preview.srcObject = stream;\n      } else if (preview.mozSrcObject !== undefined) {\n        preview.mozSrcObject = stream;\n      } else if (window.URL.createObjectURL) {\n        preview.src = window.URL.createObjectURL(stream);\n      } else if (window.webkitURL) {\n        preview.src = window.webkitURL.createObjectURL(stream);\n      } else {\n        preview.src = stream;\n      } // IOS play in fullscreen\n\n\n      preview.playsInline = true;\n      var streamTrack = stream.getTracks()[0]; // Assign `stopCamera` so the track can be stopped once component is cleared\n\n      this.stopCamera = streamTrack.stop.bind(streamTrack);\n      preview.addEventListener('loadstart', this.handleLoadStart);\n      this.setState({\n        mirrorVideo: facingMode == 'user',\n        streamLabel: streamTrack.label\n      });\n    }\n  }, {\n    key: 'handleLoadStart',\n    value: function handleLoadStart() {\n      var _props = this.props,\n          delay = _props.delay,\n          onLoad = _props.onLoad;\n      var _state = this.state,\n          mirrorVideo = _state.mirrorVideo,\n          streamLabel = _state.streamLabel;\n      var preview = this.els.preview;\n      preview.play();\n\n      if (typeof onLoad == 'function') {\n        onLoad({\n          mirrorVideo: mirrorVideo,\n          streamLabel: streamLabel\n        });\n      }\n\n      if (typeof delay == 'number') {\n        this.timeout = setTimeout(this.check, delay);\n      } // Some browsers call loadstart continuously\n\n\n      preview.removeEventListener('loadstart', this.handleLoadStart);\n    }\n  }, {\n    key: 'check',\n    value: function check() {\n      var _props2 = this.props,\n          legacyMode = _props2.legacyMode,\n          resolution = _props2.resolution,\n          delay = _props2.delay;\n      var _els = this.els,\n          preview = _els.preview,\n          canvas = _els.canvas,\n          img = _els.img; // Get image/video dimensions\n\n      var width = Math.floor(legacyMode ? img.naturalWidth : preview.videoWidth);\n      var height = Math.floor(legacyMode ? img.naturalHeight : preview.videoHeight); // Canvas draw offsets\n\n      var hozOffset = 0;\n      var vertOffset = 0; // Scale image to correct resolution\n\n      if (legacyMode) {\n        // Keep image aspect ratio\n        var greatestSize = width > height ? width : height;\n        var ratio = resolution / greatestSize;\n        height = ratio * height;\n        width = ratio * width;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        // Crop image to fit 1:1 aspect ratio\n        var smallestSize = width < height ? width : height;\n\n        var _ratio = resolution / smallestSize;\n\n        height = _ratio * height;\n        width = _ratio * width;\n        vertOffset = (height - resolution) / 2 * -1;\n        hozOffset = (width - resolution) / 2 * -1;\n        canvas.width = resolution;\n        canvas.height = resolution;\n      }\n\n      var previewIsPlaying = preview && preview.readyState === preview.HAVE_ENOUGH_DATA;\n\n      if (legacyMode || previewIsPlaying) {\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(legacyMode ? img : preview, hozOffset, vertOffset, width, height);\n        var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); // Send data to web-worker\n\n        this.worker.postMessage(imageData);\n      } else {\n        // Preview not ready -> check later\n        this.timeout = setTimeout(this.check, delay);\n      }\n    }\n  }, {\n    key: 'handleWorkerMessage',\n    value: function handleWorkerMessage(e) {\n      var _props3 = this.props,\n          onScan = _props3.onScan,\n          legacyMode = _props3.legacyMode,\n          delay = _props3.delay;\n      var decoded = e.data;\n      onScan(decoded || null);\n\n      if (!legacyMode && typeof delay == 'number' && this.worker) {\n        this.timeout = setTimeout(this.check, delay);\n      }\n    }\n  }, {\n    key: 'initiateLegacyMode',\n    value: function initiateLegacyMode() {\n      this.reader = new FileReader();\n      this.reader.addEventListener('load', this.handleReaderLoad);\n      this.els.img.addEventListener('load', this.check, false); // Reset componentDidUpdate\n\n      this.componentDidUpdate = undefined;\n\n      if (typeof this.props.onLoad == 'function') {\n        this.props.onLoad();\n      }\n    }\n  }, {\n    key: 'handleInputChange',\n    value: function handleInputChange(e) {\n      var selectedImg = e.target.files[0];\n      this.reader.readAsDataURL(selectedImg);\n    }\n  }, {\n    key: 'handleReaderLoad',\n    value: function handleReaderLoad(e) {\n      // Set selected image blob as img source\n      this.els.img.src = e.target.result;\n    }\n  }, {\n    key: 'openImageDialog',\n    value: function openImageDialog() {\n      // Function to be executed by parent in user action context to trigger img file uploader\n      this.els.input.click();\n    }\n  }, {\n    key: 'setRefFactory',\n    value: function setRefFactory(key) {\n      var _this2 = this;\n\n      return function (element) {\n        _this2.els[key] = element;\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props4 = this.props,\n          style = _props4.style,\n          className = _props4.className,\n          onImageLoad = _props4.onImageLoad,\n          legacyMode = _props4.legacyMode,\n          showViewFinder = _props4.showViewFinder,\n          facingMode = _props4.facingMode;\n      var containerStyle = {\n        overflow: 'hidden',\n        position: 'relative',\n        width: '100%',\n        paddingTop: '100%'\n      };\n      var hiddenStyle = {\n        display: 'none'\n      };\n      var previewStyle = {\n        top: 0,\n        left: 0,\n        display: 'block',\n        position: 'absolute',\n        overflow: 'hidden',\n        width: '100%',\n        height: '100%'\n      };\n\n      var videoPreviewStyle = _extends({}, previewStyle, {\n        objectFit: 'cover',\n        transform: this.state.mirrorVideo ? 'scaleX(-1)' : undefined\n      });\n\n      var imgPreviewStyle = _extends({}, previewStyle, {\n        objectFit: 'scale-down'\n      });\n\n      var viewFinderStyle = {\n        top: 0,\n        left: 0,\n        zIndex: 1,\n        boxSizing: 'border-box',\n        border: '50px solid rgba(0, 0, 0, 0.3)',\n        boxShadow: 'inset 0 0 0 5px rgba(255, 0, 0, 0.5)',\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n      };\n      return React.createElement('section', {\n        className: className,\n        style: style\n      }, React.createElement('section', {\n        style: containerStyle\n      }, !legacyMode && showViewFinder ? React.createElement('div', {\n        style: viewFinderStyle\n      }) : null, legacyMode ? React.createElement('input', {\n        style: hiddenStyle,\n        type: 'file',\n        accept: 'image/*',\n        ref: this.setRefFactory('input'),\n        onChange: this.handleInputChange\n      }) : null, legacyMode ? React.createElement('img', {\n        style: imgPreviewStyle,\n        ref: this.setRefFactory('img'),\n        onLoad: onImageLoad\n      }) : React.createElement('video', {\n        style: videoPreviewStyle,\n        ref: this.setRefFactory('preview')\n      }), React.createElement('canvas', {\n        style: hiddenStyle,\n        ref: this.setRefFactory('canvas')\n      })));\n    }\n  }]);\n\n  return Reader;\n}(Component), _class.propTypes = {\n  onScan: PropTypes.func.isRequired,\n  onError: PropTypes.func.isRequired,\n  onLoad: PropTypes.func,\n  onImageLoad: PropTypes.func,\n  delay: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n  facingMode: PropTypes.oneOf(['user', 'environment']),\n  legacyMode: PropTypes.bool,\n  resolution: PropTypes.number,\n  showViewFinder: PropTypes.bool,\n  style: PropTypes.any,\n  className: PropTypes.string,\n  constraints: PropTypes.object\n}, _class.defaultProps = {\n  delay: 500,\n  resolution: 600,\n  facingMode: 'environment',\n  showViewFinder: true,\n  constraints: null\n}, _temp);","'use strict';\n\nvar _require = require('./errors'),\n    NoVideoInputDevicesError = _require.NoVideoInputDevicesError;\n\nfunction defaultDeviceIdChooser(filteredDevices, videoDevices, facingMode) {\n  if (filteredDevices.length > 0) {\n    return filteredDevices[0].deviceId;\n  }\n\n  if (videoDevices.length == 1 || facingMode == 'user') {\n    return videoDevices[0].deviceId;\n  }\n\n  return videoDevices[1].deviceId;\n}\n\nvar getFacingModePattern = function getFacingModePattern(facingMode) {\n  return facingMode == 'environment' ? /rear|back|environment/ig : /front|user|face/ig;\n};\n\nfunction getDeviceId(facingMode) {\n  var chooseDeviceId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDeviceIdChooser; // Get manual deviceId from available devices.\n\n  return new Promise(function (resolve, reject) {\n    var enumerateDevices = void 0;\n\n    try {\n      enumerateDevices = navigator.mediaDevices.enumerateDevices();\n    } catch (err) {\n      reject(new NoVideoInputDevicesError());\n    }\n\n    enumerateDevices.then(function (devices) {\n      // Filter out non-videoinputs\n      var videoDevices = devices.filter(function (device) {\n        return device.kind == 'videoinput';\n      });\n\n      if (videoDevices.length < 1) {\n        reject(new NoVideoInputDevicesError());\n        return;\n      }\n\n      var pattern = getFacingModePattern(facingMode); // Filter out video devices without the pattern\n\n      var filteredDevices = videoDevices.filter(function (_ref) {\n        var label = _ref.label;\n        return pattern.test(label);\n      });\n      resolve(chooseDeviceId(filteredDevices, videoDevices, facingMode));\n    });\n  });\n}\n\nmodule.exports = {\n  getDeviceId: getDeviceId,\n  getFacingModePattern: getFacingModePattern\n};","'use strict';\n\nfunction NoVideoInputDevicesError() {\n  this.name = 'NoVideoInputDevicesError';\n  this.message = 'No video input devices found';\n}\n\nNoVideoInputDevicesError.prototype = new Error();\nmodule.exports = {\n  NoVideoInputDevicesError: NoVideoInputDevicesError\n};","\"use strict\";\n\nmodule.exports = function havePropsChanged(prevProps, nextProps, keys) {\n  var changedProps = [];\n  keys.forEach(function (key) {\n    if (prevProps[key] != nextProps[key]) {\n      changedProps.push(key);\n    }\n  });\n  return changedProps;\n};","\"use strict\";\n/**\n * From https://gist.github.com/nolanlawson/10340255\n */\n\nmodule.exports = function createBlob(parts, properties) {\n  parts = parts || [];\n  properties = properties || {};\n\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n\n    var BlobBuilder = window.BlobBuilder || window.MSBlobBuilder || window.MozBlobBuilder || window.WebKitBlobBuilder;\n    var builder = new BlobBuilder();\n\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n\n    return builder.getBlob(properties.type);\n  }\n};","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps); // Map ICE parameters (ufrag, pwd) to SDP.\n\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()); // Map DTLS parameters to SDP.\n\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : dtlsRole || 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId || transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId; // spec.\n\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' + trackId + '\\r\\n';\n    sdp += 'a=' + msid; // for Chrome. Legacy should no longer be required.\n\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid; // RTX\n\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  } // FIXME: this should be written by writeRtpDescription.\n\n\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n\n  return sdp;\n} // Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n\n\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n\n      var isString = typeof urls === 'string';\n\n      if (isString) {\n        urls = [urls];\n      }\n\n      urls = urls.filter(function (url) {\n        var validTurn = url.indexOf('turn:') === 0 && url.indexOf('transport=udp') !== -1 && url.indexOf('turn:[') === -1 && !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 && url.indexOf('?transport=udp') === -1;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n} // Determines the intersection of local and remote capabilities.\n\n\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function findCodecByPayloadType(pt, codecs) {\n    pt = parseInt(pt, 10);\n\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt || codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function rtxCapabilityMatches(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec && lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function (lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() && lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' && lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec, localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n\n        rCodec.numChannels = Math.min(lCodec.numChannels, rCodec.numChannels); // push rCodec so we reply with offerer payload type\n\n        commonCapabilities.codecs.push(rCodec); // determine common feedback mechanisms\n\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function (fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type && lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n\n          return false;\n        }); // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n\n        break;\n      }\n    }\n  });\n  localCapabilities.headerExtensions.forEach(function (lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length; i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  }); // FIXME: fecMechanisms\n\n  return commonCapabilities;\n} // is action=setLocalDescription with type allowed in signalingState\n\n\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates().find(function (remoteCandidate) {\n    return candidate.foundation === remoteCandidate.foundation && candidate.ip === remoteCandidate.ip && candidate.port === remoteCandidate.port && candidate.priority === remoteCandidate.priority && candidate.protocol === remoteCandidate.protocol && candidate.type === remoteCandidate.type;\n  });\n\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n\n  return !alreadyAdded;\n}\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name; // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function (window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack', {\n      track: track\n    }));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack', {\n      track: track\n    }));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {\n      receiver: receiver\n    };\n    trackEvent.streams = streams;\n    window.setTimeout(function () {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function RTCPeerConnection(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n\n    ['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(function (method) {\n      pc[method] = _eventTarget[method].bind(_eventTarget);\n    });\n    this.canTrickleIceCandidates = null;\n    this.needNegotiation = false;\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this._localDescription = null;\n    this._remoteDescription = null;\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n    config = JSON.parse(JSON.stringify(config || {}));\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw makeError('NotSupportedError', 'rtcpMuxPolicy \\'negotiate\\' is not supported');\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n    this._iceGatherers = [];\n\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config; // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n\n    this.transceivers = [];\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function get() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function get() {\n      return this._remoteDescription;\n    }\n  }); // set up event handlers on prototype\n\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function (name, event) {\n    if (this._isClosed) {\n      return;\n    }\n\n    this.dispatchEvent(event);\n\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function () {\n    var event = new Event('icegatheringstatechange');\n\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function () {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function () {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function () {\n    return this.remoteStreams;\n  }; // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n\n\n  RTCPeerConnection.prototype._createTransceiver = function (kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function (track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function (s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track && this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track, transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function (stream) {\n    var pc = this;\n\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function (track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function (track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function (event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function (sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function (t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError', 'Sender was not created by this connection.');\n    }\n\n    var stream = transceiver.stream;\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null; // remove the stream from the set of local streams\n\n    var localStreams = this.transceivers.map(function (t) {\n      return t.stream;\n    });\n\n    if (localStreams.indexOf(stream) === -1 && this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function (stream) {\n    var pc = this;\n    stream.getTracks().forEach(function (track) {\n      var sender = pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpSender;\n    }).map(function (transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpReceiver;\n    }).map(function (transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n  RTCPeerConnection.prototype._createIceGatherer = function (sdpMLineIndex, usingBundle) {\n    var pc = this;\n\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state', {\n      value: 'new',\n      writable: true\n    });\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n\n    this.transceivers[sdpMLineIndex].bufferCandidates = function (event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0; // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n\n      iceGatherer.state = end ? 'completed' : 'gathering';\n\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n\n    iceGatherer.addEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  }; // start gathering from an RTCIceGatherer.\n\n\n  RTCPeerConnection.prototype._gather = function (mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n\n    var bufferedCandidateEvents = this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n\n    iceGatherer.onlocalcandidate = function (evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n\n      var event = new Event('icecandidate');\n      event.candidate = {\n        sdpMid: mid,\n        sdpMLineIndex: sdpMLineIndex\n      };\n      var cand = evt.candidate; // Edge emits an empty object for RTCIceCandidateComplete‥\n\n      var end = !cand || Object.keys(cand).length === 0;\n\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        } // RTCIceCandidate doesn't have a component, needs to be added\n\n\n        cand.component = 1; // also the usernameFragment. TODO: update SDP to take both variants.\n\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate, SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n\n        event.candidate.toJSON = function () {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      } // update local description.\n\n\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] += 'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] += 'a=end-of-candidates\\r\\n';\n      }\n\n      pc._localDescription.sdp = SDPUtils.getDescription(pc._localDescription.sdp) + sections.join('');\n      var complete = pc.transceivers.every(function (transceiver) {\n        return transceiver.iceGatherer && transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n\n        pc._emitGatheringStateChange();\n      } // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n\n\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n\n        pc.iceGatheringState = 'complete';\n\n        pc._emitGatheringStateChange();\n      }\n    }; // emit already gathered candidates.\n\n\n    window.setTimeout(function () {\n      bufferedCandidateEvents.forEach(function (e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  }; // Create ICE transport and DTLS transport.\n\n\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function () {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n\n    iceTransport.onicestatechange = function () {\n      pc._updateIceConnectionState();\n\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n\n    dtlsTransport.ondtlsstatechange = function () {\n      pc._updateConnectionState();\n    };\n\n    dtlsTransport.onerror = function () {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state', {\n        value: 'failed',\n        writable: true\n      });\n\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  }; // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n\n\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function (sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  }; // Start the RTP Sender and Receiver for a transceiver.\n\n\n  RTCPeerConnection.prototype._transceive = function (transceiver, send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n\n      transceiver.rtpSender.send(params);\n    }\n\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video' && transceiver.recvEncodingParameters && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function (p) {\n          delete p.rtx;\n        });\n      }\n\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function (description) {\n    var pc = this; // Note: pranswer is not supported.\n\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set local ' + description.type + ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n      pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities; // treat bundle-only as not-rejected.\n\n        var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters, isIceLite ? 'controlling' : 'controlled');\n            }\n\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          } // Calculate intersection of capabilities.\n\n\n          var params = getCommonCapabilities(localCapabilities, remoteCapabilities); // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n\n          pc._transceive(transceiver, params.codecs.length > 0, false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function (description) {\n    var pc = this; // Note: pranswer is not supported.\n\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set remote ' + description.type + ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function (stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart, 'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart, 'a=ice-options:')[0];\n\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ').indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function (mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection); // treat bundle-only as not-rejected.\n\n      var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier(); // Reject datachannels which are not implemented yet.\n\n      if (rejected || kind === 'application' && (protocol === 'DTLS/SCTP' || protocol === 'UDP/DTLS/SCTP')) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] && pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n      var track; // FIXME: ensure the mediaSection has rtcp-mux set.\n\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n\n      recvEncodingParameters = SDPUtils.parseRtpEncodingParameters(mediaSection);\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n      var isComplete = SDPUtils.matchPrefix(mediaSection, 'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:').map(function (cand) {\n        return SDPUtils.parseCandidate(cand);\n      }).filter(function (cand) {\n        return cand.component === 1;\n      }); // Check if we can use BUNDLE and dispose transports.\n\n      if ((description.type === 'offer' || description.type === 'answer') && !rejected && usingBundle && sdpMLineIndex > 0 && pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n\n        pc.transceivers[sdpMLineIndex].iceGatherer = pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport = pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport = pc.transceivers[0].dtlsTransport;\n\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n      }\n\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] || pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind); // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n            return codec.name !== 'rtx';\n          });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }]; // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n\n        var isNewTrack = false;\n\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver || new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track; // FIXME: does not work with Plan B.\n\n            if (remoteMsid && remoteMsid.stream === '-') {// no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function get() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n\n              Object.defineProperty(track, 'id', {\n                get: function get() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n\n              stream = streams.default;\n            }\n\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function (s) {\n            var nativeTrack = s.getTracks().find(function (t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters; // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n\n        pc._transceive(pc.transceivers[sdpMLineIndex], false, isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters = recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities = remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) && (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters, 'controlling');\n          }\n\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        } // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n\n\n        var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n        var hasRtx = commonCapabilities.codecs.filter(function (c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver, direction === 'sendrecv' || direction === 'recvonly', direction === 'sendrecv' || direction === 'sendonly'); // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n\n\n        if (rtpReceiver && (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    Object.keys(streams).forEach(function (sid) {\n      var stream = streams[sid];\n\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function () {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function (item) {\n          var track = item[0];\n          var receiver = item[1];\n\n          if (stream.id !== item[2].id) {\n            return;\n          }\n\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function (item) {\n      if (item[2]) {\n        return;\n      }\n\n      fireAddTrack(pc, item[0], item[1], []);\n    }); // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n\n    window.setTimeout(function () {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n\n      pc.transceivers.forEach(function (transceiver) {\n        if (transceiver.iceTransport && transceiver.iceTransport.state === 'new' && transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' + 'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function () {\n    this.transceivers.forEach(function (transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    }); // FIXME: clean up tracks, local streams, remote streams, etc\n\n    this._isClosed = true;\n\n    this._updateSignalingState('closed');\n  }; // Update the signaling state.\n\n\n  RTCPeerConnection.prototype._updateSignalingState = function (newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n\n    this._dispatchEvent('signalingstatechange', event);\n  }; // Determine whether to fire the negotiationneeded event.\n\n\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function () {\n    var pc = this;\n\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n\n    this.needNegotiation = true;\n    window.setTimeout(function () {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  }; // Update the ice connection state.\n\n\n  RTCPeerConnection.prototype._updateIceConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n    newState = 'new';\n\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  }; // Update the connection state.\n\n\n  RTCPeerConnection.prototype._updateConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    }); // ICETransport.completed and connected are the same for this purpose.\n\n    states.connected += states.completed;\n    newState = 'new';\n\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function () {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'video';\n    }).length; // Determine number of audio and video tracks we need to send/recv.\n\n    var offerOptions = arguments[0];\n\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError('Legacy mandatory/optional constraints not supported.');\n      }\n\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function (transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    }); // Create M-lines for recvonly streams.\n\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n\n        numAudioTracks--;\n      }\n\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind); // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n          return codec.name !== 'rtx';\n        });\n      }\n\n      localCapabilities.codecs.forEach(function (codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' && codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        } // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n\n\n        if (transceiver.remoteCapabilities && transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function (remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() && codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function (hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities && transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function (rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      }); // generate an ssrc now, to be used later in rtpSender.send\n\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' && !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    }); // always offer BUNDLE and dispose on return if not supported.\n\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n\n    sdp += 'a=ice-options:trickle\\r\\n';\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities, 'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' && (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function (cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function () {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' || pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n\n    sdp += 'a=ice-options:trickle\\r\\n';\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') {\n            // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol + ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' + 'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' + 'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' + 'a=inactive\\r\\n' + 'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      } // FIXME: look at direction.\n\n\n      if (transceiver.stream) {\n        var localTrack;\n\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' && !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      } // Calculate intersection of capabilities.\n\n\n      var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n      var hasRtx = commonCapabilities.codecs.filter(function (c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities, 'answer', transceiver.stream, pc._dtlsRole);\n\n      if (transceiver.rtcpParameters && transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function (candidate) {\n    var pc = this;\n    var sections;\n\n    if (candidate && !(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    } // TODO: needs to go into ops queue.\n\n\n    return new Promise(function (resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError', 'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp = SDPUtils.getDescription(pc._remoteDescription.sdp) + sections.join('');\n\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n\n        var transceiver = pc.transceivers[sdpMLineIndex];\n\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n\n          var cand = Object.keys(candidate.candidate).length > 0 ? SDPUtils.parseCandidate(candidate.candidate) : {}; // Ignore Chrome's invalid candidates since Edge does not like them.\n\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          } // Ignore RTCP candidates, we assume RTCP-MUX.\n\n\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          } // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n\n\n          if (sdpMLineIndex === 0 || sdpMLineIndex > 0 && transceiver.iceTransport !== pc.transceivers[0].iceTransport) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError', 'Can not add ICE candidate'));\n            }\n          } // update the remoteDescription.\n\n\n          var candidateString = candidate.candidate.trim();\n\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' + (cand.type ? candidateString : 'end-of-candidates') + '\\r\\n';\n          pc._remoteDescription.sdp = SDPUtils.getDescription(pc._remoteDescription.sdp) + sections.join('');\n        } else {\n          return reject(makeError('OperationError', 'Can not add ICE candidate'));\n        }\n      }\n\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function (selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function (transceiver) {\n        if (transceiver.rtpSender && transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function (transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport', 'dtlsTransport'].forEach(function (method) {\n        if (transceiver[method]) {\n          promises.push(transceiver[method].getStats());\n        }\n      });\n    });\n    return Promise.all(promises).then(function (allStats) {\n      var results = new Map();\n      allStats.forEach(function (stats) {\n        stats.forEach(function (stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  }; // fix low-level stat names and return Map instead of object.\n\n\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer', 'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function (ortcObjectName) {\n    var obj = window[ortcObjectName];\n\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n\n      obj.prototype.getStats = function () {\n        return nativeGetstats.apply(this).then(function (nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function (id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  }); // legacy callback shims. Should be moved to adapter.js some days.\n\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[0] === 'function' || typeof args[1] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, [arguments[2]]).then(function (description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function (error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[1] === 'function' || typeof args[2] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function (error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  }); // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n\n  ['getStats'].forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  return RTCPeerConnection;\n};","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport _defineProperty from \"C:\\\\Users\\\\D\\\\Documents\\\\alcance\\\\gitHubAlcance\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\n\nexport function extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n} // Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\n\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n\n  proto.addEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n\n    var wrappedCallback = function wrappedCallback(e) {\n      var modifiedEvent = wrapper(e);\n\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName, wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n\n  proto.removeEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName, unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n\n      if (cb) {\n        this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n  }\n\n  logDisabled_ = bool;\n  return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n}\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\n\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n  }\n\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\n\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n}\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\n\nexport function detectBrowser(window) {\n  var navigator = window.navigator; // Returned result object.\n\n  var result = {\n    browser: null,\n    version: null\n  }; // Fail early if it's not a browser\n\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) {\n    // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia || window.isSecureContext === false && window.webkitRTCPeerConnection && !window.RTCIceGatherer) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver && 'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else {\n    // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\n\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\n\n\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function (accumulator, key) {\n    var isObj = isObject(data[key]);\n    var value = isObj ? compactObject(data[key]) : data[key];\n    var isEmptyObject = isObj && !Object.keys(value).length;\n\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n\n    return Object.assign(accumulator, _defineProperty({}, key, value));\n  }, {});\n}\n/* iterates the stats graph recursively. */\n\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function (name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function (id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n/* filter getStats for a sender/receiver track. */\n\nexport function filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n\n  if (track === null) {\n    return filteredResult;\n  }\n\n  var trackStats = [];\n  result.forEach(function (value) {\n    if (value.type === 'track' && value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function (trackStat) {\n    result.forEach(function (stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils.js';\nvar logging = utils.log;\nexport function shimGetUserMedia(window) {\n  var navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  var browserDetails = utils.detectBrowser(window);\n\n  var constraintsToChrome_ = function constraintsToChrome_(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n\n    var cc = {};\n    Object.keys(c).forEach(function (key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n\n      var r = typeof c[key] === 'object' ? c[key] : {\n        ideal: c[key]\n      };\n\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n\n      var oldname_ = function oldname_(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n\n        return name === 'deviceId' ? 'sourceId' : name;\n      };\n\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function (mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n\n    return cc;\n  };\n\n  var shimConstraints_ = function shimConstraints_(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n\n    constraints = JSON.parse(JSON.stringify(constraints));\n\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function remap(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && (typeof face === 'object' ? face : {\n        ideal: face\n      });\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if (face && (face.exact === 'user' || face.exact === 'environment' || face.ideal === 'user' || face.ideal === 'environment') && !(navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode && !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            devices = devices.filter(function (d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function (d) {\n              return matches.some(function (match) {\n                return d.label.toLowerCase().includes(match);\n              });\n            });\n\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {\n                exact: dev.deviceId\n              } : {\n                ideal: dev.deviceId\n              };\n            }\n\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function shimError_(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function getUserMedia_(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function (c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function (e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_.bind(navigator); // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n\n  if (navigator.mediaDevices.getUserMedia) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (cs) {\n      return shimConstraints_(cs, function (c) {\n        return origGetUserMedia(c).then(function (stream) {\n          if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n\n          return stream;\n        }, function (e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n}","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n\n  if (!window.navigator.mediaDevices) {\n    return;\n  } // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n\n\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' + 'a function');\n    return;\n  }\n\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    return getSourceId(constraints).then(function (sourceId) {\n      var widthSpecified = constraints.video && constraints.video.width;\n      var heightSpecified = constraints.video && constraints.video.height;\n      var frameRateSpecified = constraints.video && constraints.video.frameRate;\n      constraints.video = {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sourceId,\n          maxFrameRate: frameRateSpecified || 3\n        }\n      };\n\n      if (widthSpecified) {\n        constraints.video.mandatory.maxWidth = widthSpecified;\n      }\n\n      if (heightSpecified) {\n        constraints.video.mandatory.maxHeight = heightSpecified;\n      }\n\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    });\n  };\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport _defineProperty from \"C:\\\\Users\\\\D\\\\Documents\\\\alcance\\\\gitHubAlcance\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport * as utils from '../utils.js';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get: function get() {\n        return this._ontrack;\n      },\n      set: function set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var _this = this;\n\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = function (e) {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', function (te) {\n            var receiver;\n\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === te.track.id;\n              });\n            } else {\n              receiver = {\n                track: te.track\n              };\n            }\n\n            var event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver: receiver\n            };\n            event.streams = [e.stream];\n\n            _this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(function (track) {\n            var receiver;\n\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === track.id;\n              });\n            } else {\n              receiver = {\n                track: track\n              };\n            }\n\n            var event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver: receiver\n            };\n            event.streams = [e.stream];\n\n            _this.dispatchEvent(event);\n          });\n        };\n\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver', {\n          value: {\n            receiver: e.receiver\n          }\n        });\n      }\n\n      return e;\n    });\n  }\n}\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    var shimSenderWithDtmf = function shimSenderWithDtmf(pc, track) {\n      return {\n        track: track,\n\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n\n          return this._dtmf;\n        },\n\n        _pc: pc\n      };\n    }; // augment addTrack when getSenders is not available.\n\n\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n      window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        var sender = origAddTrack.apply(this, arguments);\n\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n\n          this._senders.push(sender);\n        }\n\n        return sender;\n      };\n\n      var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n\n      window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        origRemoveTrack.apply(this, arguments);\n\n        var idx = this._senders.indexOf(sender);\n\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this2 = this;\n\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        _this2._senders.push(shimSenderWithDtmf(_this2, track));\n      });\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        var sender = _this3._senders.find(function (s) {\n          return s.track === track;\n        });\n\n        if (sender) {\n          // remove sender\n          _this3._senders.splice(_this3._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this4 = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this4;\n      });\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get: function get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n\n        return this._dtmf;\n      }\n    });\n  }\n}\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _this5 = this;\n\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2]; // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n\n\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    } // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n\n\n    if (origGetStats.length === 0 && (arguments.length === 0 || typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    var fixChromeStats_ = function fixChromeStats_(response) {\n      var standardReport = {};\n      var reports = response.result();\n      reports.forEach(function (report) {\n        var standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(function (name) {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n      return standardReport;\n    }; // shim getStats with maplike support\n\n\n    var makeMapStats = function makeMapStats(stats) {\n      return new Map(Object.keys(stats).map(function (key) {\n        return [key, stats[key]];\n      }));\n    };\n\n    if (arguments.length >= 2) {\n      var successCallbackWrapper_ = function successCallbackWrapper_(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_, selector]);\n    } // promise-support\n\n\n    return new Promise(function (resolve, reject) {\n      origGetStats.apply(_this5, [function (response) {\n        resolve(makeMapStats(fixChromeStats_(response)));\n      }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  } // shim sender stats.\n\n\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        var _this6 = this;\n\n        var senders = origGetSenders.apply(this, []);\n        senders.forEach(function (sender) {\n          return sender._pc = _this6;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      var sender = this;\n      return this._pc.getStats().then(function (result) {\n        return (\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          utils.filterStats(result, sender.track, true)\n        );\n      });\n    };\n  } // shim receiver stats.\n\n\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        var _this7 = this;\n\n        var receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(function (receiver) {\n          return receiver._pc = _this7;\n        });\n        return receivers;\n      };\n    }\n\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      var receiver = this;\n      return this._pc.getStats().then(function (result) {\n        return utils.filterStats(result, receiver.track, false);\n      });\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  } // shim RTCPeerConnection.getStats(track).\n\n\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n      var track = arguments[0];\n      var sender;\n      var receiver;\n      var err;\n      this.getSenders().forEach(function (s) {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(function (r) {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n\n        return r.track === track;\n      });\n\n      if (err || sender && receiver) {\n        return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n\n      return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n    }\n\n    return origGetStats.apply(this, arguments);\n  };\n}\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this8 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n      return _this8._shimmedLocalStreams[streamId][0];\n    });\n  };\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    var sender = origAddTrack.apply(this, arguments);\n\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n\n    return sender;\n  };\n\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this9 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this9.getSenders().find(function (s) {\n        return s.track === track;\n      });\n\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    var existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    var newSenders = this.getSenders().filter(function (newSender) {\n      return existingSenders.indexOf(newSender) === -1;\n    });\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this10 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n        var idx = _this10._shimmedLocalStreams[streamId].indexOf(sender);\n\n        if (idx !== -1) {\n          _this10._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n\n        if (_this10._shimmedLocalStreams[streamId].length === 1) {\n          delete _this10._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var browserDetails = utils.detectBrowser(window); // shim addTrack and removeTrack.\n\n  if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  } // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n\n\n  var origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this11 = this;\n\n    var nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(function (stream) {\n      return _this11._reverseStreams[stream.id];\n    });\n  };\n\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this12 = this;\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this12.getSenders().find(function (s) {\n        return s.track === track;\n      });\n\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    }); // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n\n    if (!this._reverseStreams[stream.id]) {\n      var newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n\n    origAddStream.apply(this, [stream]);\n  };\n\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    origRemoveStream.apply(this, [this._streams[stream.id] || stream]);\n    delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    var _this13 = this;\n\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n\n    var streams = [].slice.call(arguments, 1);\n\n    if (streams.length !== 1 || !streams[0].getTracks().find(function (t) {\n      return t === track;\n    })) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n    }\n\n    var alreadyExists = this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.', 'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    var oldStream = this._streams[stream.id];\n\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track); // Trigger ONN async.\n\n      Promise.resolve().then(function () {\n        _this13.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      var newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n\n    return this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n  }; // replace the internal stream id with the external one and\n  // vice versa.\n\n\n  function replaceInternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n\n  function replaceExternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n\n  ['createOffer', 'createAnswer'].forEach(function (method) {\n    var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n    var methodObj = _defineProperty({}, method, function () {\n      var _this14 = this;\n\n      var args = arguments;\n      var isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [function (description) {\n          var desc = replaceInternalStreamId(_this14, description);\n          args[0].apply(null, [desc]);\n        }, function (err) {\n          if (args[1]) {\n            args[1].apply(null, err);\n          }\n        }, arguments[2]]);\n      }\n\n      return nativeMethod.apply(this, arguments).then(function (description) {\n        return replaceInternalStreamId(_this14, description);\n      });\n    });\n\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n  var origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  }; // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n\n  var origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n    get: function get() {\n      var description = origLocalDescription.get.apply(this);\n\n      if (description.type === '') {\n        return description;\n      }\n\n      return replaceInternalStreamId(this, description);\n    }\n  });\n\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this15 = this;\n\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    } // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n\n\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n\n    var isLocal = sender._pc === this;\n\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n    } // Search for the native stream the senders track belongs to.\n\n\n    this._streams = this._streams || {};\n    var stream;\n    Object.keys(this._streams).forEach(function (streamid) {\n      var hasTrack = _this15._streams[streamid].getTracks().find(function (track) {\n        return sender.track === track;\n      });\n\n      if (hasTrack) {\n        stream = _this15._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\nexport function shimPeerConnection(window) {\n  var browserDetails = utils.detectBrowser(window);\n\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n\n  if (!window.RTCPeerConnection) {\n    return;\n  } // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n\n\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  } // support for addIceCandidate(null or undefined)\n\n\n  var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n\n      return Promise.resolve();\n    } // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions. Native support planned for Chrome M77.\n\n\n    if (browserDetails.version < 78 && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function (e) {\n    var pc = e.target;\n\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n\n    return e;\n  });\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function shimError_(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function toString() {\n        return this.name;\n      }\n    };\n  }; // getUserMedia error shim.\n\n\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n  navigator.mediaDevices.getUserMedia = function (c) {\n    return origGetUserMedia(c).catch(function (e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n}","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n\n  window.navigator.mediaDevices.getDisplayMedia = window.navigator.getDisplayMedia.bind(window.navigator);\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport { filterIceServers } from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimPeerConnection(window) {\n  var browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    } // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n\n\n    if (browserDetails.version < 15025) {\n      var origMSTEnabled = Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set: function set(value) {\n          origMSTEnabled.set.call(this, value);\n          var ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  } // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n\n\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get: function get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n\n        return this._dtmf;\n      }\n    });\n  } // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n\n\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  var RTCPeerConnectionShim = shimRTCPeerConnection(window, browserDetails.version);\n\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers, browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n\n    return new RTCPeerConnectionShim(config);\n  };\n\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender && !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack = window.RTCRtpSender.prototype.setTrack;\n  }\n}","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils'; // Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n\nexport function filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n\n      var isString = typeof urls === 'string';\n\n      if (isString) {\n        urls = [urls];\n      }\n\n      urls = urls.filter(function (url) {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        var validTurn = url.startsWith('turn') && !url.startsWith('turn:[') && url.includes('transport=udp');\n\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n\n        return validTurn && !hasTurn;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport function shimGetUserMedia(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function (constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function remap(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n\n      MediaStreamTrack.prototype.getSettings = function () {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n\n      MediaStreamTrack.prototype.applyConstraints = function (c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    if (!(constraints && constraints.video)) {\n      var err = new DOMException('getDisplayMedia without video ' + 'constraints is undefined');\n      err.name = 'NotFoundError'; // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n\n      err.code = 8;\n      return Promise.reject(err);\n    }\n\n    if (constraints.video === true) {\n      constraints.video = {\n        mediaSource: preferredMediaSource\n      };\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport _defineProperty from \"C:\\\\Users\\\\D\\\\Documents\\\\alcance\\\\gitHubAlcance\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport * as utils from '../utils';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return {\n          receiver: this.receiver\n        };\n      }\n    });\n  }\n}\nexport function shimPeerConnection(window) {\n  var browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  } // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n\n\n  if (browserDetails.version < 68) {\n    var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n\n        return Promise.resolve();\n      } // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n\n\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  var modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n  var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2];\n\n    return nativeGetStats.apply(this, [selector || null]).then(function (stats) {\n      if (browserDetails.version < 53 && !onSucc) {\n        // Shim only promise getStats with spec-hyphens in type names\n        // Leave callback version alone; misc old uses of forEach before Map\n        try {\n          stats.forEach(function (stat) {\n            stat.type = modernStatsTypes[stat.type] || stat.type;\n          });\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          } // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n\n\n          stats.forEach(function (stat, i) {\n            stats.set(i, Object.assign({}, stat, {\n              type: modernStatsTypes[stat.type] || stat.type\n            }));\n          });\n        }\n      }\n\n      return stats;\n    }).then(onSucc, onErr);\n  };\n}\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n\n  var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this;\n      });\n      return senders;\n    };\n  }\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      var sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n  };\n}\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n\n  var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      var _this2 = this;\n\n      var receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(function (receiver) {\n        return receiver._pc = _this2;\n      });\n      return receivers;\n    };\n  }\n\n  utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    var _this3 = this;\n\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(function (sender) {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        _this3.removeTrack(sender);\n      }\n    });\n  };\n}\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n\n  var origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n      this.setParametersPromises = [];\n      var initParameters = arguments[1];\n      var shouldPerformCheck = initParameters && 'sendEncodings' in initParameters;\n\n      if (shouldPerformCheck) {\n        // If sendEncodings params are provided, validate grammar\n        initParameters.sendEncodings.forEach(function (encodingParam) {\n          if ('rid' in encodingParam) {\n            var ridRegex = /^[a-z0-9]{0,16}$/i;\n\n            if (!ridRegex.test(encodingParam.rid)) {\n              throw new TypeError('Invalid RID value provided.');\n            }\n          }\n\n          if ('scaleResolutionDownBy' in encodingParam) {\n            if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n              throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n          }\n\n          if ('maxFramerate' in encodingParam) {\n            if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n              throw new RangeError('max_framerate must be >= 0.0');\n            }\n          }\n        });\n      }\n\n      var transceiver = origAddTransceiver.apply(this, arguments);\n\n      if (shouldPerformCheck) {\n        // Check if the init options were applied. If not we do this in an\n        // asynchronous way and save the promise reference in a global object.\n        // This is an ugly hack, but at the same time is way more robust than\n        // checking the sender parameters before and after the createOffer\n        // Also note that after the createoffer we are not 100% sure that\n        // the params were asynchronously applied so we might miss the\n        // opportunity to recreate offer.\n        var sender = transceiver.sender;\n        var params = sender.getParameters();\n\n        if (!('encodings' in params)) {\n          params.encodings = initParameters.sendEncodings;\n          this.setParametersPromises.push(sender.setParameters(params).catch(function () {}));\n        }\n      }\n\n      return transceiver;\n    };\n  }\n}\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    var _arguments2 = arguments,\n        _this4 = this;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateOffer.apply(_this4, _arguments2);\n      }).finally(function () {\n        _this4.setParametersPromises = [];\n      });\n    }\n\n    return origCreateOffer.apply(this, arguments);\n  };\n}\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n\n  var origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    var _arguments3 = arguments,\n        _this5 = this;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateAnswer.apply(_this5, _arguments3);\n      }).finally(function () {\n        _this5.setParametersPromises = [];\n      });\n    }\n\n    return origCreateAnswer.apply(this, arguments);\n  };\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\n\nimport * as utils from '../utils';\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n\n      return this._localStreams;\n    };\n  }\n\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this = this;\n\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      } // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n\n\n      stream.getAudioTracks().forEach(function (track) {\n        return _addTrack.call(_this, track, stream);\n      });\n      stream.getVideoTracks().forEach(function (track) {\n        return _addTrack.call(_this, track, stream);\n      });\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function addTrack(track) {\n      var stream = arguments[1];\n\n      if (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [stream];\n        } else if (!this._localStreams.includes(stream)) {\n          this._localStreams.push(stream);\n        }\n      }\n\n      return _addTrack.apply(this, arguments);\n    };\n  }\n\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this2 = this;\n\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n\n      var index = this._localStreams.indexOf(stream);\n\n      if (index === -1) {\n        return;\n      }\n\n      this._localStreams.splice(index, 1);\n\n      var tracks = stream.getTracks();\n      this.getSenders().forEach(function (sender) {\n        if (tracks.includes(sender.track)) {\n          _this2.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function getRemoteStreams() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get: function get() {\n        return this._onaddstream;\n      },\n      set: function set(f) {\n        var _this3 = this;\n\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(function (stream) {\n            if (!_this3._remoteStreams) {\n              _this3._remoteStreams = [];\n            }\n\n            if (_this3._remoteStreams.includes(stream)) {\n              return;\n            }\n\n            _this3._remoteStreams.push(stream);\n\n            var event = new Event('addstream');\n            event.stream = stream;\n\n            _this3.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var pc = this;\n\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(function (stream) {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n\n            pc._remoteStreams.push(stream);\n\n            var event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n\n  var prototype = window.RTCPeerConnection.prototype;\n  var origCreateOffer = prototype.createOffer;\n  var origCreateAnswer = prototype.createAnswer;\n  var setLocalDescription = prototype.setLocalDescription;\n  var setRemoteDescription = prototype.setRemoteDescription;\n  var addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function createOffer(successCallback, failureCallback) {\n    var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    var promise = origCreateOffer.apply(this, [options]);\n\n    if (!failureCallback) {\n      return promise;\n    }\n\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function createAnswer(successCallback, failureCallback) {\n    var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    var promise = origCreateAnswer.apply(this, [options]);\n\n    if (!failureCallback) {\n      return promise;\n    }\n\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  var withCallback = function withCallback(description, successCallback, failureCallback) {\n    var promise = setLocalDescription.apply(this, [description]);\n\n    if (!failureCallback) {\n      return promise;\n    }\n\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function withCallback(description, successCallback, failureCallback) {\n    var promise = setRemoteDescription.apply(this, [description]);\n\n    if (!failureCallback) {\n      return promise;\n    }\n\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function withCallback(candidate, successCallback, failureCallback) {\n    var promise = addIceCandidate.apply(this, [candidate]);\n\n    if (!failureCallback) {\n      return promise;\n    }\n\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.addIceCandidate = withCallback;\n}\nexport function shimGetUserMedia(window) {\n  var navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    var mediaDevices = navigator.mediaDevices;\n\n    var _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (constraints) {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints).then(cb, errcb);\n    }.bind(navigator);\n  }\n}\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({}, constraints, {\n      video: utils.compactObject(constraints.video)\n    });\n  }\n\n  return constraints;\n}\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  var OrigPeerConnection = window.RTCPeerConnection;\n\n  window.RTCPeerConnection = function RTCPeerConnection(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      var newIceServers = [];\n\n      for (var i = 0; i < pcConfig.iceServers.length; i++) {\n        var server = pcConfig.iceServers[i];\n\n        if (!server.hasOwnProperty('urls') && server.hasOwnProperty('url')) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n\n      pcConfig.iceServers = newIceServers;\n    }\n\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype; // wrap static methods. Currently just generateCertificate.\n\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get: function get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return {\n          receiver: this.receiver\n        };\n      }\n    });\n  }\n}\nexport function shimCreateOfferLegacy(window) {\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n\n  window.RTCPeerConnection.prototype.createOffer = function createOffer(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n\n      var audioTransceiver = this.getTransceivers().find(function (transceiver) {\n        return transceiver.receiver.track.kind === 'audio';\n      });\n\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true && !audioTransceiver) {\n        this.addTransceiver('audio');\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n\n      var videoTransceiver = this.getTransceivers().find(function (transceiver) {\n        return transceiver.receiver.track.kind === 'video';\n      });\n\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true && !videoTransceiver) {\n        this.addTransceiver('video');\n      }\n    }\n\n    return origCreateOffer.apply(this, arguments);\n  };\n}","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  var NativeRTCIceCandidate = window.RTCIceCandidate;\n\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate); // Add a serializer that does not serialize the extra attributes.\n\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment\n        };\n      };\n\n      return augmentedCandidate;\n    }\n\n    return new NativeRTCIceCandidate(args);\n  };\n\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype; // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n\n    return e;\n  });\n}\nexport function shimMaxMessageSize(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get: function get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  var sctpInDescription = function sctpInDescription(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n\n    var sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(function (mediaSection) {\n      var mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n\n    var version = parseInt(match[1], 10); // Test for NaN (yes, this is ugly)\n\n    return version !== version ? -1 : version;\n  };\n\n  var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    var canSendMaxMessageSize = 65536;\n\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n\n    return canSendMaxMessageSize;\n  };\n\n  var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    var maxMessageSize = 65536; // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n\n    return maxMessageSize;\n  };\n\n  var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null; // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      var _this$getConfiguratio = this.getConfiguration(),\n          sdpSemantics = _this$getConfiguratio.sdpSemantics;\n\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get: function get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      var isFirefox = getRemoteFirefoxVersion(arguments[0]); // Get the maximum message size the local peer is capable of sending\n\n      var canSendMMS = getCanSendMaxMessageSize(isFirefox); // Get the maximum message size of the remote peer.\n\n      var remoteMMS = getMaxMessageSize(arguments[0], isFirefox); // Determine final maximum message size\n\n      var maxMessageSize;\n\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      } // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n\n\n      var sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get: function get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  } // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n\n  function wrapDcSend(dc, pc) {\n    var origDataChannelSend = dc.send;\n\n    dc.send = function send() {\n      var data = arguments[0];\n      var length = data.length || data.size || data.byteLength;\n\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n\n  var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    var dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n\n  utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\n\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n\n  var proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get: function get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get: function get() {\n      return this._onconnectionstatechange || null;\n    },\n    set: function set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ['setLocalDescription', 'setRemoteDescription'].forEach(function (method) {\n    var origMethod = proto[method];\n\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = function (e) {\n          var pc = e.target;\n\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            var newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n\n          return e;\n        };\n\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for Chrome < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var browserDetails = utils.detectBrowser(window);\n\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n\n  var nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter(function (line) {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n\n    return nativeSRD.apply(this, arguments);\n  };\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport { adapterFactory } from './adapter_factory.js';\nvar adapter = adapterFactory({\n  window: window\n});\nexport default adapter;","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils'; // Browser shims.\n\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim'; // Shimming starts here.\n\nexport function adapterFactory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      window = _ref.window;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true\n  };\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  }; // Shim browser if found.\n\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming chrome.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = chromeShim;\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming firefox.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = firefoxShim;\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n      firefoxShim.shimAddTransceiver(window);\n      firefoxShim.shimCreateOffer(window);\n      firefoxShim.shimCreateAnswer(window);\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming edge.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = edgeShim;\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window); // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming safari.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = safariShim;\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}"],"sourceRoot":""}